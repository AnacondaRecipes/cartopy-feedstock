Index: Cartopy-0.18.0/lib/cartopy/_epsg.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/_epsg.py
+++ Cartopy-0.18.0/lib/cartopy/_epsg.py
@@ -49,7 +49,7 @@ class _EPSGProjection(ccrs.Projection):
 
         proj4_str = projection.as_proj4().strip()
         terms = [term.strip('+').split('=') for term in proj4_str.split(' ')]
-        globe_terms = filter(lambda term: term[0] in _GLOBE_PARAMS, terms)
+        globe_terms = [term for term in terms if term[0] in _GLOBE_PARAMS]
         globe = ccrs.Globe(**{_GLOBE_PARAMS[name]: value for name, value in
                               globe_terms})
         other_terms = []
Index: Cartopy-0.18.0/lib/cartopy/crs.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/crs.py
+++ Cartopy-0.18.0/lib/cartopy/crs.py
@@ -1740,7 +1740,7 @@ class EckertVI(_Eckert):
 
 
 class EqualEarth(_WarpedRectangularProjection):
-    u"""
+    """
     An Equal Earth projection.
 
     This projection is pseudocylindrical, and equal area. Parallels are
Index: Cartopy-0.18.0/lib/cartopy/io/__init__.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/io/__init__.py
+++ Cartopy-0.18.0/lib/cartopy/io/__init__.py
@@ -33,7 +33,7 @@ import six
 if six.PY3:
     from urllib.request import urlopen
 else:
-    from urllib2 import urlopen
+    from urllib.request import urlopen
 
 from cartopy import config
 
Index: Cartopy-0.18.0/lib/cartopy/io/img_nest.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/io/img_nest.py
+++ Cartopy-0.18.0/lib/cartopy/io/img_nest.py
@@ -39,7 +39,7 @@ class Img(collections.namedtuple('Img', 
                 item = tuple(item)
             new_args.append(item)
         new_kwargs = {}
-        for k, item in kwargs.items():
+        for k, item in list(kwargs.items()):
             if isinstance(item, list):
                 item = tuple(item)
             new_kwargs[k] = item
@@ -307,8 +307,8 @@ class NestedImageCollection(object):
         if _ancestry is not None:
             self._ancestry = _ancestry
         else:
-            parent_wth_children = zip(self._collections,
-                                      self._collections[1:])
+            parent_wth_children = list(zip(self._collections,
+                                      self._collections[1:]))
             for parent_collection, collection in parent_wth_children:
                 for parent_image in parent_collection.images:
                     for image in collection.images:
Index: Cartopy-0.18.0/lib/cartopy/io/img_tiles.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/io/img_tiles.py
+++ Cartopy-0.18.0/lib/cartopy/io/img_tiles.py
@@ -183,7 +183,8 @@ class GoogleWTS(six.with_metaclass(ABCMe
         if six.PY3:
             from urllib.request import urlopen, Request, HTTPError, URLError
         else:
-            from urllib2 import urlopen, Request, HTTPError, URLError
+            from urllib.request import urlopen, Request
+            from urllib.error import HTTPError, URLError
 
         url = self._image_url(tile)
         try:
Index: Cartopy-0.18.0/lib/cartopy/io/ogc_clients.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/io/ogc_clients.py
+++ Cartopy-0.18.0/lib/cartopy/io/ogc_clients.py
@@ -395,7 +395,7 @@ class WMTSRasterSource(RasterSource):
         matrix_set_name = self._matrix_set_name_map.get(key)
         if matrix_set_name is None:
             if hasattr(self.layer, 'tilematrixsetlinks'):
-                matrix_set_names = self.layer.tilematrixsetlinks.keys()
+                matrix_set_names = list(self.layer.tilematrixsetlinks.keys())
             else:
                 matrix_set_names = self.layer.tilematrixsets
 
@@ -415,7 +415,7 @@ class WMTSRasterSource(RasterSource):
             matrix_set_name = find_projection(target_projection)
             if matrix_set_name is None:
                 # Search instead for a set in _any_ projection we can use.
-                for possible_projection in _URN_TO_CRS.values():
+                for possible_projection in list(_URN_TO_CRS.values()):
                     # Look for supported projections (in a preferred order).
                     matrix_set_name = find_projection(possible_projection)
                     if matrix_set_name is not None:
@@ -566,7 +566,7 @@ class WMTSRasterSource(RasterSource):
 
         # Find which tile matrix has the appropriate resolution.
         tile_matrix_set = wmts.tilematrixsets[matrix_set_name]
-        tile_matrices = tile_matrix_set.tilematrix.values()
+        tile_matrices = list(tile_matrix_set.tilematrix.values())
         meters_per_unit = METERS_PER_UNIT[tile_matrix_set.crs]
         tile_matrix = self._choose_matrix(tile_matrices, meters_per_unit,
                                           max_pixel_span)
@@ -803,13 +803,13 @@ class WFSGeometrySource(object):
         geoms_by_srs = {}
         for srs, x, y in linear_rings_data:
             geoms_by_srs.setdefault(srs, []).append(
-                sgeom.LinearRing(zip(x, y)))
+                sgeom.LinearRing(list(zip(x, y))))
         for srs, x, y in linestrings_data:
             geoms_by_srs.setdefault(srs, []).append(
-                sgeom.LineString(zip(x, y)))
+                sgeom.LineString(list(zip(x, y))))
         for srs, x, y in points_data:
             geoms_by_srs.setdefault(srs, []).append(
-                sgeom.Point(zip(x, y)))
+                sgeom.Point(list(zip(x, y))))
         return geoms_by_srs
 
     def _find_polygon_coords(self, node, find_str):
Index: Cartopy-0.18.0/lib/cartopy/io/shapereader.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/io/shapereader.py
+++ Cartopy-0.18.0/lib/cartopy/io/shapereader.py
@@ -178,7 +178,7 @@ class BasicReader(object):
         field_names = [field[0] for field in fields]
         for i in range(self._reader.numRecords):
             shape_record = self._reader.shapeRecord(i)
-            attributes = dict(zip(field_names, shape_record.record))
+            attributes = dict(list(zip(field_names, shape_record.record)))
             yield Record(shape_record.shape, attributes, fields)
 
 
@@ -255,7 +255,7 @@ class FionaReader(object):
         for item in self._data:
             yield FionaRecord(item['geometry'],
                               {key: value for key, value in
-                               item.items() if key != 'geometry'})
+                               list(item.items()) if key != 'geometry'})
 
 
 if _HAS_FIONA:
Index: Cartopy-0.18.0/lib/cartopy/io/srtm.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/io/srtm.py
+++ Cartopy-0.18.0/lib/cartopy/io/srtm.py
@@ -443,7 +443,7 @@ class SRTMDownloader(Downloader):
 
         if SRTMDownloader._SRTM_LOOKUP_MASK[lon, colat]:
             return (SRTMDownloader._SRTM_BASE_URL +
-                    u'{y}{x}.SRTMGL{resolution}.hgt.zip').format(**format_dict)
+                    '{y}{x}.SRTMGL{resolution}.hgt.zip').format(**format_dict)
         else:
             return None
 
@@ -459,7 +459,7 @@ class SRTMDownloader(Downloader):
         srtm_online = self._urlopen(url)
         zfh = ZipFile(six.BytesIO(srtm_online.read()), 'r')
 
-        zip_member_path = u'{y}{x}.hgt'.format(**format_dict)
+        zip_member_path = '{y}{x}.hgt'.format(**format_dict)
         member = zfh.getinfo(zip_member_path)
         with open(target_path, 'wb') as fh:
             fh.write(zfh.open(member).read())
Index: Cartopy-0.18.0/lib/cartopy/mpl/feature_artist.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/mpl/feature_artist.py
+++ Cartopy-0.18.0/lib/cartopy/mpl/feature_artist.py
@@ -51,7 +51,7 @@ def _freeze(obj):
 
     """
     if isinstance(obj, dict):
-        obj = frozenset(((k, _freeze(v)) for k, v in obj.items()))
+        obj = frozenset(((k, _freeze(v)) for k, v in list(obj.items())))
     elif isinstance(obj, list):
         obj = tuple(_freeze(item) for item in obj)
     elif isinstance(obj, np.ndarray):
@@ -207,7 +207,7 @@ class FeatureArtist(matplotlib.artist.Ar
         # Draw one PathCollection per style. We could instead pass an array
         # of style items through to a single PathCollection, but that
         # complexity does not yet justify the effort.
-        for style, paths in stylised_paths.items():
+        for style, paths in list(stylised_paths.items()):
             style = style_finalize(dict(style))
             # Build path collection and draw it.
             c = matplotlib.collections.PathCollection(paths,
Index: Cartopy-0.18.0/lib/cartopy/mpl/geoaxes.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/mpl/geoaxes.py
+++ Cartopy-0.18.0/lib/cartopy/mpl/geoaxes.py
@@ -548,7 +548,7 @@ class GeoAxes(matplotlib.axes.Axes):
         ns = 'N' if lat >= 0.0 else 'S'
         ew = 'E' if lon >= 0.0 else 'W'
 
-        return u'%.4g, %.4g (%f\u00b0%s, %f\u00b0%s)' % (x, y, abs(lat),
+        return '%.4g, %.4g (%f\u00b0%s, %f\u00b0%s)' % (x, y, abs(lat),
                                                          ns, abs(lon), ew)
 
     def coastlines(self, resolution='auto', color='black', **kwargs):
@@ -1405,7 +1405,7 @@ class GeoAxes(matplotlib.axes.Axes):
                                                        locations=locations,
                                                        offset=offset,
                                                        units=units)
-        for spine in spines.values():
+        for spine in list(spines.values()):
             spine.set_visible(False)
 
         spines['geo'] = GeoSpine(self)
Index: Cartopy-0.18.0/lib/cartopy/mpl/gridliner.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/mpl/gridliner.py
+++ Cartopy-0.18.0/lib/cartopy/mpl/gridliner.py
@@ -27,7 +27,7 @@ degree_locator = mticker.MaxNLocator(nbi
 classic_locator = mticker.MaxNLocator(nbins=9)
 classic_formatter = mticker.ScalarFormatter
 
-_DEGREE_SYMBOL = u'\u00B0'
+_DEGREE_SYMBOL = '\u00B0'
 _X_INLINE_PROJS = (
     cartopy.crs.InterruptedGoodeHomolosine,
     cartopy.crs.LambertConformal,
@@ -78,14 +78,14 @@ def _lat_hemisphere(latitude):
 
 
 def _east_west_formatted(longitude, num_format='g'):
-    fmt_string = u'{longitude:{num_format}}{degree}{hemisphere}'
+    fmt_string = '{longitude:{num_format}}{degree}{hemisphere}'
     return fmt_string.format(longitude=abs(longitude), num_format=num_format,
                              hemisphere=_lon_hemisphere(longitude),
                              degree=_DEGREE_SYMBOL)
 
 
 def _north_south_formatted(latitude, num_format='g'):
-    fmt_string = u'{latitude:{num_format}}{degree}{hemisphere}'
+    fmt_string = '{latitude:{num_format}}{degree}{hemisphere}'
     return fmt_string.format(latitude=abs(latitude), num_format=num_format,
                              hemisphere=_lat_hemisphere(latitude),
                              degree=_DEGREE_SYMBOL)
Index: Cartopy-0.18.0/lib/cartopy/mpl/style.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/mpl/style.py
+++ Cartopy-0.18.0/lib/cartopy/mpl/style.py
@@ -68,7 +68,7 @@ def merge(*style_dicts):
     for orig_style in style_dicts:
         this_style = orig_style.copy()
 
-        for alias_from, alias_to in _ALIASES.items():
+        for alias_from, alias_to in list(_ALIASES.items()):
             alias = this_style.pop(alias_from, None)
             if alias_from in orig_style:
                 # n.b. alias_from doesn't trump alias_to
Index: Cartopy-0.18.0/lib/cartopy/mpl/ticker.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/mpl/ticker.py
+++ Cartopy-0.18.0/lib/cartopy/mpl/ticker.py
@@ -34,9 +34,9 @@ class _PlateCarreeFormatter(Formatter):
 
     _target_projection = ccrs.PlateCarree()
 
-    def __init__(self, degree_symbol=u'\u00B0', number_format='g',
+    def __init__(self, degree_symbol='\u00B0', number_format='g',
                  transform_precision=1e-8, dms=False,
-                 minute_symbol=u"'", second_symbol=u"''",
+                 minute_symbol="'", second_symbol="''",
                  seconds_number_format='g',
                  auto_hide=True):
         """
@@ -96,7 +96,7 @@ class _PlateCarreeFormatter(Formatter):
         value, deg, mn, sec = self._get_dms(abs(value))
 
         # Format
-        label = u''
+        label = ''
         if sec:
             label = self._format_seconds(sec)
 
@@ -161,20 +161,20 @@ class _PlateCarreeFormatter(Formatter):
             number_format = 'd'
         else:
             number_format = self._degrees_number_format
-        return u'{value:{number_format}}{symbol}'.format(
+        return '{value:{number_format}}{symbol}'.format(
             value=abs(deg),
             number_format=number_format,
             symbol=self._degree_symbol)
 
     def _format_minutes(self, mn):
         """Format minutes as an integer"""
-        return u'{value:d}{symbol}'.format(
+        return '{value:d}{symbol}'.format(
             value=int(mn),
             symbol=self._minute_symbol)
 
     def _format_seconds(self, sec):
         """Format seconds as an float"""
-        return u'{value:{fmt}}{symbol}'.format(
+        return '{value:{fmt}}{symbol}'.format(
             value=sec,
             fmt=self._seconds_num_format,
             symbol=self._second_symbol)
@@ -202,9 +202,9 @@ class _PlateCarreeFormatter(Formatter):
 
 class LatitudeFormatter(_PlateCarreeFormatter):
     """Tick formatter for latitude axes."""
-    def __init__(self, degree_symbol=u'\u00B0', number_format='g',
+    def __init__(self, degree_symbol='\u00B0', number_format='g',
                  transform_precision=1e-8, dms=False,
-                 minute_symbol=u"'", second_symbol=u"''",
+                 minute_symbol="'", second_symbol="''",
                  seconds_number_format='g', auto_hide=True,
                  ):
         """
@@ -218,7 +218,7 @@ class LatitudeFormatter(_PlateCarreeForm
         ----------
         degree_symbol: optional
             The character(s) used to represent the degree symbol in the
-            tick labels. Defaults to u'\u00B0' which is the unicode
+            tick labels. Defaults to u'\\u00B0' which is the unicode
             degree symbol. Can be an empty string if no degree symbol is
             desired.
         number_format: optional
@@ -306,12 +306,12 @@ class LongitudeFormatter(_PlateCarreeFor
     def __init__(self,
                  zero_direction_label=False,
                  dateline_direction_label=False,
-                 degree_symbol=u'\u00B0',
+                 degree_symbol='\u00B0',
                  number_format='g',
                  transform_precision=1e-8,
                  dms=False,
-                 minute_symbol=u"'",
-                 second_symbol=u"''",
+                 minute_symbol="'",
+                 second_symbol="''",
                  seconds_number_format='g',
                  auto_hide=True,
                  ):
@@ -334,7 +334,7 @@ class LongitudeFormatter(_PlateCarreeFor
             labels will not be drawn. Defaults to *False* (no direction
             labels).
         degree_symbol: optional
-            The symbol used to represent degrees. Defaults to u'\u00B0'
+            The symbol used to represent degrees. Defaults to u'\\u00B0'
             which is the unicode degree symbol.
         number_format: optional
             Format string to represent the latitude values when `dms`
Index: Cartopy-0.18.0/lib/cartopy/sphinxext/summarise_package.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/sphinxext/summarise_package.py
+++ Cartopy-0.18.0/lib/cartopy/sphinxext/summarise_package.py
@@ -112,7 +112,7 @@ def objects_to_document(module_name):
         def is_from_this_module(x):
             return getattr(x[1], '__module__', '') == module_name
 
-        document_these = filter(is_from_this_module, document_these)
+        document_these = list(filter(is_from_this_module, document_these))
         document_these = sorted(document_these,
                                 key=lambda x: (str(type(x[1])),
                                                not x[0].isupper(),
Index: Cartopy-0.18.0/lib/cartopy/tests/mpl/__init__.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/tests/mpl/__init__.py
+++ Cartopy-0.18.0/lib/cartopy/tests/mpl/__init__.py
@@ -312,23 +312,23 @@ def show(projection, geometry):
                                            lw=0, alpha=0.2)
                 plt.gca().add_patch(patch)
             line_string = polygon.exterior
-            plt.plot(*zip(*line_string.coords),
+            plt.plot(*list(zip(*line_string.coords)),
                      marker='+', linestyle='-')
     elif geometry.type == 'MultiPolygon':
         multi_polygon = geometry
         for polygon in multi_polygon:
             line_string = polygon.exterior
-            plt.plot(*zip(*line_string.coords),
+            plt.plot(*list(zip(*line_string.coords)),
                      marker='+', linestyle='-')
 
     elif geometry.type == 'MultiLineString':
         multi_line_string = geometry
         for line_string in multi_line_string:
-            plt.plot(*zip(*line_string.coords),
+            plt.plot(*list(zip(*line_string.coords)),
                      marker='+', linestyle='-')
 
     elif geometry.type == 'LinearRing':
-        plt.plot(*zip(*geometry.coords), marker='+', linestyle='-')
+        plt.plot(*list(zip(*geometry.coords)), marker='+', linestyle='-')
 
     if 1:
         # Whole map domain
@@ -350,7 +350,7 @@ def show(projection, geometry):
         plt.xlim(1.55e7, 1.65e7)
         plt.ylim(0.3e7, 0.4e7)
 
-    plt.plot(*zip(*projection.boundary.coords), marker='o',
+    plt.plot(*list(zip(*projection.boundary.coords)), marker='o',
              scalex=False, scaley=False, zorder=-1)
 
     plt.show()
Index: Cartopy-0.18.0/lib/cartopy/tests/mpl/test_quiver.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/tests/mpl/test_quiver.py
+++ Cartopy-0.18.0/lib/cartopy/tests/mpl/test_quiver.py
@@ -51,7 +51,7 @@ class TestQuiverShapes(object):
                            self.u.ravel(), self.v.ravel(), transform=self.rp)
         args, kwargs = patch.call_args
         assert len(args) == 5
-        assert sorted(kwargs.keys()) == [u'transform']
+        assert sorted(kwargs.keys()) == ['transform']
         shapes = [arg.shape for arg in args[1:]]
         # Assert that all the shapes have been broadcast.
         assert shapes == [(70, )] * 4
@@ -62,7 +62,7 @@ class TestQuiverShapes(object):
             self.ax.quiver(self.x, self.y, self.u, self.v, transform=self.rp)
         args, kwargs = patch.call_args
         assert len(args) == 5
-        assert sorted(kwargs.keys()) == [u'transform']
+        assert sorted(kwargs.keys()) == ['transform']
         shapes = [arg.shape for arg in args[1:]]
         # Assert that all the shapes have been broadcast.
         assert shapes == [(7, 10)] * 4
Index: Cartopy-0.18.0/lib/cartopy/tests/mpl/test_ticker.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/tests/mpl/test_ticker.py
+++ Cartopy-0.18.0/lib/cartopy/tests/mpl/test_ticker.py
@@ -56,8 +56,8 @@ def test_LatitudeFormatter():
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-90, -60, -30, 0, 30, 60, 90]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'90\u00B0S', u'60\u00B0S', u'30\u00B0S', u'0\u00B0',
-                u'30\u00B0N', u'60\u00B0N', u'90\u00B0N']
+    expected = ['90\u00B0S', '60\u00B0S', '30\u00B0S', '0\u00B0',
+                '30\u00B0N', '60\u00B0N', '90\u00B0N']
     assert result == expected
 
 
@@ -67,8 +67,8 @@ def test_LatitudeFormatter_degree_symbol
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-90, -60, -30, 0, 30, 60, 90]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'90S', u'60S', u'30S', u'0',
-                u'30N', u'60N', u'90N']
+    expected = ['90S', '60S', '30S', '0',
+                '30N', '60N', '90N']
     assert result == expected
 
 
@@ -78,9 +78,9 @@ def test_LatitudeFormatter_number_format
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-90, -60, -30, 0, 30, 60, 90]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'90.00\u00B0S', u'60.00\u00B0S', u'30.00\u00B0S',
-                u'0.00\u00B0', u'30.00\u00B0N', u'60.00\u00B0N',
-                u'90.00\u00B0N']
+    expected = ['90.00\u00B0S', '60.00\u00B0S', '30.00\u00B0S',
+                '0.00\u00B0', '30.00\u00B0N', '60.00\u00B0N',
+                '90.00\u00B0N']
     assert result == expected
 
 
@@ -92,8 +92,8 @@ def test_LatitudeFormatter_mercator():
                   -3482189.085407435, 0.0, 3482189.085407435,
                   8362698.548496634, 15496570.739707898]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'80\u00B0S', u'60\u00B0S', u'30\u00B0S', u'0\u00B0',
-                u'30\u00B0N', u'60\u00B0N', u'80\u00B0N']
+    expected = ['80\u00B0S', '60\u00B0S', '30\u00B0S', '0\u00B0',
+                '30\u00B0N', '60\u00B0N', '80\u00B0N']
     assert result == expected
 
 
@@ -103,8 +103,8 @@ def test_LatitudeFormatter_small_numbers
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [40.1275150, 40.1275152, 40.1275154]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'40.1275150\u00B0N', u'40.1275152\u00B0N',
-                u'40.1275154\u00B0N']
+    expected = ['40.1275150\u00B0N', '40.1275152\u00B0N',
+                '40.1275154\u00B0N']
     assert result == expected
 
 
@@ -114,8 +114,8 @@ def test_LongitudeFormatter_central_long
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-180, -120, -60, 0, 60, 120, 180]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'180\u00B0W', u'120\u00B0W', u'60\u00B0W', u'0\u00B0',
-                u'60\u00B0E', u'120\u00B0E', u'180\u00B0E']
+    expected = ['180\u00B0W', '120\u00B0W', '60\u00B0W', '0\u00B0',
+                '60\u00B0E', '120\u00B0E', '180\u00B0E']
     assert result == expected
 
 
@@ -125,8 +125,8 @@ def test_LongitudeFormatter_central_long
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-180, -120, -60, 0, 60, 120, 180]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'0\u00B0E', u'60\u00B0E', u'120\u00B0E', u'180\u00B0',
-                u'120\u00B0W', u'60\u00B0W', u'0\u00B0W']
+    expected = ['0\u00B0E', '60\u00B0E', '120\u00B0E', '180\u00B0',
+                '120\u00B0W', '60\u00B0W', '0\u00B0W']
     assert result == expected
 
 
@@ -136,8 +136,8 @@ def test_LongitudeFormatter_central_long
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-180, -120, -60, 0, 60, 120, 180]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'60\u00B0W', u'0\u00B0', u'60\u00B0E', u'120\u00B0E',
-                u'180\u00B0', u'120\u00B0W', u'60\u00B0W']
+    expected = ['60\u00B0W', '0\u00B0', '60\u00B0E', '120\u00B0E',
+                '180\u00B0', '120\u00B0W', '60\u00B0W']
     assert result == expected
 
 
@@ -148,7 +148,7 @@ def test_LongitudeFormatter_degree_symbo
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-180, -120, -60, 0, 60, 120, 180]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'180W', u'120W', u'60W', u'0', u'60E', u'120E', u'180E']
+    expected = ['180W', '120W', '60W', '0', '60E', '120E', '180E']
     assert result == expected
 
 
@@ -159,9 +159,9 @@ def test_LongitudeFormatter_number_forma
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-180, -120, -60, 0, 60, 120, 180]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'180.00\u00B0W', u'120.00\u00B0W', u'60.00\u00B0W',
-                u'0.00\u00B0', u'60.00\u00B0E', u'120.00\u00B0E',
-                u'180.00\u00B0E']
+    expected = ['180.00\u00B0W', '120.00\u00B0W', '60.00\u00B0W',
+                '0.00\u00B0', '60.00\u00B0E', '120.00\u00B0E',
+                '180.00\u00B0E']
     assert result == expected
 
 
@@ -173,8 +173,8 @@ def test_LongitudeFormatter_mercator():
                   -6679169.447594353, 0.0, 6679169.447594353,
                   13358338.895188706, 20037508.342783064]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'180\u00B0W', u'120\u00B0W', u'60\u00B0W', u'0\u00B0',
-                u'60\u00B0E', u'120\u00B0E', u'180\u00B0E']
+    expected = ['180\u00B0W', '120\u00B0W', '60\u00B0W', '0\u00B0',
+                '60\u00B0E', '120\u00B0E', '180\u00B0E']
     assert result == expected
 
 
@@ -184,8 +184,8 @@ def test_LongitudeFormatter_small_number
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-17.1142343, -17.1142340, -17.1142337]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'17.1142343\u00B0W', u'17.1142340\u00B0W',
-                u'17.1142337\u00B0W']
+    expected = ['17.1142343\u00B0W', '17.1142340\u00B0W',
+                '17.1142337\u00B0W']
     assert result == expected
 
 
@@ -196,20 +196,20 @@ def test_LongitudeFormatter_small_number
     formatter.axis = Mock(axes=Mock(GeoAxes, projection=p))
     test_ticks = [-17.1142343, -17.1142340, -17.1142337]
     result = [formatter(tick) for tick in test_ticks]
-    expected = [u'162.8857657\u00B0E', u'162.8857660\u00B0E',
-                u'162.8857663\u00B0E']
+    expected = ['162.8857657\u00B0E', '162.8857660\u00B0E',
+                '162.8857663\u00B0E']
     assert result == expected
 
 
 @pytest.mark.parametrize("test_ticks,expected",
                          [pytest.param([-3.75, -3.5],
-                                       [u"3\u00B0W45'", u"3\u00B0W30'"],
+                                       ["3\u00B0W45'", "3\u00B0W30'"],
                                        id='minutes_no_hide'),
                           pytest.param([-3.5, -3.],
-                                       [u"30'", u"3\u00B0W"],
+                                       ["30'", "3\u00B0W"],
                                        id='minutes_hide'),
                           pytest.param([-3. - 2 * ONE_MIN - 30 * ONE_SEC],
-                                       [u"3\u00B0W2'30''"],
+                                       ["3\u00B0W2'30''"],
                                        id='seconds'),
                           ])
 def test_LongitudeFormatter_minutes_seconds(test_ticks, expected):
@@ -221,7 +221,7 @@ def test_LongitudeFormatter_minutes_seco
 
 @pytest.mark.parametrize("test_ticks,expected",
                          [pytest.param([-3.75, -3.5],
-                                       [u"3\u00B0S45'", u"3\u00B0S30'"],
+                                       ["3\u00B0S45'", "3\u00B0S30'"],
                                        id='minutes_no_hide'),
                           ])
 def test_LatitudeFormatter_minutes_seconds(test_ticks, expected):
Index: Cartopy-0.18.0/lib/cartopy/tests/test_img_nest.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/tests/test_img_nest.py
+++ Cartopy-0.18.0/lib/cartopy/tests/test_img_nest.py
@@ -166,12 +166,12 @@ def test_intersect(tmpdir):
 
     # Check the image ancestry.
     zoom_levels = ['dummy-z-0', 'dummy-z-1']
-    assert sorted(k[0] for k in nic._ancestry.keys()) == zoom_levels
+    assert sorted(k[0] for k in list(nic._ancestry.keys())) == zoom_levels
 
     expected = [('dummy-z-0', ['p1.tif']),
                 ('dummy-z-1', ['p2-3.tif', 'p2-4.tif', 'p2-5.tif'])]
     for zoom, image_names in expected:
-        key = [k for k in nic._ancestry.keys() if k[0] == zoom][0]
+        key = [k for k in list(nic._ancestry.keys()) if k[0] == zoom][0]
         ancestry = nic._ancestry[key]
         fnames = sorted([os.path.basename(item[1].filename)
                          for item in ancestry])
@@ -249,7 +249,7 @@ def test_nest(nest_from_config):
 
     z0_key = ('aerial z0 test', z0.images[0])
 
-    assert z0_key in nest_z0_z1._ancestry.keys()
+    assert z0_key in list(nest_z0_z1._ancestry.keys())
     assert len(nest_z0_z1._ancestry) == 1
 
     # check that it has figured out that all the z1 images are children of
@@ -269,7 +269,7 @@ def test_nest(nest_from_config):
 
     # check that the the images in the nest from configuration are the
     # same as those created by hand.
-    for name in nest_z0_z1._collections_by_name.keys():
+    for name in list(nest_z0_z1._collections_by_name.keys()):
         for img in nest_z0_z1._collections_by_name[name].images:
             collection = nest_from_config._collections_by_name[name]
             assert img in collection.images
Index: Cartopy-0.18.0/lib/cartopy/tests/test_shapereader.py
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/tests/test_shapereader.py
+++ Cartopy-0.18.0/lib/cartopy/tests/test_shapereader.py
@@ -120,7 +120,7 @@ class TestRivers(object):
                                'name': self.river_name,
                                'name_en': self.river_name,
                                'scalerank': 2}
-        for key, value in river_record.attributes.items():
+        for key, value in list(river_record.attributes.items()):
             if key in expected_attributes:
                 assert value == expected_attributes[key]
         assert river_record.geometry == self.test_river_geometry
Index: Cartopy-0.18.0/setup.py
===================================================================
--- Cartopy-0.18.0.orig/setup.py
+++ Cartopy-0.18.0/setup.py
@@ -4,7 +4,7 @@
 # See COPYING and COPYING.LESSER in the root of the repository for full
 # licensing details.
 
-from __future__ import print_function
+
 
 import fnmatch
 import os
Index: Cartopy-0.18.0/versioneer.py
===================================================================
--- Cartopy-0.18.0.orig/versioneer.py
+++ Cartopy-0.18.0/versioneer.py
@@ -344,11 +344,11 @@ https://creativecommons.org/publicdomain
 
 """
 
-from __future__ import print_function
+
 try:
     import configparser
 except ImportError:
-    import ConfigParser as configparser
+    import configparser as configparser
 import errno
 import json
 import os
@@ -1517,7 +1517,7 @@ def render_pep440_branch_based(pieces):
 
     replacements = {' ': '.', '(': '', ')': ''}
     branch_name = pieces.get('branch')
-    for old, new in replacements.items():
+    for old, new in list(replacements.items()):
         branch_name = branch_name.replace(old, new)
     master = branch_name == 'master'
     maint = re.match(default_maint_branch_regexp,
Index: Cartopy-0.18.0/lib/cartopy/trace.cpp
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/trace.cpp
+++ Cartopy-0.18.0/lib/cartopy/trace.cpp
@@ -1,59 +1,17 @@
-/* Generated by Cython 0.29.17 */
-
-/* BEGIN: Cython Metadata
-{
-    "distutils": {
-        "define_macros": [
-            [
-                "ACCEPT_USE_OF_DEPRECATED_PROJ_API_H",
-                "1"
-            ],
-            [
-                "CYTHON_TRACE_NOGIL",
-                "1"
-            ]
-        ],
-        "depends": [
-            "/home/travis/miniconda/envs/test-environment/include/geos_c.h",
-            "/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/numpy/core/include/numpy/npy_math.h"
-        ],
-        "include_dirs": [
-            "/home/travis/miniconda/envs/test-environment/include",
-            "./lib/cartopy",
-            "/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/numpy/core/include",
-            "/home/travis/miniconda/envs/test-environment/include"
-        ],
-        "language": "c++",
-        "libraries": [
-            "proj",
-            "geos_c"
-        ],
-        "library_dirs": [
-            "/home/travis/miniconda/envs/test-environment/lib",
-            "/home/travis/miniconda/envs/test-environment/lib"
-        ],
-        "name": "cartopy.trace",
-        "runtime_library_dirs": [
-            "/home/travis/miniconda/envs/test-environment/lib"
-        ],
-        "sources": [
-            "lib/cartopy/trace.pyx"
-        ]
-    },
-    "module_name": "cartopy.trace"
-}
-END: Cython Metadata */
+/* Generated by Cython 0.29.24 */
 
+#ifndef PY_SSIZE_T_CLEAN
 #define PY_SSIZE_T_CLEAN
+#endif /* PY_SSIZE_T_CLEAN */
 #include "Python.h"
 #ifndef Py_PYTHON_H
     #error Python headers needed to compile C extensions, please install development version of Python.
 #elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
     #error Cython requires Python 2.6+ or Python 3.3+.
 #else
-#define CYTHON_ABI "0_29_17"
-#define CYTHON_HEX_VERSION 0x001D11F0
-#define CYTHON_FUTURE_DIVISION 0
+#define CYTHON_ABI "0_29_24"
+#define CYTHON_HEX_VERSION 0x001D18F0
+#define CYTHON_FUTURE_DIVISION 1
 #include <stddef.h>
 #ifndef offsetof
   #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
@@ -484,8 +442,12 @@ static CYTHON_INLINE void * PyThread_tss
 #endif
 #if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
   #define CYTHON_PEP393_ENABLED 1
+  #if defined(PyUnicode_IS_READY)
   #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                               0 : _PyUnicode_Ready((PyObject *)(op)))
+  #else
+  #define __Pyx_PyUnicode_READY(op)       (0)
+  #endif
   #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
   #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
   #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
@@ -493,7 +455,15 @@ static CYTHON_INLINE void * PyThread_tss
   #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
   #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
   #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
+  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
+  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
+  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
+  #else
   #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
+  #endif
+  #else
+  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
+  #endif
 #else
   #define CYTHON_PEP393_ENABLED 0
   #define PyUnicode_1BYTE_KIND  1
@@ -556,6 +526,13 @@ static CYTHON_INLINE void * PyThread_tss
 #ifndef PySet_CheckExact
   #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
 #endif
+#if PY_VERSION_HEX >= 0x030900A4
+  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
+  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
+#else
+  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
+  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
+#endif
 #if CYTHON_ASSUME_SAFE_MACROS
   #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
 #else
@@ -595,7 +572,7 @@ static CYTHON_INLINE void * PyThread_tss
   #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
 #endif
 #if PY_MAJOR_VERSION >= 3
-  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
+  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
 #else
   #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
 #endif
@@ -636,11 +613,10 @@ static CYTHON_INLINE float __PYX_NAN() {
 #define __Pyx_truncl truncl
 #endif
 
-
+#define __PYX_MARK_ERR_POS(f_index, lineno) \
+    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
 #define __PYX_ERR(f_index, lineno, Ln_error) \
-{ \
-  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
-}
+    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }
 
 #ifndef __PYX_EXTERN_C
   #ifdef __cplusplus
@@ -873,9 +849,9 @@ static const char *__pyx_filename;
 
 
 static const char *__pyx_f[] = {
-  "lib/cartopy/trace.pyx",
+  "trace.pyx",
   "stringsource",
-  "lib/cartopy/_crs.pxd",
+  "_crs.pxd",
 };
 
 /*--- Type declarations ---*/
@@ -1153,244 +1129,6 @@ static CYTHON_INLINE PyObject* __Pyx_PyO
 /* GetBuiltinName.proto */
 static PyObject *__Pyx_GetBuiltinName(PyObject *name);
 
-/* PyThreadStateGet.proto */
-#if CYTHON_FAST_THREAD_STATE
-#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
-#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
-#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
-#else
-#define __Pyx_PyThreadState_declare
-#define __Pyx_PyThreadState_assign
-#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
-#endif
-
-/* PyErrFetchRestore.proto */
-#if CYTHON_FAST_THREAD_STATE
-#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
-#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
-#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
-#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
-#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
-static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
-static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
-#if CYTHON_COMPILING_IN_CPYTHON
-#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
-#else
-#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
-#endif
-#else
-#define __Pyx_PyErr_Clear() PyErr_Clear()
-#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
-#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
-#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
-#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
-#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
-#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
-#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
-#endif
-
-/* Profile.proto */
-#ifndef CYTHON_PROFILE
-#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
-  #define CYTHON_PROFILE 0
-#else
-  #define CYTHON_PROFILE 1
-#endif
-#endif
-#ifndef CYTHON_TRACE_NOGIL
-  #define CYTHON_TRACE_NOGIL 0
-#else
-  #if CYTHON_TRACE_NOGIL && !defined(CYTHON_TRACE)
-    #define CYTHON_TRACE 1
-  #endif
-#endif
-#ifndef CYTHON_TRACE
-  #define CYTHON_TRACE 0
-#endif
-#if CYTHON_TRACE
-  #undef CYTHON_PROFILE_REUSE_FRAME
-#endif
-#ifndef CYTHON_PROFILE_REUSE_FRAME
-  #define CYTHON_PROFILE_REUSE_FRAME 0
-#endif
-#if CYTHON_PROFILE || CYTHON_TRACE
-  #include "compile.h"
-  #include "frameobject.h"
-  #include "traceback.h"
-  #if CYTHON_PROFILE_REUSE_FRAME
-    #define CYTHON_FRAME_MODIFIER static
-    #define CYTHON_FRAME_DEL(frame)
-  #else
-    #define CYTHON_FRAME_MODIFIER
-    #define CYTHON_FRAME_DEL(frame) Py_CLEAR(frame)
-  #endif
-  #define __Pyx_TraceDeclarations\
-  static PyCodeObject *__pyx_frame_code = NULL;\
-  CYTHON_FRAME_MODIFIER PyFrameObject *__pyx_frame = NULL;\
-  int __Pyx_use_tracing = 0;
-  #define __Pyx_TraceFrameInit(codeobj)\
-  if (codeobj) __pyx_frame_code = (PyCodeObject*) codeobj;
-  #ifdef WITH_THREAD
-  #define __Pyx_TraceCall(funcname, srcfile, firstlineno, nogil, goto_error)\
-  if (nogil) {\
-      if (CYTHON_TRACE_NOGIL) {\
-          PyThreadState *tstate;\
-          PyGILState_STATE state = PyGILState_Ensure();\
-          tstate = __Pyx_PyThreadState_Current;\
-          if (unlikely(tstate->use_tracing) && !tstate->tracing &&\
-                  (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {\
-              __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, tstate, funcname, srcfile, firstlineno);\
-          }\
-          PyGILState_Release(state);\
-          if (unlikely(__Pyx_use_tracing < 0)) goto_error;\
-      }\
-  } else {\
-      PyThreadState* tstate = PyThreadState_GET();\
-      if (unlikely(tstate->use_tracing) && !tstate->tracing &&\
-              (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {\
-          __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, tstate, funcname, srcfile, firstlineno);\
-          if (unlikely(__Pyx_use_tracing < 0)) goto_error;\
-      }\
-  }
-  #else
-  #define __Pyx_TraceCall(funcname, srcfile, firstlineno, nogil, goto_error)\
-  {   PyThreadState* tstate = PyThreadState_GET();\
-      if (unlikely(tstate->use_tracing) && !tstate->tracing &&\
-              (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {\
-          __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, tstate, funcname, srcfile, firstlineno);\
-          if (unlikely(__Pyx_use_tracing < 0)) goto_error;\
-      }\
-  }
-  #endif
-  #define __Pyx_TraceException()\
-  if (likely(!__Pyx_use_tracing)); else {\
-      PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-      if (tstate->use_tracing &&\
-              (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {\
-          tstate->tracing++;\
-          tstate->use_tracing = 0;\
-          PyObject *exc_info = __Pyx_GetExceptionTuple(tstate);\
-          if (exc_info) {\
-              if (CYTHON_TRACE && tstate->c_tracefunc)\
-                  tstate->c_tracefunc(\
-                      tstate->c_traceobj, __pyx_frame, PyTrace_EXCEPTION, exc_info);\
-              tstate->c_profilefunc(\
-                  tstate->c_profileobj, __pyx_frame, PyTrace_EXCEPTION, exc_info);\
-              Py_DECREF(exc_info);\
-          }\
-          tstate->use_tracing = 1;\
-          tstate->tracing--;\
-      }\
-  }
-  static void __Pyx_call_return_trace_func(PyThreadState *tstate, PyFrameObject *frame, PyObject *result) {
-      PyObject *type, *value, *traceback;
-      __Pyx_ErrFetchInState(tstate, &type, &value, &traceback);
-      tstate->tracing++;
-      tstate->use_tracing = 0;
-      if (CYTHON_TRACE && tstate->c_tracefunc)
-          tstate->c_tracefunc(tstate->c_traceobj, frame, PyTrace_RETURN, result);
-      if (tstate->c_profilefunc)
-          tstate->c_profilefunc(tstate->c_profileobj, frame, PyTrace_RETURN, result);
-      CYTHON_FRAME_DEL(frame);
-      tstate->use_tracing = 1;
-      tstate->tracing--;
-      __Pyx_ErrRestoreInState(tstate, type, value, traceback);
-  }
-  #ifdef WITH_THREAD
-  #define __Pyx_TraceReturn(result, nogil)\
-  if (likely(!__Pyx_use_tracing)); else {\
-      if (nogil) {\
-          if (CYTHON_TRACE_NOGIL) {\
-              PyThreadState *tstate;\
-              PyGILState_STATE state = PyGILState_Ensure();\
-              tstate = __Pyx_PyThreadState_Current;\
-              if (tstate->use_tracing) {\
-                  __Pyx_call_return_trace_func(tstate, __pyx_frame, (PyObject*)result);\
-              }\
-              PyGILState_Release(state);\
-          }\
-      } else {\
-          PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-          if (tstate->use_tracing) {\
-              __Pyx_call_return_trace_func(tstate, __pyx_frame, (PyObject*)result);\
-          }\
-      }\
-  }
-  #else
-  #define __Pyx_TraceReturn(result, nogil)\
-  if (likely(!__Pyx_use_tracing)); else {\
-      PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-      if (tstate->use_tracing) {\
-          __Pyx_call_return_trace_func(tstate, __pyx_frame, (PyObject*)result);\
-      }\
-  }
-  #endif
-  static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno);
-  static int __Pyx_TraceSetupAndCall(PyCodeObject** code, PyFrameObject** frame, PyThreadState* tstate, const char *funcname, const char *srcfile, int firstlineno);
-#else
-  #define __Pyx_TraceDeclarations
-  #define __Pyx_TraceFrameInit(codeobj)
-  #define __Pyx_TraceCall(funcname, srcfile, firstlineno, nogil, goto_error)   if ((1)); else goto_error;
-  #define __Pyx_TraceException()
-  #define __Pyx_TraceReturn(result, nogil)
-#endif
-#if CYTHON_TRACE
-  static int __Pyx_call_line_trace_func(PyThreadState *tstate, PyFrameObject *frame, int lineno) {
-      int ret;
-      PyObject *type, *value, *traceback;
-      __Pyx_ErrFetchInState(tstate, &type, &value, &traceback);
-      __Pyx_PyFrame_SetLineNumber(frame, lineno);
-      tstate->tracing++;
-      tstate->use_tracing = 0;
-      ret = tstate->c_tracefunc(tstate->c_traceobj, frame, PyTrace_LINE, NULL);
-      tstate->use_tracing = 1;
-      tstate->tracing--;
-      if (likely(!ret)) {
-          __Pyx_ErrRestoreInState(tstate, type, value, traceback);
-      } else {
-          Py_XDECREF(type);
-          Py_XDECREF(value);
-          Py_XDECREF(traceback);
-      }
-      return ret;
-  }
-  #ifdef WITH_THREAD
-  #define __Pyx_TraceLine(lineno, nogil, goto_error)\
-  if (likely(!__Pyx_use_tracing)); else {\
-      if (nogil) {\
-          if (CYTHON_TRACE_NOGIL) {\
-              int ret = 0;\
-              PyThreadState *tstate;\
-              PyGILState_STATE state = PyGILState_Ensure();\
-              tstate = __Pyx_PyThreadState_Current;\
-              if (unlikely(tstate->use_tracing && tstate->c_tracefunc && __pyx_frame->f_trace)) {\
-                  ret = __Pyx_call_line_trace_func(tstate, __pyx_frame, lineno);\
-              }\
-              PyGILState_Release(state);\
-              if (unlikely(ret)) goto_error;\
-          }\
-      } else {\
-          PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-          if (unlikely(tstate->use_tracing && tstate->c_tracefunc && __pyx_frame->f_trace)) {\
-              int ret = __Pyx_call_line_trace_func(tstate, __pyx_frame, lineno);\
-              if (unlikely(ret)) goto_error;\
-          }\
-      }\
-  }
-  #else
-  #define __Pyx_TraceLine(lineno, nogil, goto_error)\
-  if (likely(!__Pyx_use_tracing)); else {\
-      PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-      if (unlikely(tstate->use_tracing && tstate->c_tracefunc && __pyx_frame->f_trace)) {\
-          int ret = __Pyx_call_line_trace_func(tstate, __pyx_frame, lineno);\
-          if (unlikely(ret)) goto_error;\
-      }\
-  }
-  #endif
-#else
-  #define __Pyx_TraceLine(lineno, nogil, goto_error)   if ((1)); else goto_error;
-#endif
-
 /* PyDictVersioning.proto */
 #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
 #define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
@@ -1438,6 +1176,42 @@ static PyObject *__Pyx__GetModuleGlobalN
 static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
 #endif
 
+/* PyThreadStateGet.proto */
+#if CYTHON_FAST_THREAD_STATE
+#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
+#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
+#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
+#else
+#define __Pyx_PyThreadState_declare
+#define __Pyx_PyThreadState_assign
+#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
+#endif
+
+/* PyErrFetchRestore.proto */
+#if CYTHON_FAST_THREAD_STATE
+#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
+#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
+#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
+#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
+#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
+static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
+static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
+#if CYTHON_COMPILING_IN_CPYTHON
+#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
+#else
+#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
+#endif
+#else
+#define __Pyx_PyErr_Clear() PyErr_Clear()
+#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
+#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
+#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
+#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
+#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
+#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
+#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
+#endif
+
 /* WriteUnraisableException.proto */
 static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                   int lineno, const char *filename,
@@ -1515,6 +1289,29 @@ static CYTHON_INLINE PyObject *__Pyx_Get
 /* RaiseException.proto */
 static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);
 
+/* GCCDiagnostics.proto */
+#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
+#define __Pyx_HAS_GCC_DIAGNOSTIC
+#endif
+
+/* BuildPyUnicode.proto */
+static PyObject* __Pyx_PyUnicode_BuildFromAscii(Py_ssize_t ulength, char* chars, int clength,
+                                                int prepend_sign, char padding_char);
+
+/* CIntToPyUnicode.proto */
+static CYTHON_INLINE PyObject* __Pyx_PyUnicode_From_int(int value, Py_ssize_t width, char padding_char, char format_char);
+
+/* PyObjectFormatAndDecref.proto */
+static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatSimpleAndDecref(PyObject* s, PyObject* f);
+static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatAndDecref(PyObject* s, PyObject* f);
+
+/* IncludeStringH.proto */
+#include <string.h>
+
+/* JoinPyUnicode.proto */
+static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
+                                      Py_UCS4 max_char);
+
 /* RaiseDoubleKeywords.proto */
 static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);
 
@@ -1536,22 +1333,12 @@ static CYTHON_INLINE PyObject* __Pyx_PyO
 #define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
 #endif
 
-/* IncludeStringH.proto */
-#include <string.h>
-
 /* BytesEquals.proto */
 static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);
 
 /* UnicodeEquals.proto */
 static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);
 
-/* StrEquals.proto */
-#if PY_MAJOR_VERSION >= 3
-#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
-#else
-#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
-#endif
-
 /* PySequenceContains.proto */
 static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
     int result = PySequence_Contains(seq, item);
@@ -1608,7 +1395,7 @@ static CYTHON_INLINE int __Pyx_PyList_Ap
     if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
         Py_INCREF(x);
         PyList_SET_ITEM(list, len, x);
-        Py_SIZE(list) = len+1;
+        __Pyx_SET_SIZE(list, len + 1);
         return 0;
     }
     return PyList_Append(list, x);
@@ -1678,69 +1465,6 @@ static PyTypeObject *__Pyx_ImportType(Py
 /* GetVTable.proto */
 static void* __Pyx_GetVtable(PyObject *dict);
 
-/* FetchCommonType.proto */
-static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
-
-/* CythonFunctionShared.proto */
-#define __Pyx_CyFunction_USED 1
-#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
-#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
-#define __Pyx_CYFUNCTION_CCLASS        0x04
-#define __Pyx_CyFunction_GetClosure(f)\
-    (((__pyx_CyFunctionObject *) (f))->func_closure)
-#define __Pyx_CyFunction_GetClassObj(f)\
-    (((__pyx_CyFunctionObject *) (f))->func_classobj)
-#define __Pyx_CyFunction_Defaults(type, f)\
-    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
-#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
-    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
-typedef struct {
-    PyCFunctionObject func;
-#if PY_VERSION_HEX < 0x030500A0
-    PyObject *func_weakreflist;
-#endif
-    PyObject *func_dict;
-    PyObject *func_name;
-    PyObject *func_qualname;
-    PyObject *func_doc;
-    PyObject *func_globals;
-    PyObject *func_code;
-    PyObject *func_closure;
-    PyObject *func_classobj;
-    void *defaults;
-    int defaults_pyobjects;
-    size_t defaults_size;  // used by FusedFunction for copying defaults
-    int flags;
-    PyObject *defaults_tuple;
-    PyObject *defaults_kwdict;
-    PyObject *(*defaults_getter)(PyObject *);
-    PyObject *func_annotations;
-} __pyx_CyFunctionObject;
-static PyTypeObject *__pyx_CyFunctionType = 0;
-#define __Pyx_CyFunction_Check(obj)  (__Pyx_TypeCheck(obj, __pyx_CyFunctionType))
-static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
-                                      int flags, PyObject* qualname,
-                                      PyObject *self,
-                                      PyObject *module, PyObject *globals,
-                                      PyObject* code);
-static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
-                                                         size_t size,
-                                                         int pyobjects);
-static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
-                                                            PyObject *tuple);
-static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
-                                                             PyObject *dict);
-static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
-                                                              PyObject *dict);
-static int __pyx_CyFunction_init(void);
-
-/* CythonFunction.proto */
-static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
-                                      int flags, PyObject* qualname,
-                                      PyObject *closure,
-                                      PyObject *module, PyObject *globals,
-                                      PyObject* code);
-
 /* CLineInTraceback.proto */
 #ifdef CYTHON_CLINE_IN_TRACEBACK
 #define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
@@ -1813,22 +1537,6 @@ static void __Pyx_CppExn2PyErr() {
 }
 #endif
 
-/* CIntToPy.proto */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);
-
-/* Print.proto */
-static int __Pyx_Print(PyObject*, PyObject *, int);
-#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
-static PyObject* __pyx_print = 0;
-static PyObject* __pyx_print_kwargs = 0;
-#endif
-
-/* CIntToPy.proto */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value);
-
-/* CIntToPy.proto */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);
-
 /* CIntFromPy.proto */
 static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);
 
@@ -1841,8 +1549,11 @@ static CYTHON_INLINE int __Pyx_PyInt_As_
 /* CIntFromPy.proto */
 static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);
 
-/* PrintOne.proto */
-static int __Pyx_PrintOne(PyObject* stream, PyObject *o);
+/* CIntToPy.proto */
+static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value);
+
+/* CIntToPy.proto */
+static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);
 
 /* FastTypeChecks.proto */
 #if CYTHON_COMPILING_IN_CPYTHON
@@ -1929,35 +1640,35 @@ int __pyx_module_is_main_cartopy__trace 
 static PyObject *__pyx_builtin_enumerate;
 static PyObject *__pyx_builtin_NotImplementedError;
 static PyObject *__pyx_builtin_TypeError;
+static PyObject *__pyx_builtin_print;
 static PyObject *__pyx_builtin_range;
 static PyObject *__pyx_builtin_KeyError;
 static PyObject *__pyx_builtin_ValueError;
+static const char __pyx_k_d[] = "d";
 static const char __pyx_k_t[] = "t: ";
 static const char __pyx_k_x[] = "x";
 static const char __pyx_k_y[] = "y";
 static const char __pyx_k_IN[] = "IN";
+static const char __pyx_k__3[] = "\n";
+static const char __pyx_k__9[] = "   ";
 static const char __pyx_k_to[] = "to";
 static const char __pyx_k_NAN[] = "NAN";
 static const char __pyx_k_OUT[] = "OUT";
-static const char __pyx_k__15[] = "   ";
-static const char __pyx_k__16[] = ", ";
-static const char __pyx_k__17[] = " (";
-static const char __pyx_k__18[] = ")";
-static const char __pyx_k__19[] = "   => ";
-static const char __pyx_k__20[] = "   => (";
-static const char __pyx_k__25[] = "";
-static const char __pyx_k__31[] = "*";
-static const char __pyx_k_end[] = "end";
+static const char __pyx_k__10[] = ", ";
+static const char __pyx_k__12[] = " (";
+static const char __pyx_k__16[] = ")";
+static const char __pyx_k__18[] = "   => ";
+static const char __pyx_k__19[] = "   => (";
+static const char __pyx_k__23[] = "";
+static const char __pyx_k__28[] = "*";
 static const char __pyx_k_get[] = "get";
 static const char __pyx_k_new[] = "__new__";
 static const char __pyx_k_base[] = "base";
 static const char __pyx_k_dict[] = "__dict__";
-static const char __pyx_k_file[] = "file";
 static const char __pyx_k_geom[] = "_geom";
 static const char __pyx_k_main[] = "__main__";
 static const char __pyx_k_name[] = "__name__";
 static const char __pyx_k_proj[] = "proj";
-static const char __pyx_k_self[] = "self";
 static const char __pyx_k_test[] = "__test__";
 static const char __pyx_k_to_2[] = ") to (";
 static const char __pyx_k_lgeos[] = "lgeos";
@@ -1965,9 +1676,7 @@ static const char __pyx_k_lines[] = "lin
 static const char __pyx_k_print[] = "print";
 static const char __pyx_k_range[] = "range";
 static const char __pyx_k_sgeom[] = "sgeom";
-static const char __pyx_k_state[] = "state";
 static const char __pyx_k_valid[] = "   => valid: ";
-static const char __pyx_k_dict_2[] = "_dict";
 static const char __pyx_k_domain[] = "domain";
 static const char __pyx_k_handle[] = "handle";
 static const char __pyx_k_import[] = "__import__";
@@ -1997,6 +1706,7 @@ static const char __pyx_k_gp_domain[] = 
 static const char __pyx_k_pyx_state[] = "__pyx_state";
 static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
 static const char __pyx_k_threshold[] = "threshold";
+static const char __pyx_k_trace_pyx[] = "trace.pyx";
 static const char __pyx_k_ValueError[] = "ValueError";
 static const char __pyx_k_pyx_result[] = "__pyx_result";
 static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
@@ -2013,7 +1723,6 @@ static const char __pyx_k_proj4_params[]
 static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
 static const char __pyx_k_shapely_geos[] = "shapely.geos";
 static const char __pyx_k_stringsource[] = "stringsource";
-static const char __pyx_k_use_setstate[] = "use_setstate";
 static const char __pyx_k_PROJ4_VERSION[] = "PROJ4_VERSION";
 static const char __pyx_k_cartopy_trace[] = "cartopy.trace";
 static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
@@ -2028,70 +1737,52 @@ static const char __pyx_k_multi_line_str
 static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
 static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
 static const char __pyx_k_g_multi_line_string[] = "g_multi_line_string";
+static const char __pyx_k_pj_transform_failed[] = "pj_transform failed: ";
 static const char __pyx_k_CartesianInterpolator[] = "CartesianInterpolator";
 static const char __pyx_k_SphericalInterpolator[] = "SphericalInterpolator";
-static const char __pyx_k_lib_cartopy_trace_pyx[] = "lib/cartopy/trace.pyx";
-static const char __pyx_k_pj_transform_failed_d_s[] = "pj_transform failed: %d\n%s";
-static const char __pyx_k_Interpolator___reduce_cython[] = "Interpolator.__reduce_cython__";
 static const char __pyx_k_pyx_unpickle_LineAccumulator[] = "__pyx_unpickle_LineAccumulator";
-static const char __pyx_k_Interpolator___setstate_cython[] = "Interpolator.__setstate_cython__";
-static const char __pyx_k_LineAccumulator___reduce_cython[] = "LineAccumulator.__reduce_cython__";
 static const char __pyx_k_This_module_pulls_together_proj[] = "\nThis module pulls together proj, GEOS and ``_crs.pyx`` to implement a function\nto project a `~shapely.geometry.LinearRing` / `~shapely.geometry.LineString`.\nIn general, this should never be called manually, instead leaving the\nprocessing to be done by the :class:`cartopy.crs.Projection` subclasses.\n";
-static const char __pyx_k_CartesianInterpolator___reduce_c[] = "CartesianInterpolator.__reduce_cython__";
-static const char __pyx_k_CartesianInterpolator___setstate[] = "CartesianInterpolator.__setstate_cython__";
 static const char __pyx_k_Incompatible_checksums_s_vs_0x98[] = "Incompatible checksums (%s vs 0x980da98 = (lines))";
-static const char __pyx_k_LineAccumulator___setstate_cytho[] = "LineAccumulator.__setstate_cython__";
 static const char __pyx_k_No_value_specified_for_struct_at[] = "No value specified for struct attribute 'x'";
-static const char __pyx_k_SphericalInterpolator___reduce_c[] = "SphericalInterpolator.__reduce_cython__";
-static const char __pyx_k_SphericalInterpolator___setstate[] = "SphericalInterpolator.__setstate_cython__";
 static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
 static const char __pyx_k_No_value_specified_for_struct_at_2[] = "No value specified for struct attribute 'y'";
-static PyObject *__pyx_kp_s_Bisecting_from;
+static PyObject *__pyx_kp_u_Bisecting_from;
 static PyObject *__pyx_n_s_CartesianInterpolator;
-static PyObject *__pyx_n_s_CartesianInterpolator___reduce_c;
-static PyObject *__pyx_n_s_CartesianInterpolator___setstate;
-static PyObject *__pyx_n_s_IN;
+static PyObject *__pyx_n_u_IN;
 static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x98;
 static PyObject *__pyx_n_s_Interpolator;
-static PyObject *__pyx_n_s_Interpolator___reduce_cython;
-static PyObject *__pyx_n_s_Interpolator___setstate_cython;
 static PyObject *__pyx_n_s_KeyError;
 static PyObject *__pyx_n_s_LineAccumulator;
-static PyObject *__pyx_n_s_LineAccumulator___reduce_cython;
-static PyObject *__pyx_n_s_LineAccumulator___setstate_cytho;
-static PyObject *__pyx_n_s_NAN;
+static PyObject *__pyx_n_u_NAN;
 static PyObject *__pyx_kp_s_No_value_specified_for_struct_at;
 static PyObject *__pyx_kp_s_No_value_specified_for_struct_at_2;
 static PyObject *__pyx_n_s_NotImplementedError;
-static PyObject *__pyx_n_s_OUT;
+static PyObject *__pyx_n_u_OUT;
 static PyObject *__pyx_n_s_PROJ4_VERSION;
 static PyObject *__pyx_n_s_PickleError;
-static PyObject *__pyx_kp_s_Projected_as;
-static PyObject *__pyx_kp_s_Setting_line;
+static PyObject *__pyx_kp_u_Projected_as;
+static PyObject *__pyx_kp_u_Setting_line;
 static PyObject *__pyx_n_s_SphericalInterpolator;
-static PyObject *__pyx_n_s_SphericalInterpolator___reduce_c;
-static PyObject *__pyx_n_s_SphericalInterpolator___setstate;
 static PyObject *__pyx_n_s_TypeError;
 static PyObject *__pyx_n_s_ValueError;
-static PyObject *__pyx_kp_s__15;
-static PyObject *__pyx_kp_s__16;
-static PyObject *__pyx_kp_s__17;
-static PyObject *__pyx_kp_s__18;
-static PyObject *__pyx_kp_s__19;
-static PyObject *__pyx_kp_s__20;
-static PyObject *__pyx_kp_s__25;
-static PyObject *__pyx_n_s__31;
+static PyObject *__pyx_kp_u__10;
+static PyObject *__pyx_kp_u__12;
+static PyObject *__pyx_kp_u__16;
+static PyObject *__pyx_kp_u__18;
+static PyObject *__pyx_kp_u__19;
+static PyObject *__pyx_kp_u__23;
+static PyObject *__pyx_n_s__28;
+static PyObject *__pyx_kp_u__3;
+static PyObject *__pyx_kp_u__9;
 static PyObject *__pyx_n_s_base;
 static PyObject *__pyx_n_s_cartopy__crs;
 static PyObject *__pyx_n_s_cartopy_trace;
 static PyObject *__pyx_n_s_cline_in_traceback;
+static PyObject *__pyx_n_u_d;
 static PyObject *__pyx_n_s_dest_projection;
 static PyObject *__pyx_n_s_dict;
-static PyObject *__pyx_n_s_dict_2;
 static PyObject *__pyx_n_s_domain;
-static PyObject *__pyx_n_s_end;
 static PyObject *__pyx_n_s_enumerate;
-static PyObject *__pyx_n_s_file;
 static PyObject *__pyx_n_s_g_domain;
 static PyObject *__pyx_n_s_g_linear;
 static PyObject *__pyx_n_s_g_multi_line_string;
@@ -2105,24 +1796,24 @@ static PyObject *__pyx_n_s_gp_domain;
 static PyObject *__pyx_n_s_handle;
 static PyObject *__pyx_n_s_import;
 static PyObject *__pyx_n_s_interpolator;
-static PyObject *__pyx_n_s_latlon;
-static PyObject *__pyx_n_s_latlong;
+static PyObject *__pyx_n_u_latlon;
+static PyObject *__pyx_n_u_latlong;
 static PyObject *__pyx_n_s_lgeos;
-static PyObject *__pyx_kp_s_lib_cartopy_trace_pyx;
 static PyObject *__pyx_n_s_lines;
-static PyObject *__pyx_n_s_longlat;
+static PyObject *__pyx_n_u_longlat;
 static PyObject *__pyx_n_s_lonlat;
+static PyObject *__pyx_n_u_lonlat;
 static PyObject *__pyx_n_s_main;
 static PyObject *__pyx_n_s_multi_line_string;
 static PyObject *__pyx_n_s_name;
 static PyObject *__pyx_n_s_new;
 static PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
-static PyObject *__pyx_n_s_o_proj;
-static PyObject *__pyx_n_s_ob_tran;
+static PyObject *__pyx_n_u_o_proj;
+static PyObject *__pyx_n_u_ob_tran;
 static PyObject *__pyx_n_s_pickle;
-static PyObject *__pyx_kp_s_pj_transform_failed_d_s;
+static PyObject *__pyx_kp_u_pj_transform_failed;
 static PyObject *__pyx_n_s_print;
-static PyObject *__pyx_n_s_proj;
+static PyObject *__pyx_n_u_proj;
 static PyObject *__pyx_n_s_proj4_params;
 static PyObject *__pyx_n_s_project_linear;
 static PyObject *__pyx_n_s_pyx_PickleError;
@@ -2136,7 +1827,6 @@ static PyObject *__pyx_n_s_range;
 static PyObject *__pyx_n_s_reduce;
 static PyObject *__pyx_n_s_reduce_cython;
 static PyObject *__pyx_n_s_reduce_ex;
-static PyObject *__pyx_n_s_self;
 static PyObject *__pyx_n_s_setstate;
 static PyObject *__pyx_n_s_setstate_cython;
 static PyObject *__pyx_n_s_sgeom;
@@ -2146,17 +1836,16 @@ static PyObject *__pyx_n_s_src_coords;
 static PyObject *__pyx_n_s_src_crs;
 static PyObject *__pyx_n_s_src_idx;
 static PyObject *__pyx_n_s_src_size;
-static PyObject *__pyx_n_s_state;
 static PyObject *__pyx_kp_s_stringsource;
-static PyObject *__pyx_kp_s_t;
+static PyObject *__pyx_kp_u_t;
 static PyObject *__pyx_n_s_test;
 static PyObject *__pyx_n_s_threshold;
-static PyObject *__pyx_n_s_to;
-static PyObject *__pyx_kp_s_to_2;
-static PyObject *__pyx_n_s_to_meter;
+static PyObject *__pyx_n_u_to;
+static PyObject *__pyx_kp_u_to_2;
+static PyObject *__pyx_n_u_to_meter;
+static PyObject *__pyx_kp_s_trace_pyx;
 static PyObject *__pyx_n_s_update;
-static PyObject *__pyx_n_s_use_setstate;
-static PyObject *__pyx_kp_s_valid;
+static PyObject *__pyx_kp_u_valid;
 static PyObject *__pyx_n_s_x;
 static PyObject *__pyx_n_s_y;
 static int __pyx_pf_7cartopy_5trace_15LineAccumulator___init__(struct __pyx_obj_7cartopy_5trace_LineAccumulator *__pyx_v_self); /* proto */
@@ -2180,39 +1869,29 @@ static PyObject *__pyx_int_1;
 static PyObject *__pyx_int_3;
 static PyObject *__pyx_int_6;
 static PyObject *__pyx_int_159439512;
-static PyObject *__pyx_codeobj_;
+static PyObject *__pyx_tuple_;
+static PyObject *__pyx_tuple__2;
 static PyObject *__pyx_tuple__4;
+static PyObject *__pyx_tuple__5;
 static PyObject *__pyx_tuple__6;
+static PyObject *__pyx_tuple__7;
 static PyObject *__pyx_tuple__8;
-static PyObject *__pyx_tuple__10;
-static PyObject *__pyx_tuple__12;
+static PyObject *__pyx_tuple__11;
+static PyObject *__pyx_tuple__13;
 static PyObject *__pyx_tuple__14;
+static PyObject *__pyx_tuple__15;
+static PyObject *__pyx_tuple__17;
+static PyObject *__pyx_tuple__20;
+static PyObject *__pyx_tuple__21;
 static PyObject *__pyx_tuple__22;
-static PyObject *__pyx_tuple__23;
 static PyObject *__pyx_tuple__24;
+static PyObject *__pyx_tuple__25;
 static PyObject *__pyx_tuple__26;
 static PyObject *__pyx_tuple__27;
 static PyObject *__pyx_tuple__29;
-static PyObject *__pyx_tuple__30;
-static PyObject *__pyx_tuple__32;
-static PyObject *__pyx_tuple__33;
-static PyObject *__pyx_tuple__34;
-static PyObject *__pyx_tuple__35;
-static PyObject *__pyx_tuple__36;
-static PyObject *__pyx_tuple__37;
-static PyObject *__pyx_tuple__38;
-static PyObject *__pyx_tuple__39;
-static PyObject *__pyx_tuple__40;
-static PyObject *__pyx_tuple__41;
-static PyObject *__pyx_codeobj__2;
-static PyObject *__pyx_codeobj__3;
-static PyObject *__pyx_codeobj__5;
-static PyObject *__pyx_codeobj__7;
-static PyObject *__pyx_codeobj__9;
-static PyObject *__pyx_codeobj__11;
-static PyObject *__pyx_codeobj__13;
-static PyObject *__pyx_codeobj__21;
-static PyObject *__pyx_codeobj__28;
+static PyObject *__pyx_tuple__31;
+static PyObject *__pyx_codeobj__30;
+static PyObject *__pyx_codeobj__32;
 /* Late includes */
 
 /* "cartopy/trace.pyx":75
@@ -2226,13 +1905,14 @@ static PyObject *__pyx_codeobj__28;
 static GEOSContextHandle_t __pyx_f_7cartopy_5trace_get_geos_context_handle(void) {
   uintptr_t __pyx_v_handle;
   GEOSContextHandle_t __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   uintptr_t __pyx_t_3;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("get_geos_context_handle", 0);
-  __Pyx_TraceCall("get_geos_context_handle", __pyx_f[0], 75, 0, __PYX_ERR(0, 75, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":76
  * 
@@ -2241,7 +1921,6 @@ static GEOSContextHandle_t __pyx_f_7cart
  *     return <GEOSContextHandle_t>handle
  * 
  */
-  __Pyx_TraceLine(76,0,__PYX_ERR(0, 76, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_lgeos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 76, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_geos_handle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 76, __pyx_L1_error)
@@ -2258,7 +1937,6 @@ static GEOSContextHandle_t __pyx_f_7cart
  * 
  * 
  */
-  __Pyx_TraceLine(77,0,__PYX_ERR(0, 77, __pyx_L1_error))
   __pyx_r = ((GEOSContextHandle_t)__pyx_v_handle);
   goto __pyx_L0;
 
@@ -2277,7 +1955,6 @@ static GEOSContextHandle_t __pyx_f_7cart
   __Pyx_WriteUnraisable("cartopy.trace.get_geos_context_handle", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
   __pyx_r = 0;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -2293,12 +1970,13 @@ static GEOSContextHandle_t __pyx_f_7cart
 static GEOSGeometry *__pyx_f_7cartopy_5trace_geos_from_shapely(PyObject *__pyx_v_shapely_geom) {
   uintptr_t __pyx_v_geos_geom;
   GEOSGeometry *__pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   uintptr_t __pyx_t_2;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("geos_from_shapely", 0);
-  __Pyx_TraceCall("geos_from_shapely", __pyx_f[0], 80, 0, __PYX_ERR(0, 80, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":82
  * cdef GEOSGeometry *geos_from_shapely(shapely_geom) except *:
@@ -2307,7 +1985,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *     return <GEOSGeometry *>geos_geom
  * 
  */
-  __Pyx_TraceLine(82,0,__PYX_ERR(0, 82, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_shapely_geom, __pyx_n_s_geom); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 82, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_2 = __Pyx_PyInt_As_size_t(__pyx_t_1); if (unlikely((__pyx_t_2 == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 82, __pyx_L1_error)
@@ -2321,7 +1998,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  * 
  * 
  */
-  __Pyx_TraceLine(83,0,__PYX_ERR(0, 83, __pyx_L1_error))
   __pyx_r = ((GEOSGeometry *)__pyx_v_geos_geom);
   goto __pyx_L0;
 
@@ -2339,7 +2015,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
   __Pyx_AddTraceback("cartopy.trace.geos_from_shapely", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = 0;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -2354,14 +2029,15 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
 
 static PyObject *__pyx_f_7cartopy_5trace_shapely_from_geos(GEOSGeometry *__pyx_v_geom) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   PyObject *__pyx_t_3 = NULL;
   PyObject *__pyx_t_4 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("shapely_from_geos", 0);
-  __Pyx_TraceCall("shapely_from_geos", __pyx_f[0], 86, 0, __PYX_ERR(0, 86, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":88
  * cdef shapely_from_geos(GEOSGeometry *geom):
@@ -2370,7 +2046,6 @@ static PyObject *__pyx_f_7cartopy_5trace
  * 
  * 
  */
-  __Pyx_TraceLine(88,0,__PYX_ERR(0, 88, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sgeom); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 88, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
@@ -2420,7 +2095,6 @@ static PyObject *__pyx_f_7cartopy_5trace
   __pyx_r = 0;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -2435,10 +2109,8 @@ static PyObject *__pyx_f_7cartopy_5trace
 
 static bool __pyx_f_7cartopy_5trace_degenerate_line(__pyx_t_7cartopy_5trace_Line const &__pyx_v_value) {
   bool __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("degenerate_line", 0);
-  __Pyx_TraceCall("degenerate_line", __pyx_f[0], 98, 0, __PYX_ERR(0, 98, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":99
  * 
@@ -2447,7 +2119,6 @@ static bool __pyx_f_7cartopy_5trace_dege
  * 
  * 
  */
-  __Pyx_TraceLine(99,0,__PYX_ERR(0, 99, __pyx_L1_error))
   __pyx_r = (__pyx_v_value.size() < 2);
   goto __pyx_L0;
 
@@ -2460,11 +2131,7 @@ static bool __pyx_f_7cartopy_5trace_dege
  */
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.degenerate_line", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_r = 0;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -2479,10 +2146,8 @@ static bool __pyx_f_7cartopy_5trace_dege
 
 static bool __pyx_f_7cartopy_5trace_close(double __pyx_v_a, double __pyx_v_b) {
   bool __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("close", 0);
-  __Pyx_TraceCall("close", __pyx_f[0], 102, 0, __PYX_ERR(0, 102, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":103
  * 
@@ -2491,7 +2156,6 @@ static bool __pyx_f_7cartopy_5trace_clos
  * 
  * 
  */
-  __Pyx_TraceLine(103,0,__PYX_ERR(0, 103, __pyx_L1_error))
   __pyx_r = (fabs((__pyx_v_a - __pyx_v_b)) <= (1e-8 + (1e-5 * fabs(__pyx_v_b))));
   goto __pyx_L0;
 
@@ -2504,11 +2168,7 @@ static bool __pyx_f_7cartopy_5trace_clos
  */
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.close", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_r = 0;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -2539,10 +2199,8 @@ static int __pyx_pw_7cartopy_5trace_15Li
 
 static int __pyx_pf_7cartopy_5trace_15LineAccumulator___init__(struct __pyx_obj_7cartopy_5trace_LineAccumulator *__pyx_v_self) {
   int __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__init__", 0);
-  __Pyx_TraceCall("__init__", __pyx_f[0], 110, 0, __PYX_ERR(0, 110, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":111
  * 
@@ -2551,7 +2209,6 @@ static int __pyx_pf_7cartopy_5trace_15Li
  * 
  *     cdef void new_line(self):
  */
-  __Pyx_TraceLine(111,0,__PYX_ERR(0, 111, __pyx_L1_error))
   __pyx_f_7cartopy_5trace_15LineAccumulator_new_line(__pyx_v_self);
 
   /* "cartopy/trace.pyx":110
@@ -2564,12 +2221,6 @@ static int __pyx_pf_7cartopy_5trace_15Li
 
   /* function exit code */
   __pyx_r = 0;
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_AddTraceback("cartopy.trace.LineAccumulator.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = -1;
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -2584,10 +2235,8 @@ static int __pyx_pf_7cartopy_5trace_15Li
 
 static void __pyx_f_7cartopy_5trace_15LineAccumulator_new_line(struct __pyx_obj_7cartopy_5trace_LineAccumulator *__pyx_v_self) {
   __pyx_t_7cartopy_5trace_Line __pyx_v_line;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("new_line", 0);
-  __Pyx_TraceCall("new_line", __pyx_f[0], 113, 0, __PYX_ERR(0, 113, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":115
  *     cdef void new_line(self):
@@ -2596,7 +2245,6 @@ static void __pyx_f_7cartopy_5trace_15Li
  * 
  *     cdef void add_point(self, const Point &point):
  */
-  __Pyx_TraceLine(115,0,__PYX_ERR(0, 115, __pyx_L1_error))
   __pyx_v_self->lines.push_back(__pyx_v_line);
 
   /* "cartopy/trace.pyx":113
@@ -2608,11 +2256,6 @@ static void __pyx_f_7cartopy_5trace_15Li
  */
 
   /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.LineAccumulator.new_line", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -2625,10 +2268,8 @@ static void __pyx_f_7cartopy_5trace_15Li
  */
 
 static void __pyx_f_7cartopy_5trace_15LineAccumulator_add_point(struct __pyx_obj_7cartopy_5trace_LineAccumulator *__pyx_v_self, __pyx_t_7cartopy_5trace_Point const &__pyx_v_point) {
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("add_point", 0);
-  __Pyx_TraceCall("add_point", __pyx_f[0], 117, 0, __PYX_ERR(0, 117, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":118
  * 
@@ -2637,7 +2278,6 @@ static void __pyx_f_7cartopy_5trace_15Li
  * 
  *     cdef void add_point_if_empty(self, const Point &point):
  */
-  __Pyx_TraceLine(118,0,__PYX_ERR(0, 118, __pyx_L1_error))
   __pyx_v_self->lines.back().push_back(__pyx_v_point);
 
   /* "cartopy/trace.pyx":117
@@ -2649,11 +2289,6 @@ static void __pyx_f_7cartopy_5trace_15Li
  */
 
   /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.LineAccumulator.add_point", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -2666,11 +2301,9 @@ static void __pyx_f_7cartopy_5trace_15Li
  */
 
 static void __pyx_f_7cartopy_5trace_15LineAccumulator_add_point_if_empty(struct __pyx_obj_7cartopy_5trace_LineAccumulator *__pyx_v_self, __pyx_t_7cartopy_5trace_Point const &__pyx_v_point) {
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   __Pyx_RefNannySetupContext("add_point_if_empty", 0);
-  __Pyx_TraceCall("add_point_if_empty", __pyx_f[0], 120, 0, __PYX_ERR(0, 120, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":121
  * 
@@ -2679,7 +2312,6 @@ static void __pyx_f_7cartopy_5trace_15Li
  *             self.add_point(point)
  * 
  */
-  __Pyx_TraceLine(121,0,__PYX_ERR(0, 121, __pyx_L1_error))
   __pyx_t_1 = (__pyx_v_self->lines.back().empty() != 0);
   if (__pyx_t_1) {
 
@@ -2690,7 +2322,6 @@ static void __pyx_f_7cartopy_5trace_15Li
  * 
  *     cdef GEOSGeometry *as_geom(self, GEOSContextHandle_t handle):
  */
-    __Pyx_TraceLine(122,0,__PYX_ERR(0, 122, __pyx_L1_error))
     __pyx_f_7cartopy_5trace_15LineAccumulator_add_point(__pyx_v_self, __pyx_v_point);
 
     /* "cartopy/trace.pyx":121
@@ -2711,11 +2342,6 @@ static void __pyx_f_7cartopy_5trace_15Li
  */
 
   /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.LineAccumulator.add_point_if_empty", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -2738,7 +2364,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
   GEOSCoordSequence *__pyx_v_coords;
   GEOSGeometry *__pyx_v_geom;
   GEOSGeometry *__pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   int __pyx_t_2;
@@ -2751,8 +2376,10 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
   Py_ssize_t __pyx_t_9;
   PyObject *(*__pyx_t_10)(PyObject *);
   __pyx_t_7cartopy_5trace_Point __pyx_t_11;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("as_geom", 0);
-  __Pyx_TraceCall("as_geom", __pyx_f[0], 124, 0, __PYX_ERR(0, 124, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":127
  *         from cython.operator cimport dereference, preincrement
@@ -2761,7 +2388,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *         while it != self.lines.end():
  *             if degenerate_line(dereference(it)):
  */
-  __Pyx_TraceLine(127,0,__PYX_ERR(0, 127, __pyx_L1_error))
   __pyx_v_it = __pyx_v_self->lines.begin();
 
   /* "cartopy/trace.pyx":128
@@ -2771,7 +2397,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *             if degenerate_line(dereference(it)):
  *                 it = self.lines.erase(it)
  */
-  __Pyx_TraceLine(128,0,__PYX_ERR(0, 128, __pyx_L1_error))
   while (1) {
     __pyx_t_1 = ((__pyx_v_it != __pyx_v_self->lines.end()) != 0);
     if (!__pyx_t_1) break;
@@ -2783,7 +2408,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *                 it = self.lines.erase(it)
  *             else:
  */
-    __Pyx_TraceLine(129,0,__PYX_ERR(0, 129, __pyx_L1_error))
     __pyx_t_1 = (__pyx_f_7cartopy_5trace_degenerate_line((*__pyx_v_it)) != 0);
     if (__pyx_t_1) {
 
@@ -2794,7 +2418,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *             else:
  *                 preincrement(it)
  */
-      __Pyx_TraceLine(130,0,__PYX_ERR(0, 130, __pyx_L1_error))
       __pyx_v_it = __pyx_v_self->lines.erase(__pyx_v_it);
 
       /* "cartopy/trace.pyx":129
@@ -2814,7 +2437,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  * 
  *         cdef Point first, last
  */
-    __Pyx_TraceLine(132,0,__PYX_ERR(0, 132, __pyx_L1_error))
     /*else*/ {
       (void)((++__pyx_v_it));
     }
@@ -2828,7 +2450,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *             first = self.lines.front().front()
  *             last = self.lines.back().back()
  */
-  __Pyx_TraceLine(135,0,__PYX_ERR(0, 135, __pyx_L1_error))
   __pyx_t_1 = ((__pyx_v_self->lines.size() > 1) != 0);
   if (__pyx_t_1) {
 
@@ -2839,7 +2460,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *             last = self.lines.back().back()
  *             if close(first.x, last.x) and close(first.y, last.y):
  */
-    __Pyx_TraceLine(136,0,__PYX_ERR(0, 136, __pyx_L1_error))
     __pyx_v_first = __pyx_v_self->lines.front().front();
 
     /* "cartopy/trace.pyx":137
@@ -2849,7 +2469,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *             if close(first.x, last.x) and close(first.y, last.y):
  *                 self.lines.front().pop_front()
  */
-    __Pyx_TraceLine(137,0,__PYX_ERR(0, 137, __pyx_L1_error))
     __pyx_v_last = __pyx_v_self->lines.back().back();
 
     /* "cartopy/trace.pyx":138
@@ -2859,7 +2478,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *                 self.lines.front().pop_front()
  *                 self.lines.back().splice(self.lines.back().end(),
  */
-    __Pyx_TraceLine(138,0,__PYX_ERR(0, 138, __pyx_L1_error))
     __pyx_t_2 = (__pyx_f_7cartopy_5trace_close(__pyx_v_first.x, __pyx_v_last.x) != 0);
     if (__pyx_t_2) {
     } else {
@@ -2878,7 +2496,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *                 self.lines.back().splice(self.lines.back().end(),
  *                                          self.lines.front())
  */
-      __Pyx_TraceLine(139,0,__PYX_ERR(0, 139, __pyx_L1_error))
       __pyx_v_self->lines.front().pop_front();
 
       /* "cartopy/trace.pyx":140
@@ -2888,7 +2505,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *                                          self.lines.front())
  *                 self.lines.pop_front()
  */
-      __Pyx_TraceLine(140,0,__PYX_ERR(0, 140, __pyx_L1_error))
       __pyx_v_self->lines.back().splice(__pyx_v_self->lines.back().end(), __pyx_v_self->lines.front());
 
       /* "cartopy/trace.pyx":142
@@ -2898,7 +2514,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  * 
  *         cdef Line ilines
  */
-      __Pyx_TraceLine(142,0,__PYX_ERR(0, 142, __pyx_L1_error))
       __pyx_v_self->lines.pop_front();
 
       /* "cartopy/trace.pyx":138
@@ -2926,7 +2541,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *             coords = GEOSCoordSeq_create_r(handle, ilines.size(), 2)
  *             for i, ipoints in enumerate(ilines):
  */
-  __Pyx_TraceLine(149,0,__PYX_ERR(0, 149, __pyx_L1_error))
   __pyx_t_4 = &__pyx_v_self->lines;
   __pyx_t_3 = __pyx_t_4->begin();
   for (;;) {
@@ -2942,7 +2556,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *             for i, ipoints in enumerate(ilines):
  *                 GEOSCoordSeq_setX_r(handle, coords, i, ipoints.x)
  */
-    __Pyx_TraceLine(150,0,__PYX_ERR(0, 150, __pyx_L1_error))
     __pyx_v_coords = GEOSCoordSeq_create_r(__pyx_v_handle, __pyx_v_ilines.size(), 2);
 
     /* "cartopy/trace.pyx":151
@@ -2952,7 +2565,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *                 GEOSCoordSeq_setX_r(handle, coords, i, ipoints.x)
  *                 GEOSCoordSeq_setY_r(handle, coords, i, ipoints.y)
  */
-    __Pyx_TraceLine(151,0,__PYX_ERR(0, 151, __pyx_L1_error))
     __pyx_t_6 = 0;
     __pyx_t_7 = __pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Point(__pyx_v_ilines); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 151, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_7);
@@ -3009,7 +2621,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *                 GEOSCoordSeq_setY_r(handle, coords, i, ipoints.y)
  * 
  */
-      __Pyx_TraceLine(152,0,__PYX_ERR(0, 152, __pyx_L1_error))
       (void)(GEOSCoordSeq_setX_r(__pyx_v_handle, __pyx_v_coords, __pyx_v_i, __pyx_v_ipoints.x));
 
       /* "cartopy/trace.pyx":153
@@ -3019,7 +2630,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  * 
  *             geoms.push_back(GEOSGeom_createLineString_r(handle, coords))
  */
-      __Pyx_TraceLine(153,0,__PYX_ERR(0, 153, __pyx_L1_error))
       (void)(GEOSCoordSeq_setY_r(__pyx_v_handle, __pyx_v_coords, __pyx_v_i, __pyx_v_ipoints.y));
 
       /* "cartopy/trace.pyx":151
@@ -3029,7 +2639,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *                 GEOSCoordSeq_setX_r(handle, coords, i, ipoints.x)
  *                 GEOSCoordSeq_setY_r(handle, coords, i, ipoints.y)
  */
-      __Pyx_TraceLine(151,0,__PYX_ERR(0, 151, __pyx_L1_error))
     }
     __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
 
@@ -3040,7 +2649,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  * 
  *         cdef GEOSGeometry *geom
  */
-    __Pyx_TraceLine(155,0,__PYX_ERR(0, 155, __pyx_L1_error))
     try {
       __pyx_v_geoms.push_back(GEOSGeom_createLineString_r(__pyx_v_handle, __pyx_v_coords));
     } catch(...) {
@@ -3055,7 +2663,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *             coords = GEOSCoordSeq_create_r(handle, ilines.size(), 2)
  *             for i, ipoints in enumerate(ilines):
  */
-    __Pyx_TraceLine(149,0,__PYX_ERR(0, 149, __pyx_L1_error))
   }
 
   /* "cartopy/trace.pyx":158
@@ -3065,7 +2672,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *             geom = GEOSGeom_createEmptyCollection_r(handle,
  *                                                     GEOS_MULTILINESTRING)
  */
-  __Pyx_TraceLine(158,0,__PYX_ERR(0, 158, __pyx_L1_error))
   __pyx_t_1 = (__pyx_v_geoms.empty() != 0);
   if (__pyx_t_1) {
 
@@ -3076,7 +2682,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *                                                     GEOS_MULTILINESTRING)
  *         else:
  */
-    __Pyx_TraceLine(159,0,__PYX_ERR(0, 159, __pyx_L1_error))
     __pyx_v_geom = GEOSGeom_createEmptyCollection_r(__pyx_v_handle, GEOS_MULTILINESTRING);
 
     /* "cartopy/trace.pyx":158
@@ -3096,7 +2701,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *                                                &geoms[0], geoms.size())
  *         return geom
  */
-  __Pyx_TraceLine(162,0,__PYX_ERR(0, 162, __pyx_L1_error))
   /*else*/ {
 
     /* "cartopy/trace.pyx":163
@@ -3106,7 +2710,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  *         return geom
  * 
  */
-    __Pyx_TraceLine(163,0,__PYX_ERR(0, 163, __pyx_L1_error))
     __pyx_v_geom = GEOSGeom_createCollection_r(__pyx_v_handle, GEOS_MULTILINESTRING, (&(__pyx_v_geoms[0])), __pyx_v_geoms.size());
   }
   __pyx_L14:;
@@ -3118,7 +2721,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
  * 
  *     cdef size_t size(self):
  */
-  __Pyx_TraceLine(164,0,__PYX_ERR(0, 164, __pyx_L1_error))
   __pyx_r = __pyx_v_geom;
   goto __pyx_L0;
 
@@ -3137,7 +2739,6 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
   __Pyx_WriteUnraisable("cartopy.trace.LineAccumulator.as_geom", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
   __pyx_r = 0;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3152,10 +2753,8 @@ static GEOSGeometry *__pyx_f_7cartopy_5t
 
 static size_t __pyx_f_7cartopy_5trace_15LineAccumulator_size(struct __pyx_obj_7cartopy_5trace_LineAccumulator *__pyx_v_self) {
   size_t __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("size", 0);
-  __Pyx_TraceCall("size", __pyx_f[0], 166, 0, __PYX_ERR(0, 166, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":167
  * 
@@ -3164,7 +2763,6 @@ static size_t __pyx_f_7cartopy_5trace_15
  * 
  * 
  */
-  __Pyx_TraceLine(167,0,__PYX_ERR(0, 167, __pyx_L1_error))
   __pyx_r = __pyx_v_self->lines.size();
   goto __pyx_L0;
 
@@ -3177,11 +2775,7 @@ static size_t __pyx_f_7cartopy_5trace_15
  */
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.LineAccumulator.size", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_r = 0;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3195,7 +2789,6 @@ static size_t __pyx_f_7cartopy_5trace_15
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_5trace_15LineAccumulator_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static char __pyx_doc_7cartopy_5trace_15LineAccumulator_2__reduce_cython__[] = "LineAccumulator.__reduce_cython__(self)";
-static PyMethodDef __pyx_mdef_7cartopy_5trace_15LineAccumulator_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)__pyx_pw_7cartopy_5trace_15LineAccumulator_3__reduce_cython__, METH_NOARGS, __pyx_doc_7cartopy_5trace_15LineAccumulator_2__reduce_cython__};
 static PyObject *__pyx_pw_7cartopy_5trace_15LineAccumulator_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -3212,16 +2805,16 @@ static PyObject *__pyx_pf_7cartopy_5trac
   PyObject *__pyx_v__dict = 0;
   int __pyx_v_use_setstate;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   int __pyx_t_3;
   int __pyx_t_4;
   PyObject *__pyx_t_5 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj_)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__reduce_cython__", 0);
-  __Pyx_TraceCall("__reduce_cython__", __pyx_f[1], 1, 0, __PYX_ERR(1, 1, __pyx_L1_error));
 
   /* "(tree fragment)":5
  *     cdef object _dict
@@ -3230,7 +2823,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     _dict = getattr(self, '__dict__', None)
  *     if _dict is not None:
  */
-  __Pyx_TraceLine(5,0,__PYX_ERR(1, 5, __pyx_L1_error))
   __pyx_t_1 = __pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Line(__pyx_v_self->lines); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
@@ -3248,7 +2840,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     if _dict is not None:
  *         state += (_dict,)
  */
-  __Pyx_TraceLine(6,0,__PYX_ERR(1, 6, __pyx_L1_error))
   __pyx_t_2 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_v__dict = __pyx_t_2;
@@ -3261,7 +2852,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         state += (_dict,)
  *         use_setstate = True
  */
-  __Pyx_TraceLine(7,0,__PYX_ERR(1, 7, __pyx_L1_error))
   __pyx_t_3 = (__pyx_v__dict != Py_None);
   __pyx_t_4 = (__pyx_t_3 != 0);
   if (__pyx_t_4) {
@@ -3273,7 +2863,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         use_setstate = True
  *     else:
  */
-    __Pyx_TraceLine(8,0,__PYX_ERR(1, 8, __pyx_L1_error))
     __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 8, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __Pyx_INCREF(__pyx_v__dict);
@@ -3292,7 +2881,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     else:
  *         use_setstate = False
  */
-    __Pyx_TraceLine(9,0,__PYX_ERR(1, 9, __pyx_L1_error))
     __pyx_v_use_setstate = 1;
 
     /* "(tree fragment)":7
@@ -3312,7 +2900,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     if use_setstate:
  *         return __pyx_unpickle_LineAccumulator, (type(self), 0x980da98, None), state
  */
-  __Pyx_TraceLine(11,0,__PYX_ERR(1, 11, __pyx_L1_error))
   /*else*/ {
     __pyx_v_use_setstate = 0;
   }
@@ -3325,7 +2912,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         return __pyx_unpickle_LineAccumulator, (type(self), 0x980da98, None), state
  *     else:
  */
-  __Pyx_TraceLine(12,0,__PYX_ERR(1, 12, __pyx_L1_error))
   __pyx_t_4 = (__pyx_v_use_setstate != 0);
   if (__pyx_t_4) {
 
@@ -3336,7 +2922,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     else:
  *         return __pyx_unpickle_LineAccumulator, (type(self), 0x980da98, state)
  */
-    __Pyx_TraceLine(13,0,__PYX_ERR(1, 13, __pyx_L1_error))
     __Pyx_XDECREF(__pyx_r);
     __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pyx_unpickle_LineAccumulator); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
@@ -3382,7 +2967,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * def __setstate_cython__(self, __pyx_state):
  *     __pyx_unpickle_LineAccumulator__set_state(self, __pyx_state)
  */
-  __Pyx_TraceLine(15,0,__PYX_ERR(1, 15, __pyx_L1_error))
   /*else*/ {
     __Pyx_XDECREF(__pyx_r);
     __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_LineAccumulator); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
@@ -3428,7 +3012,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __Pyx_XDECREF(__pyx_v_state);
   __Pyx_XDECREF(__pyx_v__dict);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3443,7 +3026,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_5trace_15LineAccumulator_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
 static char __pyx_doc_7cartopy_5trace_15LineAccumulator_4__setstate_cython__[] = "LineAccumulator.__setstate_cython__(self, __pyx_state)";
-static PyMethodDef __pyx_mdef_7cartopy_5trace_15LineAccumulator_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)__pyx_pw_7cartopy_5trace_15LineAccumulator_5__setstate_cython__, METH_O, __pyx_doc_7cartopy_5trace_15LineAccumulator_4__setstate_cython__};
 static PyObject *__pyx_pw_7cartopy_5trace_15LineAccumulator_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -3457,19 +3039,18 @@ static PyObject *__pyx_pw_7cartopy_5trac
 
 static PyObject *__pyx_pf_7cartopy_5trace_15LineAccumulator_4__setstate_cython__(struct __pyx_obj_7cartopy_5trace_LineAccumulator *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__2)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__setstate_cython__", 0);
-  __Pyx_TraceCall("__setstate_cython__", __pyx_f[1], 16, 0, __PYX_ERR(1, 16, __pyx_L1_error));
 
   /* "(tree fragment)":17
  *         return __pyx_unpickle_LineAccumulator, (type(self), 0x980da98, state)
  * def __setstate_cython__(self, __pyx_state):
  *     __pyx_unpickle_LineAccumulator__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
  */
-  __Pyx_TraceLine(17,0,__PYX_ERR(1, 17, __pyx_L1_error))
   if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
   __pyx_t_1 = __pyx_f_7cartopy_5trace___pyx_unpickle_LineAccumulator__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
@@ -3491,7 +3072,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __pyx_r = NULL;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3522,10 +3102,8 @@ static int __pyx_pw_7cartopy_5trace_12In
 
 static int __pyx_pf_7cartopy_5trace_12Interpolator___cinit__(struct __pyx_obj_7cartopy_5trace_Interpolator *__pyx_v_self) {
   int __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__cinit__", 0);
-  __Pyx_TraceCall("__cinit__", __pyx_f[0], 178, 0, __PYX_ERR(0, 178, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":179
  * 
@@ -3534,7 +3112,6 @@ static int __pyx_pf_7cartopy_5trace_12In
  *         self.dest_scale = 1
  * 
  */
-  __Pyx_TraceLine(179,0,__PYX_ERR(0, 179, __pyx_L1_error))
   __pyx_v_self->src_scale = 1.0;
 
   /* "cartopy/trace.pyx":180
@@ -3544,7 +3121,6 @@ static int __pyx_pf_7cartopy_5trace_12In
  * 
  *     cdef void init(self, projPJ src_proj, projPJ dest_proj):
  */
-  __Pyx_TraceLine(180,0,__PYX_ERR(0, 180, __pyx_L1_error))
   __pyx_v_self->dest_scale = 1.0;
 
   /* "cartopy/trace.pyx":178
@@ -3557,12 +3133,6 @@ static int __pyx_pf_7cartopy_5trace_12In
 
   /* function exit code */
   __pyx_r = 0;
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_AddTraceback("cartopy.trace.Interpolator.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = -1;
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3576,10 +3146,8 @@ static int __pyx_pf_7cartopy_5trace_12In
  */
 
 static void __pyx_f_7cartopy_5trace_12Interpolator_init(struct __pyx_obj_7cartopy_5trace_Interpolator *__pyx_v_self, projPJ __pyx_v_src_proj, projPJ __pyx_v_dest_proj) {
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("init", 0);
-  __Pyx_TraceCall("init", __pyx_f[0], 182, 0, __PYX_ERR(0, 182, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":183
  * 
@@ -3588,7 +3156,6 @@ static void __pyx_f_7cartopy_5trace_12In
  *         self.dest_proj = dest_proj
  * 
  */
-  __Pyx_TraceLine(183,0,__PYX_ERR(0, 183, __pyx_L1_error))
   __pyx_v_self->src_proj = __pyx_v_src_proj;
 
   /* "cartopy/trace.pyx":184
@@ -3598,7 +3165,6 @@ static void __pyx_f_7cartopy_5trace_12In
  * 
  *     cdef void set_line(self, const Point &start, const Point &end):
  */
-  __Pyx_TraceLine(184,0,__PYX_ERR(0, 184, __pyx_L1_error))
   __pyx_v_self->dest_proj = __pyx_v_dest_proj;
 
   /* "cartopy/trace.pyx":182
@@ -3610,11 +3176,6 @@ static void __pyx_f_7cartopy_5trace_12In
  */
 
   /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.Interpolator.init", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -3627,10 +3188,8 @@ static void __pyx_f_7cartopy_5trace_12In
  */
 
 static void __pyx_f_7cartopy_5trace_12Interpolator_set_line(struct __pyx_obj_7cartopy_5trace_Interpolator *__pyx_v_self, __pyx_t_7cartopy_5trace_Point const &__pyx_v_start, __pyx_t_7cartopy_5trace_Point const &__pyx_v_end) {
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("set_line", 0);
-  __Pyx_TraceCall("set_line", __pyx_f[0], 186, 0, __PYX_ERR(0, 186, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":187
  * 
@@ -3639,7 +3198,6 @@ static void __pyx_f_7cartopy_5trace_12In
  *         self.end = end
  * 
  */
-  __Pyx_TraceLine(187,0,__PYX_ERR(0, 187, __pyx_L1_error))
   __pyx_v_self->start = __pyx_v_start;
 
   /* "cartopy/trace.pyx":188
@@ -3649,7 +3207,6 @@ static void __pyx_f_7cartopy_5trace_12In
  * 
  *     cdef Point interpolate(self, double t):
  */
-  __Pyx_TraceLine(188,0,__PYX_ERR(0, 188, __pyx_L1_error))
   __pyx_v_self->end = __pyx_v_end;
 
   /* "cartopy/trace.pyx":186
@@ -3661,11 +3218,6 @@ static void __pyx_f_7cartopy_5trace_12In
  */
 
   /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.Interpolator.set_line", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -3679,10 +3231,11 @@ static void __pyx_f_7cartopy_5trace_12In
 
 static __pyx_t_7cartopy_5trace_Point __pyx_f_7cartopy_5trace_12Interpolator_interpolate(CYTHON_UNUSED struct __pyx_obj_7cartopy_5trace_Interpolator *__pyx_v_self, CYTHON_UNUSED double __pyx_v_t) {
   __pyx_t_7cartopy_5trace_Point __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("interpolate", 0);
-  __Pyx_TraceCall("interpolate", __pyx_f[0], 190, 0, __PYX_ERR(0, 190, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":191
  * 
@@ -3691,7 +3244,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  *     cdef Point project(self, const Point &point):
  */
-  __Pyx_TraceLine(191,0,__PYX_ERR(0, 191, __pyx_L1_error))
   __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
   __PYX_ERR(0, 191, __pyx_L1_error)
 
@@ -3707,7 +3259,6 @@ static __pyx_t_7cartopy_5trace_Point __p
   __pyx_L1_error:;
   __Pyx_WriteUnraisable("cartopy.trace.Interpolator.interpolate", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
   __Pyx_pretend_to_initialize(&__pyx_r);
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3722,10 +3273,11 @@ static __pyx_t_7cartopy_5trace_Point __p
 
 static __pyx_t_7cartopy_5trace_Point __pyx_f_7cartopy_5trace_12Interpolator_project(CYTHON_UNUSED struct __pyx_obj_7cartopy_5trace_Interpolator *__pyx_v_self, CYTHON_UNUSED __pyx_t_7cartopy_5trace_Point const &__pyx_v_point) {
   __pyx_t_7cartopy_5trace_Point __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("project", 0);
-  __Pyx_TraceCall("project", __pyx_f[0], 193, 0, __PYX_ERR(0, 193, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":194
  * 
@@ -3734,7 +3286,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  * 
  */
-  __Pyx_TraceLine(194,0,__PYX_ERR(0, 194, __pyx_L1_error))
   __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
   __PYX_ERR(0, 194, __pyx_L1_error)
 
@@ -3750,7 +3301,6 @@ static __pyx_t_7cartopy_5trace_Point __p
   __pyx_L1_error:;
   __Pyx_WriteUnraisable("cartopy.trace.Interpolator.project", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
   __Pyx_pretend_to_initialize(&__pyx_r);
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3764,7 +3314,6 @@ static __pyx_t_7cartopy_5trace_Point __p
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_5trace_12Interpolator_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static char __pyx_doc_7cartopy_5trace_12Interpolator_2__reduce_cython__[] = "Interpolator.__reduce_cython__(self)";
-static PyMethodDef __pyx_mdef_7cartopy_5trace_12Interpolator_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)__pyx_pw_7cartopy_5trace_12Interpolator_3__reduce_cython__, METH_NOARGS, __pyx_doc_7cartopy_5trace_12Interpolator_2__reduce_cython__};
 static PyObject *__pyx_pw_7cartopy_5trace_12Interpolator_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -3778,12 +3327,12 @@ static PyObject *__pyx_pw_7cartopy_5trac
 
 static PyObject *__pyx_pf_7cartopy_5trace_12Interpolator_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cartopy_5trace_Interpolator *__pyx_v_self) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__3)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__reduce_cython__", 0);
-  __Pyx_TraceCall("__reduce_cython__", __pyx_f[1], 1, 0, __PYX_ERR(1, 1, __pyx_L1_error));
 
   /* "(tree fragment)":2
  * def __reduce_cython__(self):
@@ -3791,8 +3340,7 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  */
-  __Pyx_TraceLine(2,0,__PYX_ERR(1, 2, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_Raise(__pyx_t_1, 0, 0, 0);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
@@ -3810,7 +3358,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __Pyx_AddTraceback("cartopy.trace.Interpolator.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = NULL;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3825,7 +3372,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_5trace_12Interpolator_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
 static char __pyx_doc_7cartopy_5trace_12Interpolator_4__setstate_cython__[] = "Interpolator.__setstate_cython__(self, __pyx_state)";
-static PyMethodDef __pyx_mdef_7cartopy_5trace_12Interpolator_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)__pyx_pw_7cartopy_5trace_12Interpolator_5__setstate_cython__, METH_O, __pyx_doc_7cartopy_5trace_12Interpolator_4__setstate_cython__};
 static PyObject *__pyx_pw_7cartopy_5trace_12Interpolator_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -3839,20 +3385,19 @@ static PyObject *__pyx_pw_7cartopy_5trac
 
 static PyObject *__pyx_pf_7cartopy_5trace_12Interpolator_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cartopy_5trace_Interpolator *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__5)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__setstate_cython__", 0);
-  __Pyx_TraceCall("__setstate_cython__", __pyx_f[1], 3, 0, __PYX_ERR(1, 3, __pyx_L1_error));
 
   /* "(tree fragment)":4
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
  */
-  __Pyx_TraceLine(4,0,__PYX_ERR(1, 4, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_Raise(__pyx_t_1, 0, 0, 0);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
@@ -3871,7 +3416,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __Pyx_AddTraceback("cartopy.trace.Interpolator.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = NULL;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3887,10 +3431,8 @@ static PyObject *__pyx_pf_7cartopy_5trac
 static __pyx_t_7cartopy_5trace_Point __pyx_f_7cartopy_5trace_21CartesianInterpolator_interpolate(struct __pyx_obj_7cartopy_5trace_CartesianInterpolator *__pyx_v_self, double __pyx_v_t) {
   __pyx_t_7cartopy_5trace_Point __pyx_v_xy;
   __pyx_t_7cartopy_5trace_Point __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("interpolate", 0);
-  __Pyx_TraceCall("interpolate", __pyx_f[0], 198, 0, __PYX_ERR(0, 198, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":200
  *     cdef Point interpolate(self, double t):
@@ -3899,7 +3441,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         xy.y = self.start.y + (self.end.y - self.start.y) * t
  *         return self.project(xy)
  */
-  __Pyx_TraceLine(200,0,__PYX_ERR(0, 200, __pyx_L1_error))
   __pyx_v_xy.x = (__pyx_v_self->__pyx_base.start.x + ((__pyx_v_self->__pyx_base.end.x - __pyx_v_self->__pyx_base.start.x) * __pyx_v_t));
 
   /* "cartopy/trace.pyx":201
@@ -3909,7 +3450,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         return self.project(xy)
  * 
  */
-  __Pyx_TraceLine(201,0,__PYX_ERR(0, 201, __pyx_L1_error))
   __pyx_v_xy.y = (__pyx_v_self->__pyx_base.start.y + ((__pyx_v_self->__pyx_base.end.y - __pyx_v_self->__pyx_base.start.y) * __pyx_v_t));
 
   /* "cartopy/trace.pyx":202
@@ -3919,7 +3459,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  *     cdef Point project(self, const Point &src_xy):
  */
-  __Pyx_TraceLine(202,0,__PYX_ERR(0, 202, __pyx_L1_error))
   __pyx_r = ((struct __pyx_vtabstruct_7cartopy_5trace_CartesianInterpolator *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.project(((struct __pyx_obj_7cartopy_5trace_Interpolator *)__pyx_v_self), __pyx_v_xy);
   goto __pyx_L0;
 
@@ -3932,11 +3471,7 @@ static __pyx_t_7cartopy_5trace_Point __p
  */
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.CartesianInterpolator.interpolate", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __Pyx_pretend_to_initialize(&__pyx_r);
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3954,15 +3489,18 @@ static __pyx_t_7cartopy_5trace_Point __p
   projLP __pyx_v_xy;
   int __pyx_v_status;
   __pyx_t_7cartopy_5trace_Point __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   int __pyx_t_2;
   PyObject *__pyx_t_3 = NULL;
-  PyObject *__pyx_t_4 = NULL;
-  PyObject *__pyx_t_5 = NULL;
+  Py_ssize_t __pyx_t_4;
+  Py_UCS4 __pyx_t_5;
+  PyObject *__pyx_t_6 = NULL;
+  PyObject *__pyx_t_7 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("project", 0);
-  __Pyx_TraceCall("project", __pyx_f[0], 204, 0, __PYX_ERR(0, 204, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":208
  *         cdef projLP xy
@@ -3971,7 +3509,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         xy.v = src_xy.y * self.src_scale
  * 
  */
-  __Pyx_TraceLine(208,0,__PYX_ERR(0, 208, __pyx_L1_error))
   __pyx_v_xy.u = (__pyx_v_src_xy.x * __pyx_v_self->__pyx_base.src_scale);
 
   /* "cartopy/trace.pyx":209
@@ -3981,7 +3518,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  *         cdef int status = pj_transform(self.src_proj, self.dest_proj,
  */
-  __Pyx_TraceLine(209,0,__PYX_ERR(0, 209, __pyx_L1_error))
   __pyx_v_xy.v = (__pyx_v_src_xy.y * __pyx_v_self->__pyx_base.src_scale);
 
   /* "cartopy/trace.pyx":211
@@ -3991,7 +3527,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *                                        1, 1, &xy.u, &xy.v, NULL)
  *         if status in (-14, -20):
  */
-  __Pyx_TraceLine(211,0,__PYX_ERR(0, 211, __pyx_L1_error))
   __pyx_v_status = pj_transform(__pyx_v_self->__pyx_base.src_proj, __pyx_v_self->__pyx_base.dest_proj, 1, 1, (&__pyx_v_xy.u), (&__pyx_v_xy.v), NULL);
 
   /* "cartopy/trace.pyx":213
@@ -4001,10 +3536,8 @@ static __pyx_t_7cartopy_5trace_Point __p
  *             # -14 => "latitude or longitude exceeded limits"
  *             # -20 => "tolerance condition error"
  */
-  __Pyx_TraceLine(213,0,__PYX_ERR(0, 213, __pyx_L1_error))
   switch (__pyx_v_status) {
     case -14L:
-    CYTHON_FALLTHROUGH;
     case -20L:
     __pyx_t_1 = 1;
     break;
@@ -4022,7 +3555,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         elif status != 0:
  *             raise Exception('pj_transform failed: %d\n%s' % (
  */
-    __Pyx_TraceLine(216,0,__PYX_ERR(0, 216, __pyx_L1_error))
     __pyx_v_xy.u = HUGE_VAL;
     __pyx_v_xy.v = HUGE_VAL;
 
@@ -4043,10 +3575,25 @@ static __pyx_t_7cartopy_5trace_Point __p
  *             raise Exception('pj_transform failed: %d\n%s' % (
  *                 status,
  */
-  __Pyx_TraceLine(217,0,__PYX_ERR(0, 217, __pyx_L1_error))
   __pyx_t_2 = ((__pyx_v_status != 0) != 0);
   if (unlikely(__pyx_t_2)) {
 
+    /* "cartopy/trace.pyx":218
+ *             xy.u = xy.v = HUGE_VAL
+ *         elif status != 0:
+ *             raise Exception('pj_transform failed: %d\n%s' % (             # <<<<<<<<<<<<<<
+ *                 status,
+ *                 pj_strerrno(status)))
+ */
+    __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 218, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_3);
+    __pyx_t_4 = 0;
+    __pyx_t_5 = 127;
+    __Pyx_INCREF(__pyx_kp_u_pj_transform_failed);
+    __pyx_t_4 += 21;
+    __Pyx_GIVEREF(__pyx_kp_u_pj_transform_failed);
+    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_pj_transform_failed);
+
     /* "cartopy/trace.pyx":219
  *         elif status != 0:
  *             raise Exception('pj_transform failed: %d\n%s' % (
@@ -4054,9 +3601,16 @@ static __pyx_t_7cartopy_5trace_Point __p
  *                 pj_strerrno(status)))
  * 
  */
-    __Pyx_TraceLine(219,0,__PYX_ERR(0, 219, __pyx_L1_error))
-    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_status); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 219, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_3);
+    __pyx_t_6 = __Pyx_PyUnicode_From_int(__pyx_v_status, 0, ' ', 'd'); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 219, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_6);
+    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
+    __Pyx_GIVEREF(__pyx_t_6);
+    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_6);
+    __pyx_t_6 = 0;
+    __Pyx_INCREF(__pyx_kp_u__3);
+    __pyx_t_4 += 1;
+    __Pyx_GIVEREF(__pyx_kp_u__3);
+    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__3);
 
     /* "cartopy/trace.pyx":220
  *             raise Exception('pj_transform failed: %d\n%s' % (
@@ -4065,26 +3619,16 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  *         dest_xy.x = xy.u * self.dest_scale
  */
-    __Pyx_TraceLine(220,0,__PYX_ERR(0, 220, __pyx_L1_error))
-    __pyx_t_4 = __Pyx_PyBytes_FromString(pj_strerrno(__pyx_v_status)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_4);
-
-    /* "cartopy/trace.pyx":219
- *         elif status != 0:
- *             raise Exception('pj_transform failed: %d\n%s' % (
- *                 status,             # <<<<<<<<<<<<<<
- *                 pj_strerrno(status)))
- * 
- */
-    __Pyx_TraceLine(219,0,__PYX_ERR(0, 219, __pyx_L1_error))
-    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 219, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_5);
-    __Pyx_GIVEREF(__pyx_t_3);
-    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
-    __Pyx_GIVEREF(__pyx_t_4);
-    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
-    __pyx_t_3 = 0;
-    __pyx_t_4 = 0;
+    __pyx_t_6 = __Pyx_PyBytes_FromString(pj_strerrno(__pyx_v_status)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 220, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_6);
+    __pyx_t_7 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Unicode(__pyx_t_6), __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 220, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_7);
+    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
+    __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_5;
+    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
+    __Pyx_GIVEREF(__pyx_t_7);
+    PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_7);
+    __pyx_t_7 = 0;
 
     /* "cartopy/trace.pyx":218
  *             xy.u = xy.v = HUGE_VAL
@@ -4093,15 +3637,14 @@ static __pyx_t_7cartopy_5trace_Point __p
  *                 status,
  *                 pj_strerrno(status)))
  */
-    __Pyx_TraceLine(218,0,__PYX_ERR(0, 218, __pyx_L1_error))
-    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_pj_transform_failed_d_s, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 218, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_4);
-    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-    __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 218, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_5);
-    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
-    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
+    __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 218, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_7);
+    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+    __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 218, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_3);
+    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
+    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
+    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
     __PYX_ERR(0, 218, __pyx_L1_error)
 
     /* "cartopy/trace.pyx":217
@@ -4121,7 +3664,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         dest_xy.y = xy.v * self.dest_scale
  *         return dest_xy
  */
-  __Pyx_TraceLine(222,0,__PYX_ERR(0, 222, __pyx_L1_error))
   __pyx_v_dest_xy.x = (__pyx_v_xy.u * __pyx_v_self->__pyx_base.dest_scale);
 
   /* "cartopy/trace.pyx":223
@@ -4131,7 +3673,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         return dest_xy
  * 
  */
-  __Pyx_TraceLine(223,0,__PYX_ERR(0, 223, __pyx_L1_error))
   __pyx_v_dest_xy.y = (__pyx_v_xy.v * __pyx_v_self->__pyx_base.dest_scale);
 
   /* "cartopy/trace.pyx":224
@@ -4141,7 +3682,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  * 
  */
-  __Pyx_TraceLine(224,0,__PYX_ERR(0, 224, __pyx_L1_error))
   __pyx_r = __pyx_v_dest_xy;
   goto __pyx_L0;
 
@@ -4156,12 +3696,11 @@ static __pyx_t_7cartopy_5trace_Point __p
   /* function exit code */
   __pyx_L1_error:;
   __Pyx_XDECREF(__pyx_t_3);
-  __Pyx_XDECREF(__pyx_t_4);
-  __Pyx_XDECREF(__pyx_t_5);
+  __Pyx_XDECREF(__pyx_t_6);
+  __Pyx_XDECREF(__pyx_t_7);
   __Pyx_WriteUnraisable("cartopy.trace.CartesianInterpolator.project", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
   __Pyx_pretend_to_initialize(&__pyx_r);
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4175,7 +3714,6 @@ static __pyx_t_7cartopy_5trace_Point __p
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_5trace_21CartesianInterpolator_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static char __pyx_doc_7cartopy_5trace_21CartesianInterpolator___reduce_cython__[] = "CartesianInterpolator.__reduce_cython__(self)";
-static PyMethodDef __pyx_mdef_7cartopy_5trace_21CartesianInterpolator_1__reduce_cython__ = {"__reduce_cython__", (PyCFunction)__pyx_pw_7cartopy_5trace_21CartesianInterpolator_1__reduce_cython__, METH_NOARGS, __pyx_doc_7cartopy_5trace_21CartesianInterpolator___reduce_cython__};
 static PyObject *__pyx_pw_7cartopy_5trace_21CartesianInterpolator_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -4189,12 +3727,12 @@ static PyObject *__pyx_pw_7cartopy_5trac
 
 static PyObject *__pyx_pf_7cartopy_5trace_21CartesianInterpolator___reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cartopy_5trace_CartesianInterpolator *__pyx_v_self) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__7)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__reduce_cython__", 0);
-  __Pyx_TraceCall("__reduce_cython__", __pyx_f[1], 1, 0, __PYX_ERR(1, 1, __pyx_L1_error));
 
   /* "(tree fragment)":2
  * def __reduce_cython__(self):
@@ -4202,8 +3740,7 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  */
-  __Pyx_TraceLine(2,0,__PYX_ERR(1, 2, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_Raise(__pyx_t_1, 0, 0, 0);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
@@ -4221,7 +3758,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __Pyx_AddTraceback("cartopy.trace.CartesianInterpolator.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = NULL;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4236,7 +3772,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_5trace_21CartesianInterpolator_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
 static char __pyx_doc_7cartopy_5trace_21CartesianInterpolator_2__setstate_cython__[] = "CartesianInterpolator.__setstate_cython__(self, __pyx_state)";
-static PyMethodDef __pyx_mdef_7cartopy_5trace_21CartesianInterpolator_3__setstate_cython__ = {"__setstate_cython__", (PyCFunction)__pyx_pw_7cartopy_5trace_21CartesianInterpolator_3__setstate_cython__, METH_O, __pyx_doc_7cartopy_5trace_21CartesianInterpolator_2__setstate_cython__};
 static PyObject *__pyx_pw_7cartopy_5trace_21CartesianInterpolator_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -4250,20 +3785,19 @@ static PyObject *__pyx_pw_7cartopy_5trac
 
 static PyObject *__pyx_pf_7cartopy_5trace_21CartesianInterpolator_2__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cartopy_5trace_CartesianInterpolator *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__9)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__setstate_cython__", 0);
-  __Pyx_TraceCall("__setstate_cython__", __pyx_f[1], 3, 0, __PYX_ERR(1, 3, __pyx_L1_error));
 
   /* "(tree fragment)":4
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
  */
-  __Pyx_TraceLine(4,0,__PYX_ERR(1, 4, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_Raise(__pyx_t_1, 0, 0, 0);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
@@ -4282,7 +3816,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __Pyx_AddTraceback("cartopy.trace.CartesianInterpolator.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = NULL;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4298,10 +3831,8 @@ static PyObject *__pyx_pf_7cartopy_5trac
 static void __pyx_f_7cartopy_5trace_21SphericalInterpolator_init(struct __pyx_obj_7cartopy_5trace_SphericalInterpolator *__pyx_v_self, projPJ __pyx_v_src_proj, projPJ __pyx_v_dest_proj) {
   double __pyx_v_major_axis;
   double __pyx_v_eccentricity_squared;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("init", 0);
-  __Pyx_TraceCall("init", __pyx_f[0], 232, 0, __PYX_ERR(0, 232, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":233
  * 
@@ -4310,7 +3841,6 @@ static void __pyx_f_7cartopy_5trace_21Sp
  *         self.dest_proj = dest_proj
  * 
  */
-  __Pyx_TraceLine(233,0,__PYX_ERR(0, 233, __pyx_L1_error))
   __pyx_v_self->__pyx_base.src_proj = __pyx_v_src_proj;
 
   /* "cartopy/trace.pyx":234
@@ -4320,7 +3850,6 @@ static void __pyx_f_7cartopy_5trace_21Sp
  * 
  *         cdef double major_axis
  */
-  __Pyx_TraceLine(234,0,__PYX_ERR(0, 234, __pyx_L1_error))
   __pyx_v_self->__pyx_base.dest_proj = __pyx_v_dest_proj;
 
   /* "cartopy/trace.pyx":238
@@ -4330,7 +3859,6 @@ static void __pyx_f_7cartopy_5trace_21Sp
  *         geod_init(&self.geod, major_axis, 1 - sqrt(1 - eccentricity_squared))
  * 
  */
-  __Pyx_TraceLine(238,0,__PYX_ERR(0, 238, __pyx_L1_error))
   pj_get_spheroid_defn(__pyx_v_self->__pyx_base.src_proj, (&__pyx_v_major_axis), (&__pyx_v_eccentricity_squared));
 
   /* "cartopy/trace.pyx":239
@@ -4340,7 +3868,6 @@ static void __pyx_f_7cartopy_5trace_21Sp
  * 
  *     cdef void set_line(self, const Point &start, const Point &end):
  */
-  __Pyx_TraceLine(239,0,__PYX_ERR(0, 239, __pyx_L1_error))
   geod_init((&__pyx_v_self->geod), __pyx_v_major_axis, (1.0 - sqrt((1.0 - __pyx_v_eccentricity_squared))));
 
   /* "cartopy/trace.pyx":232
@@ -4352,11 +3879,6 @@ static void __pyx_f_7cartopy_5trace_21Sp
  */
 
   /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.SphericalInterpolator.init", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -4370,10 +3892,8 @@ static void __pyx_f_7cartopy_5trace_21Sp
 
 static void __pyx_f_7cartopy_5trace_21SphericalInterpolator_set_line(struct __pyx_obj_7cartopy_5trace_SphericalInterpolator *__pyx_v_self, __pyx_t_7cartopy_5trace_Point const &__pyx_v_start, __pyx_t_7cartopy_5trace_Point const &__pyx_v_end) {
   double __pyx_v_azi1;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("set_line", 0);
-  __Pyx_TraceCall("set_line", __pyx_f[0], 241, 0, __PYX_ERR(0, 241, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":243
  *     cdef void set_line(self, const Point &start, const Point &end):
@@ -4382,7 +3902,6 @@ static void __pyx_f_7cartopy_5trace_21Sp
  *                                    start.y, start.x, end.y, end.x,
  *                                    NULL, &azi1, NULL, NULL, NULL, NULL, NULL)
  */
-  __Pyx_TraceLine(243,0,__PYX_ERR(0, 243, __pyx_L1_error))
   __pyx_v_self->a13 = geod_geninverse((&__pyx_v_self->geod), __pyx_v_start.y, __pyx_v_start.x, __pyx_v_end.y, __pyx_v_end.x, NULL, (&__pyx_v_azi1), NULL, NULL, NULL, NULL, NULL);
 
   /* "cartopy/trace.pyx":246
@@ -4392,7 +3911,6 @@ static void __pyx_f_7cartopy_5trace_21Sp
  *                       GEOD_LATITUDE | GEOD_LONGITUDE);
  * 
  */
-  __Pyx_TraceLine(246,0,__PYX_ERR(0, 246, __pyx_L1_error))
   geod_lineinit((&__pyx_v_self->geod_line), (&__pyx_v_self->geod), __pyx_v_start.y, __pyx_v_start.x, __pyx_v_azi1, (GEOD_LATITUDE | GEOD_LONGITUDE));
 
   /* "cartopy/trace.pyx":241
@@ -4404,11 +3922,6 @@ static void __pyx_f_7cartopy_5trace_21Sp
  */
 
   /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.SphericalInterpolator.set_line", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -4423,10 +3936,8 @@ static void __pyx_f_7cartopy_5trace_21Sp
 static __pyx_t_7cartopy_5trace_Point __pyx_f_7cartopy_5trace_21SphericalInterpolator_interpolate(struct __pyx_obj_7cartopy_5trace_SphericalInterpolator *__pyx_v_self, double __pyx_v_t) {
   __pyx_t_7cartopy_5trace_Point __pyx_v_lonlat;
   __pyx_t_7cartopy_5trace_Point __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("interpolate", 0);
-  __Pyx_TraceCall("interpolate", __pyx_f[0], 249, 0, __PYX_ERR(0, 249, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":252
  *         cdef Point lonlat
@@ -4435,7 +3946,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *                          &lonlat.y, &lonlat.x, NULL, NULL, NULL, NULL, NULL,
  *                          NULL)
  */
-  __Pyx_TraceLine(252,0,__PYX_ERR(0, 252, __pyx_L1_error))
   geod_genposition((&__pyx_v_self->geod_line), GEOD_ARCMODE, (__pyx_v_self->a13 * __pyx_v_t), (&__pyx_v_lonlat.y), (&__pyx_v_lonlat.x), NULL, NULL, NULL, NULL, NULL, NULL);
 
   /* "cartopy/trace.pyx":256
@@ -4445,7 +3955,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  *     cdef Point project(self, const Point &lonlat):
  */
-  __Pyx_TraceLine(256,0,__PYX_ERR(0, 256, __pyx_L1_error))
   __pyx_r = ((struct __pyx_vtabstruct_7cartopy_5trace_SphericalInterpolator *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.project(((struct __pyx_obj_7cartopy_5trace_Interpolator *)__pyx_v_self), __pyx_v_lonlat);
   goto __pyx_L0;
 
@@ -4458,11 +3967,7 @@ static __pyx_t_7cartopy_5trace_Point __p
  */
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.SphericalInterpolator.interpolate", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __Pyx_pretend_to_initialize(&__pyx_r);
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4480,15 +3985,18 @@ static __pyx_t_7cartopy_5trace_Point __p
   projLP __pyx_v_dest;
   int __pyx_v_status;
   __pyx_t_7cartopy_5trace_Point __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   int __pyx_t_2;
   PyObject *__pyx_t_3 = NULL;
-  PyObject *__pyx_t_4 = NULL;
-  PyObject *__pyx_t_5 = NULL;
+  Py_ssize_t __pyx_t_4;
+  Py_UCS4 __pyx_t_5;
+  PyObject *__pyx_t_6 = NULL;
+  PyObject *__pyx_t_7 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("project", 0);
-  __Pyx_TraceCall("project", __pyx_f[0], 258, 0, __PYX_ERR(0, 258, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":262
  *         cdef projLP dest
@@ -4497,7 +4005,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         dest.v = (lonlat.y * DEG_TO_RAD) * self.src_scale
  * 
  */
-  __Pyx_TraceLine(262,0,__PYX_ERR(0, 262, __pyx_L1_error))
   __pyx_v_dest.u = ((__pyx_v_lonlat.x * DEG_TO_RAD) * __pyx_v_self->__pyx_base.src_scale);
 
   /* "cartopy/trace.pyx":263
@@ -4507,7 +4014,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  *         cdef int status = pj_transform(self.src_proj, self.dest_proj,
  */
-  __Pyx_TraceLine(263,0,__PYX_ERR(0, 263, __pyx_L1_error))
   __pyx_v_dest.v = ((__pyx_v_lonlat.y * DEG_TO_RAD) * __pyx_v_self->__pyx_base.src_scale);
 
   /* "cartopy/trace.pyx":265
@@ -4517,7 +4023,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *                                        1, 1, &dest.u, &dest.v, NULL)
  *         if status in (-14, -20):
  */
-  __Pyx_TraceLine(265,0,__PYX_ERR(0, 265, __pyx_L1_error))
   __pyx_v_status = pj_transform(__pyx_v_self->__pyx_base.src_proj, __pyx_v_self->__pyx_base.dest_proj, 1, 1, (&__pyx_v_dest.u), (&__pyx_v_dest.v), NULL);
 
   /* "cartopy/trace.pyx":267
@@ -4527,10 +4032,8 @@ static __pyx_t_7cartopy_5trace_Point __p
  *             # -14 => "latitude or longitude exceeded limits"
  *             # -20 => "tolerance condition error"
  */
-  __Pyx_TraceLine(267,0,__PYX_ERR(0, 267, __pyx_L1_error))
   switch (__pyx_v_status) {
     case -14L:
-    CYTHON_FALLTHROUGH;
     case -20L:
     __pyx_t_1 = 1;
     break;
@@ -4548,7 +4051,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         elif status != 0:
  *             raise Exception('pj_transform failed: %d\n%s' % (
  */
-    __Pyx_TraceLine(270,0,__PYX_ERR(0, 270, __pyx_L1_error))
     __pyx_v_dest.u = HUGE_VAL;
     __pyx_v_dest.v = HUGE_VAL;
 
@@ -4569,10 +4071,25 @@ static __pyx_t_7cartopy_5trace_Point __p
  *             raise Exception('pj_transform failed: %d\n%s' % (
  *                 status,
  */
-  __Pyx_TraceLine(271,0,__PYX_ERR(0, 271, __pyx_L1_error))
   __pyx_t_2 = ((__pyx_v_status != 0) != 0);
   if (unlikely(__pyx_t_2)) {
 
+    /* "cartopy/trace.pyx":272
+ *             dest.u = dest.v = HUGE_VAL
+ *         elif status != 0:
+ *             raise Exception('pj_transform failed: %d\n%s' % (             # <<<<<<<<<<<<<<
+ *                 status,
+ *                 pj_strerrno(status)))
+ */
+    __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 272, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_3);
+    __pyx_t_4 = 0;
+    __pyx_t_5 = 127;
+    __Pyx_INCREF(__pyx_kp_u_pj_transform_failed);
+    __pyx_t_4 += 21;
+    __Pyx_GIVEREF(__pyx_kp_u_pj_transform_failed);
+    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_pj_transform_failed);
+
     /* "cartopy/trace.pyx":273
  *         elif status != 0:
  *             raise Exception('pj_transform failed: %d\n%s' % (
@@ -4580,9 +4097,16 @@ static __pyx_t_7cartopy_5trace_Point __p
  *                 pj_strerrno(status)))
  * 
  */
-    __Pyx_TraceLine(273,0,__PYX_ERR(0, 273, __pyx_L1_error))
-    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_status); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 273, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_3);
+    __pyx_t_6 = __Pyx_PyUnicode_From_int(__pyx_v_status, 0, ' ', 'd'); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 273, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_6);
+    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
+    __Pyx_GIVEREF(__pyx_t_6);
+    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_6);
+    __pyx_t_6 = 0;
+    __Pyx_INCREF(__pyx_kp_u__3);
+    __pyx_t_4 += 1;
+    __Pyx_GIVEREF(__pyx_kp_u__3);
+    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__3);
 
     /* "cartopy/trace.pyx":274
  *             raise Exception('pj_transform failed: %d\n%s' % (
@@ -4591,43 +4115,32 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  *         xy.x = dest.u * self.dest_scale
  */
-    __Pyx_TraceLine(274,0,__PYX_ERR(0, 274, __pyx_L1_error))
-    __pyx_t_4 = __Pyx_PyBytes_FromString(pj_strerrno(__pyx_v_status)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 274, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_4);
+    __pyx_t_6 = __Pyx_PyBytes_FromString(pj_strerrno(__pyx_v_status)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 274, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_6);
+    __pyx_t_7 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Unicode(__pyx_t_6), __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 274, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_7);
+    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
+    __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_5;
+    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
+    __Pyx_GIVEREF(__pyx_t_7);
+    PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_7);
+    __pyx_t_7 = 0;
 
-    /* "cartopy/trace.pyx":273
- *         elif status != 0:
- *             raise Exception('pj_transform failed: %d\n%s' % (
- *                 status,             # <<<<<<<<<<<<<<
- *                 pj_strerrno(status)))
- * 
- */
-    __Pyx_TraceLine(273,0,__PYX_ERR(0, 273, __pyx_L1_error))
-    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 273, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_5);
-    __Pyx_GIVEREF(__pyx_t_3);
-    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
-    __Pyx_GIVEREF(__pyx_t_4);
-    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
-    __pyx_t_3 = 0;
-    __pyx_t_4 = 0;
-
-    /* "cartopy/trace.pyx":272
- *             dest.u = dest.v = HUGE_VAL
+    /* "cartopy/trace.pyx":272
+ *             dest.u = dest.v = HUGE_VAL
  *         elif status != 0:
  *             raise Exception('pj_transform failed: %d\n%s' % (             # <<<<<<<<<<<<<<
  *                 status,
  *                 pj_strerrno(status)))
  */
-    __Pyx_TraceLine(272,0,__PYX_ERR(0, 272, __pyx_L1_error))
-    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_pj_transform_failed_d_s, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 272, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_4);
-    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-    __pyx_t_5 = __Pyx_PyObject_CallOneArg(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 272, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_5);
-    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
-    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
+    __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 272, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_7);
+    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+    __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 272, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_3);
+    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
+    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
+    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
     __PYX_ERR(0, 272, __pyx_L1_error)
 
     /* "cartopy/trace.pyx":271
@@ -4647,7 +4160,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         xy.y = dest.v * self.dest_scale
  *         return xy
  */
-  __Pyx_TraceLine(276,0,__PYX_ERR(0, 276, __pyx_L1_error))
   __pyx_v_xy.x = (__pyx_v_dest.u * __pyx_v_self->__pyx_base.dest_scale);
 
   /* "cartopy/trace.pyx":277
@@ -4657,7 +4169,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         return xy
  * 
  */
-  __Pyx_TraceLine(277,0,__PYX_ERR(0, 277, __pyx_L1_error))
   __pyx_v_xy.y = (__pyx_v_dest.v * __pyx_v_self->__pyx_base.dest_scale);
 
   /* "cartopy/trace.pyx":278
@@ -4667,7 +4178,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  * 
  */
-  __Pyx_TraceLine(278,0,__PYX_ERR(0, 278, __pyx_L1_error))
   __pyx_r = __pyx_v_xy;
   goto __pyx_L0;
 
@@ -4682,12 +4192,11 @@ static __pyx_t_7cartopy_5trace_Point __p
   /* function exit code */
   __pyx_L1_error:;
   __Pyx_XDECREF(__pyx_t_3);
-  __Pyx_XDECREF(__pyx_t_4);
-  __Pyx_XDECREF(__pyx_t_5);
+  __Pyx_XDECREF(__pyx_t_6);
+  __Pyx_XDECREF(__pyx_t_7);
   __Pyx_WriteUnraisable("cartopy.trace.SphericalInterpolator.project", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
   __Pyx_pretend_to_initialize(&__pyx_r);
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4701,7 +4210,6 @@ static __pyx_t_7cartopy_5trace_Point __p
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_5trace_21SphericalInterpolator_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static char __pyx_doc_7cartopy_5trace_21SphericalInterpolator___reduce_cython__[] = "SphericalInterpolator.__reduce_cython__(self)";
-static PyMethodDef __pyx_mdef_7cartopy_5trace_21SphericalInterpolator_1__reduce_cython__ = {"__reduce_cython__", (PyCFunction)__pyx_pw_7cartopy_5trace_21SphericalInterpolator_1__reduce_cython__, METH_NOARGS, __pyx_doc_7cartopy_5trace_21SphericalInterpolator___reduce_cython__};
 static PyObject *__pyx_pw_7cartopy_5trace_21SphericalInterpolator_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -4715,12 +4223,12 @@ static PyObject *__pyx_pw_7cartopy_5trac
 
 static PyObject *__pyx_pf_7cartopy_5trace_21SphericalInterpolator___reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cartopy_5trace_SphericalInterpolator *__pyx_v_self) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__11)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__reduce_cython__", 0);
-  __Pyx_TraceCall("__reduce_cython__", __pyx_f[1], 1, 0, __PYX_ERR(1, 1, __pyx_L1_error));
 
   /* "(tree fragment)":2
  * def __reduce_cython__(self):
@@ -4728,8 +4236,7 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  */
-  __Pyx_TraceLine(2,0,__PYX_ERR(1, 2, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 2, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_Raise(__pyx_t_1, 0, 0, 0);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
@@ -4747,7 +4254,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __Pyx_AddTraceback("cartopy.trace.SphericalInterpolator.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = NULL;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4762,7 +4268,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_5trace_21SphericalInterpolator_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
 static char __pyx_doc_7cartopy_5trace_21SphericalInterpolator_2__setstate_cython__[] = "SphericalInterpolator.__setstate_cython__(self, __pyx_state)";
-static PyMethodDef __pyx_mdef_7cartopy_5trace_21SphericalInterpolator_3__setstate_cython__ = {"__setstate_cython__", (PyCFunction)__pyx_pw_7cartopy_5trace_21SphericalInterpolator_3__setstate_cython__, METH_O, __pyx_doc_7cartopy_5trace_21SphericalInterpolator_2__setstate_cython__};
 static PyObject *__pyx_pw_7cartopy_5trace_21SphericalInterpolator_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -4776,20 +4281,19 @@ static PyObject *__pyx_pw_7cartopy_5trac
 
 static PyObject *__pyx_pf_7cartopy_5trace_21SphericalInterpolator_2__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cartopy_5trace_SphericalInterpolator *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__13)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__setstate_cython__", 0);
-  __Pyx_TraceCall("__setstate_cython__", __pyx_f[1], 3, 0, __PYX_ERR(1, 3, __pyx_L1_error));
 
   /* "(tree fragment)":4
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
  */
-  __Pyx_TraceLine(4,0,__PYX_ERR(1, 4, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_Raise(__pyx_t_1, 0, 0, 0);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
@@ -4808,7 +4312,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __Pyx_AddTraceback("cartopy.trace.SphericalInterpolator.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = NULL;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4826,13 +4329,11 @@ static enum __pyx_t_7cartopy_5trace_Stat
   GEOSCoordSequence *__pyx_v_coords;
   GEOSGeometry *__pyx_v_g_point;
   enum __pyx_t_7cartopy_5trace_State __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   int __pyx_t_2;
   enum __pyx_t_7cartopy_5trace_State __pyx_t_3;
   __Pyx_RefNannySetupContext("get_state", 0);
-  __Pyx_TraceCall("get_state", __pyx_f[0], 287, 0, __PYX_ERR(0, 287, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":293
  *     cdef GEOSGeometry *g_point
@@ -4841,7 +4342,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *         # TODO: Avoid create-destroy
  *         coords = GEOSCoordSeq_create_r(handle, 1, 2)
  */
-  __Pyx_TraceLine(293,0,__PYX_ERR(0, 293, __pyx_L1_error))
   __pyx_t_2 = (npy_isfinite(__pyx_v_point.x) != 0);
   if (__pyx_t_2) {
   } else {
@@ -4860,7 +4360,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *         GEOSCoordSeq_setX_r(handle, coords, 0, point.x)
  *         GEOSCoordSeq_setY_r(handle, coords, 0, point.y)
  */
-    __Pyx_TraceLine(295,0,__PYX_ERR(0, 295, __pyx_L1_error))
     __pyx_v_coords = GEOSCoordSeq_create_r(__pyx_v_handle, 1, 2);
 
     /* "cartopy/trace.pyx":296
@@ -4870,7 +4369,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *         GEOSCoordSeq_setY_r(handle, coords, 0, point.y)
  *         g_point = GEOSGeom_createPoint_r(handle, coords)
  */
-    __Pyx_TraceLine(296,0,__PYX_ERR(0, 296, __pyx_L1_error))
     (void)(GEOSCoordSeq_setX_r(__pyx_v_handle, __pyx_v_coords, 0, __pyx_v_point.x));
 
     /* "cartopy/trace.pyx":297
@@ -4880,7 +4378,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *         g_point = GEOSGeom_createPoint_r(handle, coords)
  *         state = (POINT_IN
  */
-    __Pyx_TraceLine(297,0,__PYX_ERR(0, 297, __pyx_L1_error))
     (void)(GEOSCoordSeq_setY_r(__pyx_v_handle, __pyx_v_coords, 0, __pyx_v_point.y));
 
     /* "cartopy/trace.pyx":298
@@ -4890,7 +4387,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *         state = (POINT_IN
  *                  if GEOSPreparedCovers_r(handle, gp_domain, g_point)
  */
-    __Pyx_TraceLine(298,0,__PYX_ERR(0, 298, __pyx_L1_error))
     __pyx_v_g_point = GEOSGeom_createPoint_r(__pyx_v_handle, __pyx_v_coords);
 
     /* "cartopy/trace.pyx":300
@@ -4900,7 +4396,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *                  else POINT_OUT)
  *         GEOSGeom_destroy_r(handle, g_point)
  */
-    __Pyx_TraceLine(300,0,__PYX_ERR(0, 300, __pyx_L1_error))
     if ((GEOSPreparedCovers_r(__pyx_v_handle, __pyx_v_gp_domain, __pyx_v_g_point) != 0)) {
 
       /* "cartopy/trace.pyx":299
@@ -4910,7 +4405,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *                  if GEOSPreparedCovers_r(handle, gp_domain, g_point)
  *                  else POINT_OUT)
  */
-      __Pyx_TraceLine(299,0,__PYX_ERR(0, 299, __pyx_L1_error))
       __pyx_t_3 = __pyx_e_7cartopy_5trace_POINT_IN;
     } else {
 
@@ -4921,7 +4415,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *         GEOSGeom_destroy_r(handle, g_point)
  *     else:
  */
-      __Pyx_TraceLine(301,0,__PYX_ERR(0, 301, __pyx_L1_error))
       __pyx_t_3 = __pyx_e_7cartopy_5trace_POINT_OUT;
     }
     __pyx_v_state = __pyx_t_3;
@@ -4933,7 +4426,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *     else:
  *         state = POINT_NAN
  */
-    __Pyx_TraceLine(302,0,__PYX_ERR(0, 302, __pyx_L1_error))
     GEOSGeom_destroy_r(__pyx_v_handle, __pyx_v_g_point);
 
     /* "cartopy/trace.pyx":293
@@ -4953,7 +4445,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  *     return state
  * 
  */
-  __Pyx_TraceLine(304,0,__PYX_ERR(0, 304, __pyx_L1_error))
   /*else*/ {
     __pyx_v_state = __pyx_e_7cartopy_5trace_POINT_NAN;
   }
@@ -4966,7 +4457,6 @@ static enum __pyx_t_7cartopy_5trace_Stat
  * 
  * 
  */
-  __Pyx_TraceLine(305,0,__PYX_ERR(0, 305, __pyx_L1_error))
   __pyx_r = __pyx_v_state;
   goto __pyx_L0;
 
@@ -4979,11 +4469,7 @@ static enum __pyx_t_7cartopy_5trace_Stat
  */
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.get_state", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_r = (enum __pyx_t_7cartopy_5trace_State) 0;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -5011,12 +4497,10 @@ static bool __pyx_f_7cartopy_5trace_stra
   GEOSCoordSequence *__pyx_v_coords;
   GEOSGeometry *__pyx_v_g_segment;
   bool __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   int __pyx_t_2;
   __Pyx_RefNannySetupContext("straightAndDomain", 0);
-  __Pyx_TraceCall("straightAndDomain", __pyx_f[0], 309, 0, __PYX_ERR(0, 309, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":344
  * 
@@ -5025,7 +4509,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *         valid = False
  *     elif not (isfinite(p_end.x) and isfinite(p_end.y)):
  */
-  __Pyx_TraceLine(344,0,__PYX_ERR(0, 344, __pyx_L1_error))
   __pyx_t_2 = (npy_isfinite(__pyx_v_p_start.x) != 0);
   if (__pyx_t_2) {
   } else {
@@ -5045,7 +4528,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *     elif not (isfinite(p_end.x) and isfinite(p_end.y)):
  *         valid = False
  */
-    __Pyx_TraceLine(345,0,__PYX_ERR(0, 345, __pyx_L1_error))
     __pyx_v_valid = 0;
 
     /* "cartopy/trace.pyx":344
@@ -5065,7 +4547,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *         valid = False
  *     else:
  */
-  __Pyx_TraceLine(346,0,__PYX_ERR(0, 346, __pyx_L1_error))
   __pyx_t_1 = (npy_isfinite(__pyx_v_p_end.x) != 0);
   if (__pyx_t_1) {
   } else {
@@ -5085,7 +4566,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *     else:
  *         # Find the projected mid-point
  */
-    __Pyx_TraceLine(347,0,__PYX_ERR(0, 347, __pyx_L1_error))
     __pyx_v_valid = 0;
 
     /* "cartopy/trace.pyx":346
@@ -5105,7 +4585,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *         p_mid = interpolator.interpolate(t_mid)
  * 
  */
-  __Pyx_TraceLine(350,0,__PYX_ERR(0, 350, __pyx_L1_error))
   /*else*/ {
     __pyx_v_t_mid = ((__pyx_v_t_start + __pyx_v_t_end) * 0.5);
 
@@ -5116,7 +4595,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  * 
  *         # Determine the closest point on the segment to the midpoint, in
  */
-    __Pyx_TraceLine(351,0,__PYX_ERR(0, 351, __pyx_L1_error))
     __pyx_v_p_mid = ((struct __pyx_vtabstruct_7cartopy_5trace_Interpolator *)__pyx_v_interpolator->__pyx_vtab)->interpolate(__pyx_v_interpolator, __pyx_v_t_mid);
 
     /* "cartopy/trace.pyx":380
@@ -5126,7 +4604,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *         seg_dy = p_end.y - p_start.y
  *         mid_dx = p_mid.x - p_start.x
  */
-    __Pyx_TraceLine(380,0,__PYX_ERR(0, 380, __pyx_L1_error))
     __pyx_v_seg_dx = (__pyx_v_p_end.x - __pyx_v_p_start.x);
 
     /* "cartopy/trace.pyx":381
@@ -5136,7 +4613,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *         mid_dx = p_mid.x - p_start.x
  *         mid_dy = p_mid.y - p_start.y
  */
-    __Pyx_TraceLine(381,0,__PYX_ERR(0, 381, __pyx_L1_error))
     __pyx_v_seg_dy = (__pyx_v_p_end.y - __pyx_v_p_start.y);
 
     /* "cartopy/trace.pyx":382
@@ -5146,7 +4622,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *         mid_dy = p_mid.y - p_start.y
  *         seg_hypot_sq = seg_dx*seg_dx + seg_dy*seg_dy
  */
-    __Pyx_TraceLine(382,0,__PYX_ERR(0, 382, __pyx_L1_error))
     __pyx_v_mid_dx = (__pyx_v_p_mid.x - __pyx_v_p_start.x);
 
     /* "cartopy/trace.pyx":383
@@ -5156,7 +4631,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *         seg_hypot_sq = seg_dx*seg_dx + seg_dy*seg_dy
  * 
  */
-    __Pyx_TraceLine(383,0,__PYX_ERR(0, 383, __pyx_L1_error))
     __pyx_v_mid_dy = (__pyx_v_p_mid.y - __pyx_v_p_start.y);
 
     /* "cartopy/trace.pyx":384
@@ -5166,7 +4640,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  * 
  *         along = (seg_dx*mid_dx + seg_dy*mid_dy) / seg_hypot_sq
  */
-    __Pyx_TraceLine(384,0,__PYX_ERR(0, 384, __pyx_L1_error))
     __pyx_v_seg_hypot_sq = ((__pyx_v_seg_dx * __pyx_v_seg_dx) + (__pyx_v_seg_dy * __pyx_v_seg_dy));
 
     /* "cartopy/trace.pyx":386
@@ -5176,7 +4649,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  * 
  *         if isnan(along):
  */
-    __Pyx_TraceLine(386,0,__PYX_ERR(0, 386, __pyx_L1_error))
     __pyx_v_along = (((__pyx_v_seg_dx * __pyx_v_mid_dx) + (__pyx_v_seg_dy * __pyx_v_mid_dy)) / __pyx_v_seg_hypot_sq);
 
     /* "cartopy/trace.pyx":388
@@ -5186,7 +4658,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *             valid = True
  *         else:
  */
-    __Pyx_TraceLine(388,0,__PYX_ERR(0, 388, __pyx_L1_error))
     __pyx_t_1 = (npy_isnan(__pyx_v_along) != 0);
     if (__pyx_t_1) {
 
@@ -5197,7 +4668,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *         else:
  *             valid = 0.0 < along < 1.0
  */
-      __Pyx_TraceLine(389,0,__PYX_ERR(0, 389, __pyx_L1_error))
       __pyx_v_valid = 1;
 
       /* "cartopy/trace.pyx":388
@@ -5217,7 +4687,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *             if valid:
  *                 # For the distance of the point from the line segment, using
  */
-    __Pyx_TraceLine(391,0,__PYX_ERR(0, 391, __pyx_L1_error))
     /*else*/ {
       __pyx_t_1 = (0.0 < __pyx_v_along);
       if (__pyx_t_1) {
@@ -5232,7 +4701,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *                 # For the distance of the point from the line segment, using
  *                 # the same geometry above, use sin instead of cos:
  */
-      __Pyx_TraceLine(392,0,__PYX_ERR(0, 392, __pyx_L1_error))
       __pyx_t_1 = (__pyx_v_valid != 0);
       if (__pyx_t_1) {
 
@@ -5243,7 +4711,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *                               sqrt(seg_hypot_sq))
  *                 if inside:
  */
-        __Pyx_TraceLine(397,0,__PYX_ERR(0, 397, __pyx_L1_error))
         __pyx_v_separation = (fabs(((__pyx_v_mid_dx * __pyx_v_seg_dy) - (__pyx_v_mid_dy * __pyx_v_seg_dx))) / sqrt(__pyx_v_seg_hypot_sq));
 
         /* "cartopy/trace.pyx":399
@@ -5253,7 +4720,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *                     # Scale the lateral threshold by the distance from
  *                     # the nearest end. I.e. Near the ends the lateral
  */
-        __Pyx_TraceLine(399,0,__PYX_ERR(0, 399, __pyx_L1_error))
         __pyx_t_1 = (__pyx_v_inside != 0);
         if (__pyx_t_1) {
 
@@ -5264,7 +4730,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *                 else:
  *                     # Check if the mid-point makes less than ~11 degree
  */
-          __Pyx_TraceLine(405,0,__PYX_ERR(0, 405, __pyx_L1_error))
           __pyx_v_valid = (__pyx_v_separation <= ((__pyx_v_threshold * 2.0) * (0.5 - fabs((0.5 - __pyx_v_along)))));
 
           /* "cartopy/trace.pyx":399
@@ -5284,7 +4749,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *                     valid = ((separation * separation) / hypot) < 0.04
  * 
  */
-        __Pyx_TraceLine(413,0,__PYX_ERR(0, 413, __pyx_L1_error))
         /*else*/ {
           __pyx_v_hypot = ((__pyx_v_mid_dx * __pyx_v_mid_dx) + (__pyx_v_mid_dy * __pyx_v_mid_dy));
 
@@ -5295,7 +4759,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  * 
  *         if valid:
  */
-          __Pyx_TraceLine(414,0,__PYX_ERR(0, 414, __pyx_L1_error))
           __pyx_v_valid = (((__pyx_v_separation * __pyx_v_separation) / __pyx_v_hypot) < 0.04);
         }
         __pyx_L10:;
@@ -5318,7 +4781,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *             # TODO: Re-use geometries, instead of create-destroy!
  * 
  */
-    __Pyx_TraceLine(416,0,__PYX_ERR(0, 416, __pyx_L1_error))
     __pyx_t_1 = (__pyx_v_valid != 0);
     if (__pyx_t_1) {
 
@@ -5329,7 +4791,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *             GEOSCoordSeq_setX_r(handle, coords, 0, p_start.x)
  *             GEOSCoordSeq_setY_r(handle, coords, 0, p_start.y)
  */
-      __Pyx_TraceLine(420,0,__PYX_ERR(0, 420, __pyx_L1_error))
       __pyx_v_coords = GEOSCoordSeq_create_r(__pyx_v_handle, 2, 2);
 
       /* "cartopy/trace.pyx":421
@@ -5339,7 +4800,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *             GEOSCoordSeq_setY_r(handle, coords, 0, p_start.y)
  *             GEOSCoordSeq_setX_r(handle, coords, 1, p_end.x)
  */
-      __Pyx_TraceLine(421,0,__PYX_ERR(0, 421, __pyx_L1_error))
       (void)(GEOSCoordSeq_setX_r(__pyx_v_handle, __pyx_v_coords, 0, __pyx_v_p_start.x));
 
       /* "cartopy/trace.pyx":422
@@ -5349,7 +4809,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *             GEOSCoordSeq_setX_r(handle, coords, 1, p_end.x)
  *             GEOSCoordSeq_setY_r(handle, coords, 1, p_end.y)
  */
-      __Pyx_TraceLine(422,0,__PYX_ERR(0, 422, __pyx_L1_error))
       (void)(GEOSCoordSeq_setY_r(__pyx_v_handle, __pyx_v_coords, 0, __pyx_v_p_start.y));
 
       /* "cartopy/trace.pyx":423
@@ -5359,7 +4818,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *             GEOSCoordSeq_setY_r(handle, coords, 1, p_end.y)
  *             g_segment = GEOSGeom_createLineString_r(handle, coords)
  */
-      __Pyx_TraceLine(423,0,__PYX_ERR(0, 423, __pyx_L1_error))
       (void)(GEOSCoordSeq_setX_r(__pyx_v_handle, __pyx_v_coords, 1, __pyx_v_p_end.x));
 
       /* "cartopy/trace.pyx":424
@@ -5369,7 +4827,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *             g_segment = GEOSGeom_createLineString_r(handle, coords)
  * 
  */
-      __Pyx_TraceLine(424,0,__PYX_ERR(0, 424, __pyx_L1_error))
       (void)(GEOSCoordSeq_setY_r(__pyx_v_handle, __pyx_v_coords, 1, __pyx_v_p_end.y));
 
       /* "cartopy/trace.pyx":425
@@ -5379,7 +4836,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  * 
  *             if inside:
  */
-      __Pyx_TraceLine(425,0,__PYX_ERR(0, 425, __pyx_L1_error))
       __pyx_v_g_segment = GEOSGeom_createLineString_r(__pyx_v_handle, __pyx_v_coords);
 
       /* "cartopy/trace.pyx":427
@@ -5389,7 +4845,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *                 valid = GEOSPreparedCovers_r(handle, gp_domain, g_segment)
  *             else:
  */
-      __Pyx_TraceLine(427,0,__PYX_ERR(0, 427, __pyx_L1_error))
       __pyx_t_1 = (__pyx_v_inside != 0);
       if (__pyx_t_1) {
 
@@ -5400,7 +4855,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  *             else:
  *                 valid = GEOSPreparedDisjoint_r(handle, gp_domain, g_segment)
  */
-        __Pyx_TraceLine(428,0,__PYX_ERR(0, 428, __pyx_L1_error))
         __pyx_v_valid = GEOSPreparedCovers_r(__pyx_v_handle, __pyx_v_gp_domain, __pyx_v_g_segment);
 
         /* "cartopy/trace.pyx":427
@@ -5420,7 +4874,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  * 
  *             GEOSGeom_destroy_r(handle, g_segment)
  */
-      __Pyx_TraceLine(430,0,__PYX_ERR(0, 430, __pyx_L1_error))
       /*else*/ {
         __pyx_v_valid = GEOSPreparedDisjoint_r(__pyx_v_handle, __pyx_v_gp_domain, __pyx_v_g_segment);
       }
@@ -5433,7 +4886,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  * 
  *     return valid
  */
-      __Pyx_TraceLine(432,0,__PYX_ERR(0, 432, __pyx_L1_error))
       GEOSGeom_destroy_r(__pyx_v_handle, __pyx_v_g_segment);
 
       /* "cartopy/trace.pyx":416
@@ -5454,7 +4906,6 @@ static bool __pyx_f_7cartopy_5trace_stra
  * 
  * 
  */
-  __Pyx_TraceLine(434,0,__PYX_ERR(0, 434, __pyx_L1_error))
   __pyx_r = __pyx_v_valid;
   goto __pyx_L0;
 
@@ -5467,11 +4918,7 @@ static bool __pyx_f_7cartopy_5trace_stra
  */
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy.trace.straightAndDomain", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_r = 0;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -5488,14 +4935,15 @@ static void __pyx_f_7cartopy_5trace_bise
   double __pyx_v_t_current;
   __pyx_t_7cartopy_5trace_Point __pyx_v_p_current;
   bool __pyx_v_valid;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   PyObject *__pyx_t_2 = NULL;
   PyObject *__pyx_t_3 = NULL;
   bool __pyx_t_4;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("bisect", 0);
-  __Pyx_TraceCall("bisect", __pyx_f[0], 437, 0, __PYX_ERR(0, 437, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":447
  * 
@@ -5504,7 +4952,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *     (&p_min)[0] = p_start
  *     (&t_max)[0] = 1.0
  */
-  __Pyx_TraceLine(447,0,__PYX_ERR(0, 447, __pyx_L1_error))
   ((&__pyx_v_t_min)[0]) = __pyx_v_t_start;
 
   /* "cartopy/trace.pyx":448
@@ -5514,7 +4961,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *     (&t_max)[0] = 1.0
  *     (&p_max)[0] = p_end
  */
-  __Pyx_TraceLine(448,0,__PYX_ERR(0, 448, __pyx_L1_error))
   ((&__pyx_v_p_min)[0]) = __pyx_v_p_start;
 
   /* "cartopy/trace.pyx":449
@@ -5524,7 +4970,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *     (&p_max)[0] = p_end
  * 
  */
-  __Pyx_TraceLine(449,0,__PYX_ERR(0, 449, __pyx_L1_error))
   ((&__pyx_v_t_max)[0]) = 1.0;
 
   /* "cartopy/trace.pyx":450
@@ -5534,7 +4979,6 @@ static void __pyx_f_7cartopy_5trace_bise
  * 
  *     # Start the search at the end.
  */
-  __Pyx_TraceLine(450,0,__PYX_ERR(0, 450, __pyx_L1_error))
   ((&__pyx_v_p_max)[0]) = __pyx_v_p_end;
 
   /* "cartopy/trace.pyx":453
@@ -5544,7 +4988,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *     p_current = p_max
  * 
  */
-  __Pyx_TraceLine(453,0,__PYX_ERR(0, 453, __pyx_L1_error))
   __pyx_v_t_current = __pyx_v_t_max;
 
   /* "cartopy/trace.pyx":454
@@ -5554,7 +4997,6 @@ static void __pyx_f_7cartopy_5trace_bise
  * 
  *     # TODO: See if we can convert the 't' threshold into one based on the
  */
-  __Pyx_TraceLine(454,0,__PYX_ERR(0, 454, __pyx_L1_error))
   __pyx_v_p_current = __pyx_v_p_max;
 
   /* "cartopy/trace.pyx":459
@@ -5564,7 +5006,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *         if DEBUG:
  *             print("t: ", t_current)
  */
-  __Pyx_TraceLine(459,0,__PYX_ERR(0, 459, __pyx_L1_error))
   while (1) {
     __pyx_t_1 = ((fabs((__pyx_v_t_max - __pyx_v_t_min)) > 1.0e-6) != 0);
     if (!__pyx_t_1) break;
@@ -5576,7 +5017,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *             print("t: ", t_current)
  * 
  */
-    __Pyx_TraceLine(460,0,__PYX_ERR(0, 460, __pyx_L1_error))
     __pyx_t_1 = (__pyx_v_7cartopy_5trace_DEBUG != 0);
     if (__pyx_t_1) {
 
@@ -5587,19 +5027,20 @@ static void __pyx_f_7cartopy_5trace_bise
  * 
  *         if state == POINT_IN:
  */
-      __Pyx_TraceLine(461,0,__PYX_ERR(0, 461, __pyx_L1_error))
       __pyx_t_2 = PyFloat_FromDouble(__pyx_v_t_current); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 461, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_2);
       __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 461, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_3);
-      __Pyx_INCREF(__pyx_kp_s_t);
-      __Pyx_GIVEREF(__pyx_kp_s_t);
-      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_t);
+      __Pyx_INCREF(__pyx_kp_u_t);
+      __Pyx_GIVEREF(__pyx_kp_u_t);
+      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_t);
       __Pyx_GIVEREF(__pyx_t_2);
       PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
       __pyx_t_2 = 0;
-      if (__Pyx_PrintOne(0, __pyx_t_3) < 0) __PYX_ERR(0, 461, __pyx_L1_error)
+      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 461, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_2);
       __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
       /* "cartopy/trace.pyx":460
  * 
@@ -5617,7 +5058,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *             # Straight and entirely-inside-domain
  *             valid = straightAndDomain(t_start, p_start, t_current, p_current,
  */
-    __Pyx_TraceLine(463,0,__PYX_ERR(0, 463, __pyx_L1_error))
     switch (__pyx_v_state) {
       case __pyx_e_7cartopy_5trace_POINT_IN:
 
@@ -5628,7 +5068,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *                                       interpolator, threshold,
  *                                       handle, gp_domain, True)
  */
-      __Pyx_TraceLine(465,0,__PYX_ERR(0, 465, __pyx_L1_error))
       __pyx_v_valid = __pyx_f_7cartopy_5trace_straightAndDomain(__pyx_v_t_start, __pyx_v_p_start, __pyx_v_t_current, __pyx_v_p_current, __pyx_v_interpolator, __pyx_v_threshold, __pyx_v_handle, __pyx_v_gp_domain, 1);
 
       /* "cartopy/trace.pyx":463
@@ -5648,7 +5087,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *                                       interpolator, threshold,
  *                                       handle, gp_domain, False)
  */
-      __Pyx_TraceLine(471,0,__PYX_ERR(0, 471, __pyx_L1_error))
       __pyx_v_valid = __pyx_f_7cartopy_5trace_straightAndDomain(__pyx_v_t_start, __pyx_v_p_start, __pyx_v_t_current, __pyx_v_p_current, __pyx_v_interpolator, __pyx_v_threshold, __pyx_v_handle, __pyx_v_gp_domain, 0);
 
       /* "cartopy/trace.pyx":469
@@ -5668,7 +5106,6 @@ static void __pyx_f_7cartopy_5trace_bise
  * 
  *         if DEBUG:
  */
-      __Pyx_TraceLine(475,0,__PYX_ERR(0, 475, __pyx_L1_error))
       __pyx_t_1 = (!(npy_isfinite(__pyx_v_p_current.x) != 0));
       if (!__pyx_t_1) {
       } else {
@@ -5689,7 +5126,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *             print("   => valid: ", valid)
  * 
  */
-    __Pyx_TraceLine(477,0,__PYX_ERR(0, 477, __pyx_L1_error))
     __pyx_t_1 = (__pyx_v_7cartopy_5trace_DEBUG != 0);
     if (__pyx_t_1) {
 
@@ -5700,18 +5136,19 @@ static void __pyx_f_7cartopy_5trace_bise
  * 
  *         if valid:
  */
-      __Pyx_TraceLine(478,0,__PYX_ERR(0, 478, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_valid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 478, __pyx_L1_error)
+      __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_valid); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 478, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_2);
+      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 478, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 478, __pyx_L1_error)
+      __Pyx_INCREF(__pyx_kp_u_valid);
+      __Pyx_GIVEREF(__pyx_kp_u_valid);
+      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_valid);
+      __Pyx_GIVEREF(__pyx_t_2);
+      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
+      __pyx_t_2 = 0;
+      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 478, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_2);
-      __Pyx_INCREF(__pyx_kp_s_valid);
-      __Pyx_GIVEREF(__pyx_kp_s_valid);
-      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_valid);
-      __Pyx_GIVEREF(__pyx_t_3);
-      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
-      __pyx_t_3 = 0;
-      if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 478, __pyx_L1_error)
+      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
       __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
       /* "cartopy/trace.pyx":477
@@ -5730,7 +5167,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *             (&t_min)[0] = t_current
  *             (&p_min)[0] = p_current
  */
-    __Pyx_TraceLine(480,0,__PYX_ERR(0, 480, __pyx_L1_error))
     __pyx_t_1 = (__pyx_v_valid != 0);
     if (__pyx_t_1) {
 
@@ -5741,7 +5177,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *             (&p_min)[0] = p_current
  *         else:
  */
-      __Pyx_TraceLine(481,0,__PYX_ERR(0, 481, __pyx_L1_error))
       ((&__pyx_v_t_min)[0]) = __pyx_v_t_current;
 
       /* "cartopy/trace.pyx":482
@@ -5751,7 +5186,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *         else:
  *             (&t_max)[0] = t_current
  */
-      __Pyx_TraceLine(482,0,__PYX_ERR(0, 482, __pyx_L1_error))
       ((&__pyx_v_p_min)[0]) = __pyx_v_p_current;
 
       /* "cartopy/trace.pyx":480
@@ -5771,7 +5205,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *             (&p_max)[0] = p_current
  * 
  */
-    __Pyx_TraceLine(484,0,__PYX_ERR(0, 484, __pyx_L1_error))
     /*else*/ {
       ((&__pyx_v_t_max)[0]) = __pyx_v_t_current;
 
@@ -5782,7 +5215,6 @@ static void __pyx_f_7cartopy_5trace_bise
  * 
  *         t_current = (t_min + t_max) * 0.5
  */
-      __Pyx_TraceLine(485,0,__PYX_ERR(0, 485, __pyx_L1_error))
       ((&__pyx_v_p_max)[0]) = __pyx_v_p_current;
     }
     __pyx_L9:;
@@ -5794,7 +5226,6 @@ static void __pyx_f_7cartopy_5trace_bise
  *         p_current = interpolator.interpolate(t_current)
  * 
  */
-    __Pyx_TraceLine(487,0,__PYX_ERR(0, 487, __pyx_L1_error))
     __pyx_v_t_current = ((__pyx_v_t_min + __pyx_v_t_max) * 0.5);
 
     /* "cartopy/trace.pyx":488
@@ -5804,7 +5235,6 @@ static void __pyx_f_7cartopy_5trace_bise
  * 
  * 
  */
-    __Pyx_TraceLine(488,0,__PYX_ERR(0, 488, __pyx_L1_error))
     __pyx_v_p_current = ((struct __pyx_vtabstruct_7cartopy_5trace_Interpolator *)__pyx_v_interpolator->__pyx_vtab)->interpolate(__pyx_v_interpolator, __pyx_v_t_current);
   }
 
@@ -5823,7 +5253,6 @@ static void __pyx_f_7cartopy_5trace_bise
   __Pyx_XDECREF(__pyx_t_3);
   __Pyx_WriteUnraisable("cartopy.trace.bisect", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -5845,7 +5274,6 @@ static void __pyx_f_7cartopy_5trace__pro
   double __pyx_v_t_max;
   enum __pyx_t_7cartopy_5trace_State __pyx_v_state;
   size_t __pyx_v_old_lines_size;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   PyObject *__pyx_t_2 = NULL;
@@ -5854,8 +5282,10 @@ static void __pyx_f_7cartopy_5trace__pro
   int __pyx_t_5;
   PyObject *__pyx_t_6 = NULL;
   PyObject *__pyx_t_7 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("_project_segment", 0);
-  __Pyx_TraceCall("_project_segment", __pyx_f[0], 491, 0, __PYX_ERR(0, 491, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":501
  *     cdef State state
@@ -5864,7 +5294,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *     GEOSCoordSeq_getY_r(handle, src_coords, src_idx_from, &p_current.y)
  *     GEOSCoordSeq_getX_r(handle, src_coords, src_idx_to, &p_end.x)
  */
-  __Pyx_TraceLine(501,0,__PYX_ERR(0, 501, __pyx_L1_error))
   (void)(GEOSCoordSeq_getX_r(__pyx_v_handle, __pyx_v_src_coords, __pyx_v_src_idx_from, (&__pyx_v_p_current.x)));
 
   /* "cartopy/trace.pyx":502
@@ -5874,7 +5303,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *     GEOSCoordSeq_getX_r(handle, src_coords, src_idx_to, &p_end.x)
  *     GEOSCoordSeq_getY_r(handle, src_coords, src_idx_to, &p_end.y)
  */
-  __Pyx_TraceLine(502,0,__PYX_ERR(0, 502, __pyx_L1_error))
   (void)(GEOSCoordSeq_getY_r(__pyx_v_handle, __pyx_v_src_coords, __pyx_v_src_idx_from, (&__pyx_v_p_current.y)));
 
   /* "cartopy/trace.pyx":503
@@ -5884,7 +5312,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *     GEOSCoordSeq_getY_r(handle, src_coords, src_idx_to, &p_end.y)
  *     if DEBUG:
  */
-  __Pyx_TraceLine(503,0,__PYX_ERR(0, 503, __pyx_L1_error))
   (void)(GEOSCoordSeq_getX_r(__pyx_v_handle, __pyx_v_src_coords, __pyx_v_src_idx_to, (&__pyx_v_p_end.x)));
 
   /* "cartopy/trace.pyx":504
@@ -5894,7 +5321,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *     if DEBUG:
  *         print("Setting line:")
  */
-  __Pyx_TraceLine(504,0,__PYX_ERR(0, 504, __pyx_L1_error))
   (void)(GEOSCoordSeq_getY_r(__pyx_v_handle, __pyx_v_src_coords, __pyx_v_src_idx_to, (&__pyx_v_p_end.y)));
 
   /* "cartopy/trace.pyx":505
@@ -5904,7 +5330,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *         print("Setting line:")
  *         print("   ", p_current.x, ", ", p_current.y)
  */
-  __Pyx_TraceLine(505,0,__PYX_ERR(0, 505, __pyx_L1_error))
   __pyx_t_1 = (__pyx_v_7cartopy_5trace_DEBUG != 0);
   if (__pyx_t_1) {
 
@@ -5915,8 +5340,9 @@ static void __pyx_f_7cartopy_5trace__pro
  *         print("   ", p_current.x, ", ", p_current.y)
  *         print("   ", p_end.x, ", ", p_end.y)
  */
-    __Pyx_TraceLine(506,0,__PYX_ERR(0, 506, __pyx_L1_error))
-    if (__Pyx_PrintOne(0, __pyx_kp_s_Setting_line) < 0) __PYX_ERR(0, 506, __pyx_L1_error)
+    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 506, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_2);
+    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
     /* "cartopy/trace.pyx":507
  *     if DEBUG:
@@ -5925,27 +5351,28 @@ static void __pyx_f_7cartopy_5trace__pro
  *         print("   ", p_end.x, ", ", p_end.y)
  * 
  */
-    __Pyx_TraceLine(507,0,__PYX_ERR(0, 507, __pyx_L1_error))
     __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p_current.x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 507, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_3 = PyFloat_FromDouble(__pyx_v_p_current.y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 507, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
     __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 507, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
-    __Pyx_INCREF(__pyx_kp_s__15);
-    __Pyx_GIVEREF(__pyx_kp_s__15);
-    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s__15);
+    __Pyx_INCREF(__pyx_kp_u__9);
+    __Pyx_GIVEREF(__pyx_kp_u__9);
+    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u__9);
     __Pyx_GIVEREF(__pyx_t_2);
     PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
-    __Pyx_INCREF(__pyx_kp_s__16);
-    __Pyx_GIVEREF(__pyx_kp_s__16);
-    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_s__16);
+    __Pyx_INCREF(__pyx_kp_u__10);
+    __Pyx_GIVEREF(__pyx_kp_u__10);
+    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u__10);
     __Pyx_GIVEREF(__pyx_t_3);
     PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_3);
     __pyx_t_2 = 0;
     __pyx_t_3 = 0;
-    if (__Pyx_PrintOne(0, __pyx_t_4) < 0) __PYX_ERR(0, 507, __pyx_L1_error)
+    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 507, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_3);
     __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
+    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
 
     /* "cartopy/trace.pyx":508
  *         print("Setting line:")
@@ -5954,27 +5381,28 @@ static void __pyx_f_7cartopy_5trace__pro
  * 
  *     interpolator.set_line(p_current, p_end)
  */
-    __Pyx_TraceLine(508,0,__PYX_ERR(0, 508, __pyx_L1_error))
-    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_p_end.x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 508, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_4);
-    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_p_end.y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 508, __pyx_L1_error)
+    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_p_end.x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 508, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
+    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_p_end.y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 508, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_4);
     __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 508, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
-    __Pyx_INCREF(__pyx_kp_s__15);
-    __Pyx_GIVEREF(__pyx_kp_s__15);
-    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s__15);
-    __Pyx_GIVEREF(__pyx_t_4);
-    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
-    __Pyx_INCREF(__pyx_kp_s__16);
-    __Pyx_GIVEREF(__pyx_kp_s__16);
-    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_s__16);
+    __Pyx_INCREF(__pyx_kp_u__9);
+    __Pyx_GIVEREF(__pyx_kp_u__9);
+    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u__9);
     __Pyx_GIVEREF(__pyx_t_3);
-    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_3);
-    __pyx_t_4 = 0;
+    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
+    __Pyx_INCREF(__pyx_kp_u__10);
+    __Pyx_GIVEREF(__pyx_kp_u__10);
+    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u__10);
+    __Pyx_GIVEREF(__pyx_t_4);
+    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_4);
     __pyx_t_3 = 0;
-    if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 508, __pyx_L1_error)
+    __pyx_t_4 = 0;
+    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 508, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_4);
     __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
+    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
 
     /* "cartopy/trace.pyx":505
  *     GEOSCoordSeq_getX_r(handle, src_coords, src_idx_to, &p_end.x)
@@ -5992,7 +5420,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *     p_current = interpolator.project(p_current)
  *     p_end = interpolator.project(p_end)
  */
-  __Pyx_TraceLine(510,0,__PYX_ERR(0, 510, __pyx_L1_error))
   ((struct __pyx_vtabstruct_7cartopy_5trace_Interpolator *)__pyx_v_interpolator->__pyx_vtab)->set_line(__pyx_v_interpolator, __pyx_v_p_current, __pyx_v_p_end);
 
   /* "cartopy/trace.pyx":511
@@ -6002,7 +5429,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *     p_end = interpolator.project(p_end)
  *     if DEBUG:
  */
-  __Pyx_TraceLine(511,0,__PYX_ERR(0, 511, __pyx_L1_error))
   __pyx_v_p_current = ((struct __pyx_vtabstruct_7cartopy_5trace_Interpolator *)__pyx_v_interpolator->__pyx_vtab)->project(__pyx_v_interpolator, __pyx_v_p_current);
 
   /* "cartopy/trace.pyx":512
@@ -6012,7 +5438,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *     if DEBUG:
  *         print("Projected as:")
  */
-  __Pyx_TraceLine(512,0,__PYX_ERR(0, 512, __pyx_L1_error))
   __pyx_v_p_end = ((struct __pyx_vtabstruct_7cartopy_5trace_Interpolator *)__pyx_v_interpolator->__pyx_vtab)->project(__pyx_v_interpolator, __pyx_v_p_end);
 
   /* "cartopy/trace.pyx":513
@@ -6022,7 +5447,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *         print("Projected as:")
  *         print("   ", p_current.x, ", ", p_current.y)
  */
-  __Pyx_TraceLine(513,0,__PYX_ERR(0, 513, __pyx_L1_error))
   __pyx_t_1 = (__pyx_v_7cartopy_5trace_DEBUG != 0);
   if (__pyx_t_1) {
 
@@ -6033,8 +5457,9 @@ static void __pyx_f_7cartopy_5trace__pro
  *         print("   ", p_current.x, ", ", p_current.y)
  *         print("   ", p_end.x, ", ", p_end.y)
  */
-    __Pyx_TraceLine(514,0,__PYX_ERR(0, 514, __pyx_L1_error))
-    if (__Pyx_PrintOne(0, __pyx_kp_s_Projected_as) < 0) __PYX_ERR(0, 514, __pyx_L1_error)
+    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 514, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_4);
+    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
 
     /* "cartopy/trace.pyx":515
  *     if DEBUG:
@@ -6043,27 +5468,28 @@ static void __pyx_f_7cartopy_5trace__pro
  *         print("   ", p_end.x, ", ", p_end.y)
  * 
  */
-    __Pyx_TraceLine(515,0,__PYX_ERR(0, 515, __pyx_L1_error))
-    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p_current.x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 515, __pyx_L1_error)
+    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_p_current.x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 515, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_4);
+    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p_current.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 515, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
-    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_p_current.y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 515, __pyx_L1_error)
+    __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 515, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
-    __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 515, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_4);
-    __Pyx_INCREF(__pyx_kp_s__15);
-    __Pyx_GIVEREF(__pyx_kp_s__15);
-    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s__15);
+    __Pyx_INCREF(__pyx_kp_u__9);
+    __Pyx_GIVEREF(__pyx_kp_u__9);
+    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u__9);
+    __Pyx_GIVEREF(__pyx_t_4);
+    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
+    __Pyx_INCREF(__pyx_kp_u__10);
+    __Pyx_GIVEREF(__pyx_kp_u__10);
+    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__10);
     __Pyx_GIVEREF(__pyx_t_2);
-    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
-    __Pyx_INCREF(__pyx_kp_s__16);
-    __Pyx_GIVEREF(__pyx_kp_s__16);
-    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_s__16);
-    __Pyx_GIVEREF(__pyx_t_3);
-    PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_3);
+    PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_2);
+    __pyx_t_4 = 0;
     __pyx_t_2 = 0;
-    __pyx_t_3 = 0;
-    if (__Pyx_PrintOne(0, __pyx_t_4) < 0) __PYX_ERR(0, 515, __pyx_L1_error)
-    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
+    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 515, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_2);
+    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
     /* "cartopy/trace.pyx":516
  *         print("Projected as:")
@@ -6072,27 +5498,28 @@ static void __pyx_f_7cartopy_5trace__pro
  * 
  *     t_current = 0.0
  */
-    __Pyx_TraceLine(516,0,__PYX_ERR(0, 516, __pyx_L1_error))
-    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_p_end.x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 516, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_4);
+    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p_end.x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 516, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_3 = PyFloat_FromDouble(__pyx_v_p_end.y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 516, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
-    __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 516, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_2);
-    __Pyx_INCREF(__pyx_kp_s__15);
-    __Pyx_GIVEREF(__pyx_kp_s__15);
-    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s__15);
-    __Pyx_GIVEREF(__pyx_t_4);
-    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
-    __Pyx_INCREF(__pyx_kp_s__16);
-    __Pyx_GIVEREF(__pyx_kp_s__16);
-    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_s__16);
+    __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 516, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_4);
+    __Pyx_INCREF(__pyx_kp_u__9);
+    __Pyx_GIVEREF(__pyx_kp_u__9);
+    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u__9);
+    __Pyx_GIVEREF(__pyx_t_2);
+    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
+    __Pyx_INCREF(__pyx_kp_u__10);
+    __Pyx_GIVEREF(__pyx_kp_u__10);
+    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u__10);
     __Pyx_GIVEREF(__pyx_t_3);
-    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_3);
-    __pyx_t_4 = 0;
+    PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_3);
+    __pyx_t_2 = 0;
     __pyx_t_3 = 0;
-    if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
-    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
+    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 516, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_3);
+    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
+    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
 
     /* "cartopy/trace.pyx":513
  *     p_current = interpolator.project(p_current)
@@ -6110,7 +5537,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *     state = get_state(p_current, gp_domain, handle)
  * 
  */
-  __Pyx_TraceLine(518,0,__PYX_ERR(0, 518, __pyx_L1_error))
   __pyx_v_t_current = 0.0;
 
   /* "cartopy/trace.pyx":519
@@ -6120,7 +5546,6 @@ static void __pyx_f_7cartopy_5trace__pro
  * 
  *     cdef size_t old_lines_size = lines.size()
  */
-  __Pyx_TraceLine(519,0,__PYX_ERR(0, 519, __pyx_L1_error))
   __pyx_v_state = __pyx_f_7cartopy_5trace_get_state(__pyx_v_p_current, __pyx_v_gp_domain, __pyx_v_handle);
 
   /* "cartopy/trace.pyx":521
@@ -6130,7 +5555,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *     while t_current < 1.0 and (lines.size() - old_lines_size) < 100:
  *         if DEBUG:
  */
-  __Pyx_TraceLine(521,0,__PYX_ERR(0, 521, __pyx_L1_error))
   __pyx_v_old_lines_size = __pyx_f_7cartopy_5trace_15LineAccumulator_size(__pyx_v_lines);
 
   /* "cartopy/trace.pyx":522
@@ -6140,7 +5564,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *         if DEBUG:
  *             print("Bisecting from: ", t_current, " (")
  */
-  __Pyx_TraceLine(522,0,__PYX_ERR(0, 522, __pyx_L1_error))
   while (1) {
     __pyx_t_5 = ((__pyx_v_t_current < 1.0) != 0);
     if (__pyx_t_5) {
@@ -6160,7 +5583,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *             print("Bisecting from: ", t_current, " (")
  *             if state == POINT_IN:
  */
-    __Pyx_TraceLine(523,0,__PYX_ERR(0, 523, __pyx_L1_error))
     __pyx_t_1 = (__pyx_v_7cartopy_5trace_DEBUG != 0);
     if (__pyx_t_1) {
 
@@ -6171,21 +5593,22 @@ static void __pyx_f_7cartopy_5trace__pro
  *             if state == POINT_IN:
  *                 print("IN")
  */
-      __Pyx_TraceLine(524,0,__PYX_ERR(0, 524, __pyx_L1_error))
-      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_t_current); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 524, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_2);
-      __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 524, __pyx_L1_error)
+      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_t_current); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 524, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_3);
-      __Pyx_INCREF(__pyx_kp_s_Bisecting_from);
-      __Pyx_GIVEREF(__pyx_kp_s_Bisecting_from);
-      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_Bisecting_from);
-      __Pyx_GIVEREF(__pyx_t_2);
-      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
-      __Pyx_INCREF(__pyx_kp_s__17);
-      __Pyx_GIVEREF(__pyx_kp_s__17);
-      PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_s__17);
-      __pyx_t_2 = 0;
-      if (__Pyx_PrintOne(0, __pyx_t_3) < 0) __PYX_ERR(0, 524, __pyx_L1_error)
+      __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 524, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_4);
+      __Pyx_INCREF(__pyx_kp_u_Bisecting_from);
+      __Pyx_GIVEREF(__pyx_kp_u_Bisecting_from);
+      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_Bisecting_from);
+      __Pyx_GIVEREF(__pyx_t_3);
+      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
+      __Pyx_INCREF(__pyx_kp_u__12);
+      __Pyx_GIVEREF(__pyx_kp_u__12);
+      PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u__12);
+      __pyx_t_3 = 0;
+      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 524, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_3);
+      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
       __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
 
       /* "cartopy/trace.pyx":525
@@ -6195,7 +5618,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 print("IN")
  *             elif state == POINT_OUT:
  */
-      __Pyx_TraceLine(525,0,__PYX_ERR(0, 525, __pyx_L1_error))
       switch (__pyx_v_state) {
         case __pyx_e_7cartopy_5trace_POINT_IN:
 
@@ -6206,8 +5628,9 @@ static void __pyx_f_7cartopy_5trace__pro
  *             elif state == POINT_OUT:
  *                 print("OUT")
  */
-        __Pyx_TraceLine(526,0,__PYX_ERR(0, 526, __pyx_L1_error))
-        if (__Pyx_PrintOne(0, __pyx_n_s_IN) < 0) __PYX_ERR(0, 526, __pyx_L1_error)
+        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 526, __pyx_L1_error)
+        __Pyx_GOTREF(__pyx_t_3);
+        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
 
         /* "cartopy/trace.pyx":525
  *         if DEBUG:
@@ -6226,8 +5649,9 @@ static void __pyx_f_7cartopy_5trace__pro
  *             else:
  *                 print("NAN")
  */
-        __Pyx_TraceLine(528,0,__PYX_ERR(0, 528, __pyx_L1_error))
-        if (__Pyx_PrintOne(0, __pyx_n_s_OUT) < 0) __PYX_ERR(0, 528, __pyx_L1_error)
+        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 528, __pyx_L1_error)
+        __Pyx_GOTREF(__pyx_t_3);
+        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
 
         /* "cartopy/trace.pyx":527
  *             if state == POINT_IN:
@@ -6246,8 +5670,9 @@ static void __pyx_f_7cartopy_5trace__pro
  *             print(")")
  *             print("   ", p_current.x, ", ", p_current.y)
  */
-        __Pyx_TraceLine(530,0,__PYX_ERR(0, 530, __pyx_L1_error))
-        if (__Pyx_PrintOne(0, __pyx_n_s_NAN) < 0) __PYX_ERR(0, 530, __pyx_L1_error)
+        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 530, __pyx_L1_error)
+        __Pyx_GOTREF(__pyx_t_3);
+        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
         break;
       }
 
@@ -6258,8 +5683,9 @@ static void __pyx_f_7cartopy_5trace__pro
  *             print("   ", p_current.x, ", ", p_current.y)
  *             print("   ", p_end.x, ", ", p_end.y)
  */
-      __Pyx_TraceLine(531,0,__PYX_ERR(0, 531, __pyx_L1_error))
-      if (__Pyx_PrintOne(0, __pyx_kp_s__18) < 0) __PYX_ERR(0, 531, __pyx_L1_error)
+      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 531, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_3);
+      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
 
       /* "cartopy/trace.pyx":532
  *                 print("NAN")
@@ -6268,26 +5694,27 @@ static void __pyx_f_7cartopy_5trace__pro
  *             print("   ", p_end.x, ", ", p_end.y)
  * 
  */
-      __Pyx_TraceLine(532,0,__PYX_ERR(0, 532, __pyx_L1_error))
       __pyx_t_3 = PyFloat_FromDouble(__pyx_v_p_current.x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 532, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p_current.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 532, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_2);
-      __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 532, __pyx_L1_error)
+      __pyx_t_4 = PyFloat_FromDouble(__pyx_v_p_current.y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 532, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
-      __Pyx_INCREF(__pyx_kp_s__15);
-      __Pyx_GIVEREF(__pyx_kp_s__15);
-      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s__15);
+      __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 532, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_2);
+      __Pyx_INCREF(__pyx_kp_u__9);
+      __Pyx_GIVEREF(__pyx_kp_u__9);
+      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u__9);
       __Pyx_GIVEREF(__pyx_t_3);
-      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
-      __Pyx_INCREF(__pyx_kp_s__16);
-      __Pyx_GIVEREF(__pyx_kp_s__16);
-      PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_s__16);
-      __Pyx_GIVEREF(__pyx_t_2);
-      PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_2);
+      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
+      __Pyx_INCREF(__pyx_kp_u__10);
+      __Pyx_GIVEREF(__pyx_kp_u__10);
+      PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u__10);
+      __Pyx_GIVEREF(__pyx_t_4);
+      PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_4);
       __pyx_t_3 = 0;
-      __pyx_t_2 = 0;
-      if (__Pyx_PrintOne(0, __pyx_t_4) < 0) __PYX_ERR(0, 532, __pyx_L1_error)
+      __pyx_t_4 = 0;
+      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 532, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_4);
+      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
       __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
 
       /* "cartopy/trace.pyx":533
@@ -6297,27 +5724,28 @@ static void __pyx_f_7cartopy_5trace__pro
  * 
  *         bisect(t_current, p_current, p_end, handle, gp_domain, state,
  */
-      __Pyx_TraceLine(533,0,__PYX_ERR(0, 533, __pyx_L1_error))
       __pyx_t_4 = PyFloat_FromDouble(__pyx_v_p_end.x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 533, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
       __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p_end.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 533, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_2);
       __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 533, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_3);
-      __Pyx_INCREF(__pyx_kp_s__15);
-      __Pyx_GIVEREF(__pyx_kp_s__15);
-      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s__15);
+      __Pyx_INCREF(__pyx_kp_u__9);
+      __Pyx_GIVEREF(__pyx_kp_u__9);
+      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u__9);
       __Pyx_GIVEREF(__pyx_t_4);
       PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
-      __Pyx_INCREF(__pyx_kp_s__16);
-      __Pyx_GIVEREF(__pyx_kp_s__16);
-      PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_s__16);
+      __Pyx_INCREF(__pyx_kp_u__10);
+      __Pyx_GIVEREF(__pyx_kp_u__10);
+      PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__10);
       __Pyx_GIVEREF(__pyx_t_2);
       PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_2);
       __pyx_t_4 = 0;
       __pyx_t_2 = 0;
-      if (__Pyx_PrintOne(0, __pyx_t_3) < 0) __PYX_ERR(0, 533, __pyx_L1_error)
+      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 533, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_2);
       __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
       /* "cartopy/trace.pyx":523
  *     cdef size_t old_lines_size = lines.size()
@@ -6335,7 +5763,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                interpolator, threshold,
  *                t_min, p_min, t_max, p_max)
  */
-    __Pyx_TraceLine(535,0,__PYX_ERR(0, 535, __pyx_L1_error))
     __pyx_f_7cartopy_5trace_bisect(__pyx_v_t_current, __pyx_v_p_current, __pyx_v_p_end, __pyx_v_handle, __pyx_v_gp_domain, __pyx_v_state, __pyx_v_interpolator, __pyx_v_threshold, __pyx_v_t_min, __pyx_v_p_min, __pyx_v_t_max, __pyx_v_p_max);
 
     /* "cartopy/trace.pyx":538
@@ -6345,7 +5772,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *             print("   => ", t_min, "to", t_max)
  *             print("   => (", p_min.x, ", ", p_min.y, ") to (",
  */
-    __Pyx_TraceLine(538,0,__PYX_ERR(0, 538, __pyx_L1_error))
     __pyx_t_1 = (__pyx_v_7cartopy_5trace_DEBUG != 0);
     if (__pyx_t_1) {
 
@@ -6356,27 +5782,28 @@ static void __pyx_f_7cartopy_5trace__pro
  *             print("   => (", p_min.x, ", ", p_min.y, ") to (",
  *                   p_max.x, ", ", p_max.y, ")")
  */
-      __Pyx_TraceLine(539,0,__PYX_ERR(0, 539, __pyx_L1_error))
-      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_t_min); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 539, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_t_max); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 539, __pyx_L1_error)
+      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_t_min); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 539, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_2);
+      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_t_max); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 539, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_3);
       __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 539, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
-      __Pyx_INCREF(__pyx_kp_s__19);
-      __Pyx_GIVEREF(__pyx_kp_s__19);
-      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s__19);
-      __Pyx_GIVEREF(__pyx_t_3);
-      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
-      __Pyx_INCREF(__pyx_n_s_to);
-      __Pyx_GIVEREF(__pyx_n_s_to);
-      PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_n_s_to);
+      __Pyx_INCREF(__pyx_kp_u__18);
+      __Pyx_GIVEREF(__pyx_kp_u__18);
+      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u__18);
       __Pyx_GIVEREF(__pyx_t_2);
-      PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_2);
-      __pyx_t_3 = 0;
+      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
+      __Pyx_INCREF(__pyx_n_u_to);
+      __Pyx_GIVEREF(__pyx_n_u_to);
+      PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_n_u_to);
+      __Pyx_GIVEREF(__pyx_t_3);
+      PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_3);
       __pyx_t_2 = 0;
-      if (__Pyx_PrintOne(0, __pyx_t_4) < 0) __PYX_ERR(0, 539, __pyx_L1_error)
+      __pyx_t_3 = 0;
+      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 539, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_3);
       __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
+      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
 
       /* "cartopy/trace.pyx":540
  *         if DEBUG:
@@ -6385,11 +5812,10 @@ static void __pyx_f_7cartopy_5trace__pro
  *                   p_max.x, ", ", p_max.y, ")")
  * 
  */
-      __Pyx_TraceLine(540,0,__PYX_ERR(0, 540, __pyx_L1_error))
-      __pyx_t_4 = PyFloat_FromDouble(__pyx_v_p_min.x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 540, __pyx_L1_error)
+      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_p_min.x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 540, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_3);
+      __pyx_t_4 = PyFloat_FromDouble(__pyx_v_p_min.y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 540, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p_min.y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 540, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_2);
 
       /* "cartopy/trace.pyx":541
  *             print("   => ", t_min, "to", t_max)
@@ -6398,9 +5824,8 @@ static void __pyx_f_7cartopy_5trace__pro
  * 
  *         if state == POINT_IN:
  */
-      __Pyx_TraceLine(541,0,__PYX_ERR(0, 541, __pyx_L1_error))
-      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_p_max.x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 541, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
+      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_p_max.x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 541, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_2);
       __pyx_t_6 = PyFloat_FromDouble(__pyx_v_p_max.y); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 541, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_6);
 
@@ -6411,38 +5836,39 @@ static void __pyx_f_7cartopy_5trace__pro
  *                   p_max.x, ", ", p_max.y, ")")
  * 
  */
-      __Pyx_TraceLine(540,0,__PYX_ERR(0, 540, __pyx_L1_error))
       __pyx_t_7 = PyTuple_New(9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 540, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_7);
-      __Pyx_INCREF(__pyx_kp_s__20);
-      __Pyx_GIVEREF(__pyx_kp_s__20);
-      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_kp_s__20);
+      __Pyx_INCREF(__pyx_kp_u__19);
+      __Pyx_GIVEREF(__pyx_kp_u__19);
+      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_kp_u__19);
+      __Pyx_GIVEREF(__pyx_t_3);
+      PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_3);
+      __Pyx_INCREF(__pyx_kp_u__10);
+      __Pyx_GIVEREF(__pyx_kp_u__10);
+      PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_kp_u__10);
       __Pyx_GIVEREF(__pyx_t_4);
-      PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_4);
-      __Pyx_INCREF(__pyx_kp_s__16);
-      __Pyx_GIVEREF(__pyx_kp_s__16);
-      PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_kp_s__16);
+      PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_4);
+      __Pyx_INCREF(__pyx_kp_u_to_2);
+      __Pyx_GIVEREF(__pyx_kp_u_to_2);
+      PyTuple_SET_ITEM(__pyx_t_7, 4, __pyx_kp_u_to_2);
       __Pyx_GIVEREF(__pyx_t_2);
-      PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_2);
-      __Pyx_INCREF(__pyx_kp_s_to_2);
-      __Pyx_GIVEREF(__pyx_kp_s_to_2);
-      PyTuple_SET_ITEM(__pyx_t_7, 4, __pyx_kp_s_to_2);
-      __Pyx_GIVEREF(__pyx_t_3);
-      PyTuple_SET_ITEM(__pyx_t_7, 5, __pyx_t_3);
-      __Pyx_INCREF(__pyx_kp_s__16);
-      __Pyx_GIVEREF(__pyx_kp_s__16);
-      PyTuple_SET_ITEM(__pyx_t_7, 6, __pyx_kp_s__16);
+      PyTuple_SET_ITEM(__pyx_t_7, 5, __pyx_t_2);
+      __Pyx_INCREF(__pyx_kp_u__10);
+      __Pyx_GIVEREF(__pyx_kp_u__10);
+      PyTuple_SET_ITEM(__pyx_t_7, 6, __pyx_kp_u__10);
       __Pyx_GIVEREF(__pyx_t_6);
       PyTuple_SET_ITEM(__pyx_t_7, 7, __pyx_t_6);
-      __Pyx_INCREF(__pyx_kp_s__18);
-      __Pyx_GIVEREF(__pyx_kp_s__18);
-      PyTuple_SET_ITEM(__pyx_t_7, 8, __pyx_kp_s__18);
+      __Pyx_INCREF(__pyx_kp_u__16);
+      __Pyx_GIVEREF(__pyx_kp_u__16);
+      PyTuple_SET_ITEM(__pyx_t_7, 8, __pyx_kp_u__16);
+      __pyx_t_3 = 0;
       __pyx_t_4 = 0;
       __pyx_t_2 = 0;
-      __pyx_t_3 = 0;
       __pyx_t_6 = 0;
-      if (__Pyx_PrintOne(0, __pyx_t_7) < 0) __PYX_ERR(0, 540, __pyx_L1_error)
+      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_t_7, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 540, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_6);
       __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
+      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
 
       /* "cartopy/trace.pyx":538
  *                interpolator, threshold,
@@ -6460,7 +5886,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *             lines.add_point_if_empty(p_current)
  *             if t_min != t_current:
  */
-    __Pyx_TraceLine(543,0,__PYX_ERR(0, 543, __pyx_L1_error))
     switch (__pyx_v_state) {
       case __pyx_e_7cartopy_5trace_POINT_IN:
 
@@ -6471,7 +5896,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *             if t_min != t_current:
  *                 lines.add_point(p_min)
  */
-      __Pyx_TraceLine(544,0,__PYX_ERR(0, 544, __pyx_L1_error))
       __pyx_f_7cartopy_5trace_15LineAccumulator_add_point_if_empty(__pyx_v_lines, __pyx_v_p_current);
 
       /* "cartopy/trace.pyx":545
@@ -6481,7 +5905,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 lines.add_point(p_min)
  *                 t_current = t_min
  */
-      __Pyx_TraceLine(545,0,__PYX_ERR(0, 545, __pyx_L1_error))
       __pyx_t_1 = ((__pyx_v_t_min != __pyx_v_t_current) != 0);
       if (__pyx_t_1) {
 
@@ -6492,7 +5915,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 t_current = t_min
  *                 p_current = p_min
  */
-        __Pyx_TraceLine(546,0,__PYX_ERR(0, 546, __pyx_L1_error))
         __pyx_f_7cartopy_5trace_15LineAccumulator_add_point(__pyx_v_lines, __pyx_v_p_min);
 
         /* "cartopy/trace.pyx":547
@@ -6502,7 +5924,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 p_current = p_min
  *             else:
  */
-        __Pyx_TraceLine(547,0,__PYX_ERR(0, 547, __pyx_L1_error))
         __pyx_v_t_current = __pyx_v_t_min;
 
         /* "cartopy/trace.pyx":548
@@ -6512,7 +5933,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *             else:
  *                 t_current = t_max
  */
-        __Pyx_TraceLine(548,0,__PYX_ERR(0, 548, __pyx_L1_error))
         __pyx_v_p_current = __pyx_v_p_min;
 
         /* "cartopy/trace.pyx":545
@@ -6532,7 +5952,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 p_current = p_max
  *                 state = get_state(p_current, gp_domain, handle)
  */
-      __Pyx_TraceLine(550,0,__PYX_ERR(0, 550, __pyx_L1_error))
       /*else*/ {
         __pyx_v_t_current = __pyx_v_t_max;
 
@@ -6543,7 +5962,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 state = get_state(p_current, gp_domain, handle)
  *                 if state == POINT_IN:
  */
-        __Pyx_TraceLine(551,0,__PYX_ERR(0, 551, __pyx_L1_error))
         __pyx_v_p_current = __pyx_v_p_max;
 
         /* "cartopy/trace.pyx":552
@@ -6553,7 +5971,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 if state == POINT_IN:
  *                     lines.new_line()
  */
-        __Pyx_TraceLine(552,0,__PYX_ERR(0, 552, __pyx_L1_error))
         __pyx_v_state = __pyx_f_7cartopy_5trace_get_state(__pyx_v_p_current, __pyx_v_gp_domain, __pyx_v_handle);
 
         /* "cartopy/trace.pyx":553
@@ -6563,7 +5980,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                     lines.new_line()
  * 
  */
-        __Pyx_TraceLine(553,0,__PYX_ERR(0, 553, __pyx_L1_error))
         __pyx_t_1 = ((__pyx_v_state == __pyx_e_7cartopy_5trace_POINT_IN) != 0);
         if (__pyx_t_1) {
 
@@ -6574,7 +5990,6 @@ static void __pyx_f_7cartopy_5trace__pro
  * 
  *         elif state == POINT_OUT:
  */
-          __Pyx_TraceLine(554,0,__PYX_ERR(0, 554, __pyx_L1_error))
           __pyx_f_7cartopy_5trace_15LineAccumulator_new_line(__pyx_v_lines);
 
           /* "cartopy/trace.pyx":553
@@ -6605,7 +6020,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 t_current = t_min
  *                 p_current = p_min
  */
-      __Pyx_TraceLine(557,0,__PYX_ERR(0, 557, __pyx_L1_error))
       __pyx_t_1 = ((__pyx_v_t_min != __pyx_v_t_current) != 0);
       if (__pyx_t_1) {
 
@@ -6616,7 +6030,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 p_current = p_min
  *             else:
  */
-        __Pyx_TraceLine(558,0,__PYX_ERR(0, 558, __pyx_L1_error))
         __pyx_v_t_current = __pyx_v_t_min;
 
         /* "cartopy/trace.pyx":559
@@ -6626,7 +6039,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *             else:
  *                 t_current = t_max
  */
-        __Pyx_TraceLine(559,0,__PYX_ERR(0, 559, __pyx_L1_error))
         __pyx_v_p_current = __pyx_v_p_min;
 
         /* "cartopy/trace.pyx":557
@@ -6646,7 +6058,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 p_current = p_max
  *                 state = get_state(p_current, gp_domain, handle)
  */
-      __Pyx_TraceLine(561,0,__PYX_ERR(0, 561, __pyx_L1_error))
       /*else*/ {
         __pyx_v_t_current = __pyx_v_t_max;
 
@@ -6657,7 +6068,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 state = get_state(p_current, gp_domain, handle)
  *                 if state == POINT_IN:
  */
-        __Pyx_TraceLine(562,0,__PYX_ERR(0, 562, __pyx_L1_error))
         __pyx_v_p_current = __pyx_v_p_max;
 
         /* "cartopy/trace.pyx":563
@@ -6667,7 +6077,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 if state == POINT_IN:
  *                     lines.new_line()
  */
-        __Pyx_TraceLine(563,0,__PYX_ERR(0, 563, __pyx_L1_error))
         __pyx_v_state = __pyx_f_7cartopy_5trace_get_state(__pyx_v_p_current, __pyx_v_gp_domain, __pyx_v_handle);
 
         /* "cartopy/trace.pyx":564
@@ -6677,7 +6086,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                     lines.new_line()
  * 
  */
-        __Pyx_TraceLine(564,0,__PYX_ERR(0, 564, __pyx_L1_error))
         __pyx_t_1 = ((__pyx_v_state == __pyx_e_7cartopy_5trace_POINT_IN) != 0);
         if (__pyx_t_1) {
 
@@ -6688,7 +6096,6 @@ static void __pyx_f_7cartopy_5trace__pro
  * 
  *         else:
  */
-          __Pyx_TraceLine(565,0,__PYX_ERR(0, 565, __pyx_L1_error))
           __pyx_f_7cartopy_5trace_15LineAccumulator_new_line(__pyx_v_lines);
 
           /* "cartopy/trace.pyx":564
@@ -6719,7 +6126,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *             p_current = p_max
  *             state = get_state(p_current, gp_domain, handle)
  */
-      __Pyx_TraceLine(568,0,__PYX_ERR(0, 568, __pyx_L1_error))
       __pyx_v_t_current = __pyx_v_t_max;
 
       /* "cartopy/trace.pyx":569
@@ -6729,7 +6135,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *             state = get_state(p_current, gp_domain, handle)
  *             if state == POINT_IN:
  */
-      __Pyx_TraceLine(569,0,__PYX_ERR(0, 569, __pyx_L1_error))
       __pyx_v_p_current = __pyx_v_p_max;
 
       /* "cartopy/trace.pyx":570
@@ -6739,7 +6144,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *             if state == POINT_IN:
  *                 lines.new_line()
  */
-      __Pyx_TraceLine(570,0,__PYX_ERR(0, 570, __pyx_L1_error))
       __pyx_v_state = __pyx_f_7cartopy_5trace_get_state(__pyx_v_p_current, __pyx_v_gp_domain, __pyx_v_handle);
 
       /* "cartopy/trace.pyx":571
@@ -6749,7 +6153,6 @@ static void __pyx_f_7cartopy_5trace__pro
  *                 lines.new_line()
  * 
  */
-      __Pyx_TraceLine(571,0,__PYX_ERR(0, 571, __pyx_L1_error))
       __pyx_t_1 = ((__pyx_v_state == __pyx_e_7cartopy_5trace_POINT_IN) != 0);
       if (__pyx_t_1) {
 
@@ -6760,7 +6163,6 @@ static void __pyx_f_7cartopy_5trace__pro
  * 
  * 
  */
-        __Pyx_TraceLine(572,0,__PYX_ERR(0, 572, __pyx_L1_error))
         __pyx_f_7cartopy_5trace_15LineAccumulator_new_line(__pyx_v_lines);
 
         /* "cartopy/trace.pyx":571
@@ -6793,7 +6195,6 @@ static void __pyx_f_7cartopy_5trace__pro
   __Pyx_XDECREF(__pyx_t_7);
   __Pyx_WriteUnraisable("cartopy.trace._project_segment", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -6813,6 +6214,9 @@ static PyObject *__pyx_pw_7cartopy_5trac
   PyObject *__pyx_v_geometry = 0;
   struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_src_crs = 0;
   PyObject *__pyx_v_dest_projection = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("project_linear (wrapper)", 0);
@@ -6905,7 +6309,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   PyObject *__pyx_v_lonlat = NULL;
   PyObject *__pyx_v_multi_line_string = NULL;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   double __pyx_t_2;
@@ -6917,9 +6320,10 @@ static PyObject *__pyx_pf_7cartopy_5trac
   unsigned int __pyx_t_8;
   unsigned int __pyx_t_9;
   unsigned int __pyx_t_10;
-  __Pyx_TraceFrameInit(__pyx_codeobj__21)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("project_linear", 0);
-  __Pyx_TraceCall("project_linear", __pyx_f[0], 575, 0, __PYX_ERR(0, 575, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":597
  *     """
@@ -6928,7 +6332,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         GEOSContextHandle_t handle = get_geos_context_handle()
  *         GEOSGeometry *g_linear = geos_from_shapely(geometry)
  */
-  __Pyx_TraceLine(597,0,__PYX_ERR(0, 597, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_dest_projection, __pyx_n_s_threshold); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 597, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 597, __pyx_L1_error)
@@ -6942,7 +6345,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         GEOSGeometry *g_linear = geos_from_shapely(geometry)
  *         Interpolator interpolator
  */
-  __Pyx_TraceLine(598,0,__PYX_ERR(0, 598, __pyx_L1_error))
   __pyx_v_handle = __pyx_f_7cartopy_5trace_get_geos_context_handle();
 
   /* "cartopy/trace.pyx":599
@@ -6952,7 +6354,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         Interpolator interpolator
  *         GEOSGeometry *g_domain
  */
-  __Pyx_TraceLine(599,0,__PYX_ERR(0, 599, __pyx_L1_error))
   __pyx_t_3 = __pyx_f_7cartopy_5trace_geos_from_shapely(__pyx_v_geometry); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 599, __pyx_L1_error)
   __pyx_v_g_linear = __pyx_t_3;
 
@@ -6963,7 +6364,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * 
  *     if src_crs.is_geodetic():
  */
-  __Pyx_TraceLine(608,0,__PYX_ERR(0, 608, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_dest_projection, __pyx_n_s_domain); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 608, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_3 = __pyx_f_7cartopy_5trace_geos_from_shapely(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 608, __pyx_L1_error)
@@ -6977,7 +6377,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         interpolator = SphericalInterpolator()
  *     else:
  */
-  __Pyx_TraceLine(610,0,__PYX_ERR(0, 610, __pyx_L1_error))
   __pyx_t_1 = ((struct __pyx_vtabstruct_7cartopy_4_crs_CRS *)__pyx_v_src_crs->__pyx_vtab)->is_geodetic(__pyx_v_src_crs, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 610, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 610, __pyx_L1_error)
@@ -6991,7 +6390,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     else:
  *         interpolator = CartesianInterpolator()
  */
-    __Pyx_TraceLine(611,0,__PYX_ERR(0, 611, __pyx_L1_error))
     __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cartopy_5trace_SphericalInterpolator)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 611, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __pyx_v_interpolator = ((struct __pyx_obj_7cartopy_5trace_Interpolator *)__pyx_t_1);
@@ -7014,7 +6412,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     interpolator.init(src_crs.proj4, (<CRS>dest_projection).proj4)
  *     if (6, 1, 1) <= PROJ4_VERSION < (6, 3, 0):
  */
-  __Pyx_TraceLine(613,0,__PYX_ERR(0, 613, __pyx_L1_error))
   /*else*/ {
     __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cartopy_5trace_CartesianInterpolator)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 613, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
@@ -7030,7 +6427,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     if (6, 1, 1) <= PROJ4_VERSION < (6, 3, 0):
  *         # Workaround bug in Proj 6.1.1+ with +to_meter on +proj=ob_tran.
  */
-  __Pyx_TraceLine(614,0,__PYX_ERR(0, 614, __pyx_L1_error))
   ((struct __pyx_vtabstruct_7cartopy_5trace_Interpolator *)__pyx_v_interpolator->__pyx_vtab)->init(__pyx_v_interpolator, __pyx_v_src_crs->proj4, ((struct __pyx_obj_7cartopy_4_crs_CRS *)__pyx_v_dest_projection)->proj4);
 
   /* "cartopy/trace.pyx":615
@@ -7040,13 +6436,12 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         # Workaround bug in Proj 6.1.1+ with +to_meter on +proj=ob_tran.
  *         # See https://github.com/OSGeo/proj#1782.
  */
-  __Pyx_TraceLine(615,0,__PYX_ERR(0, 615, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_PROJ4_VERSION); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 615, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
-  __pyx_t_5 = PyObject_RichCompare(__pyx_tuple__22, __pyx_t_1, Py_LE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 615, __pyx_L1_error)
+  __pyx_t_5 = PyObject_RichCompare(__pyx_tuple__20, __pyx_t_1, Py_LE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 615, __pyx_L1_error)
   if (__Pyx_PyObject_IsTrue(__pyx_t_5)) {
     __Pyx_DECREF(__pyx_t_5);
-    __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_tuple__23, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 615, __pyx_L1_error)
+    __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_tuple__21, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 615, __pyx_L1_error)
   }
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 615, __pyx_L1_error)
@@ -7060,9 +6455,8 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         if (src_crs.proj4_params.get('proj', '') == 'ob_tran' and
  *                 src_crs.proj4_params.get('o_proj', '') in lonlat and
  */
-    __Pyx_TraceLine(618,0,__PYX_ERR(0, 618, __pyx_L1_error))
-    __Pyx_INCREF(__pyx_tuple__24);
-    __pyx_v_lonlat = __pyx_tuple__24;
+    __Pyx_INCREF(__pyx_tuple__22);
+    __pyx_v_lonlat = __pyx_tuple__22;
 
     /* "cartopy/trace.pyx":619
  *         # See https://github.com/OSGeo/proj#1782.
@@ -7071,13 +6465,12 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *                 src_crs.proj4_params.get('o_proj', '') in lonlat and
  *                 'to_meter' in src_crs.proj4_params):
  */
-    __Pyx_TraceLine(619,0,__PYX_ERR(0, 619, __pyx_L1_error))
     __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_crs->proj4_params, __pyx_n_s_get); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 619, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_5);
-    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 619, __pyx_L1_error)
+    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 619, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-    __pyx_t_6 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_ob_tran, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 619, __pyx_L1_error)
+    __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_ob_tran, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 619, __pyx_L1_error)
     __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
     if (__pyx_t_6) {
     } else {
@@ -7092,10 +6485,9 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *                 'to_meter' in src_crs.proj4_params):
  *             interpolator.src_scale = src_crs.proj4_params['to_meter']
  */
-    __Pyx_TraceLine(620,0,__PYX_ERR(0, 620, __pyx_L1_error))
     __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_crs->proj4_params, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 620, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
-    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 620, __pyx_L1_error)
+    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 620, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_5);
     __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
     __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_t_5, __pyx_v_lonlat, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 620, __pyx_L1_error)
@@ -7114,8 +6506,7 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *             interpolator.src_scale = src_crs.proj4_params['to_meter']
  *         if (dest_projection.proj4_params.get('proj', '') == 'ob_tran' and
  */
-    __Pyx_TraceLine(621,0,__PYX_ERR(0, 621, __pyx_L1_error))
-    __pyx_t_7 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_to_meter, __pyx_v_src_crs->proj4_params, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 621, __pyx_L1_error)
+    __pyx_t_7 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_to_meter, __pyx_v_src_crs->proj4_params, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 621, __pyx_L1_error)
     __pyx_t_6 = (__pyx_t_7 != 0);
     __pyx_t_4 = __pyx_t_6;
     __pyx_L6_bool_binop_done:;
@@ -7127,7 +6518,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *                 src_crs.proj4_params.get('o_proj', '') in lonlat and
  *                 'to_meter' in src_crs.proj4_params):
  */
-    __Pyx_TraceLine(619,0,__PYX_ERR(0, 619, __pyx_L1_error))
     if (__pyx_t_4) {
 
       /* "cartopy/trace.pyx":622
@@ -7137,8 +6527,7 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         if (dest_projection.proj4_params.get('proj', '') == 'ob_tran' and
  *                 dest_projection.proj4_params.get('o_proj', '') in lonlat and
  */
-      __Pyx_TraceLine(622,0,__PYX_ERR(0, 622, __pyx_L1_error))
-      __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_v_src_crs->proj4_params, __pyx_n_s_to_meter); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 622, __pyx_L1_error)
+      __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_v_src_crs->proj4_params, __pyx_n_u_to_meter); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 622, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_5);
       __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L1_error)
       __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
@@ -7160,16 +6549,15 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *                 dest_projection.proj4_params.get('o_proj', '') in lonlat and
  *                 'to_meter' in dest_projection.proj4_params):
  */
-    __Pyx_TraceLine(623,0,__PYX_ERR(0, 623, __pyx_L1_error))
     __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_dest_projection, __pyx_n_s_proj4_params); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 623, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_5);
     __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 623, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 623, __pyx_L1_error)
+    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 623, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_5);
     __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-    __pyx_t_6 = (__Pyx_PyString_Equals(__pyx_t_5, __pyx_n_s_ob_tran, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 623, __pyx_L1_error)
+    __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_5, __pyx_n_u_ob_tran, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 623, __pyx_L1_error)
     __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
     if (__pyx_t_6) {
     } else {
@@ -7184,13 +6572,12 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *                 'to_meter' in dest_projection.proj4_params):
  *             interpolator.dest_scale = 1 / dest_projection.proj4_params['to_meter']
  */
-    __Pyx_TraceLine(624,0,__PYX_ERR(0, 624, __pyx_L1_error))
     __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_dest_projection, __pyx_n_s_proj4_params); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 624, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_5);
     __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_get); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 624, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 624, __pyx_L1_error)
+    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 624, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_5);
     __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
     __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_t_5, __pyx_v_lonlat, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 624, __pyx_L1_error)
@@ -7209,10 +6596,9 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *             interpolator.dest_scale = 1 / dest_projection.proj4_params['to_meter']
  * 
  */
-    __Pyx_TraceLine(625,0,__PYX_ERR(0, 625, __pyx_L1_error))
     __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_dest_projection, __pyx_n_s_proj4_params); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 625, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_5);
-    __pyx_t_7 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_to_meter, __pyx_t_5, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 625, __pyx_L1_error)
+    __pyx_t_7 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_to_meter, __pyx_t_5, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 625, __pyx_L1_error)
     __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
     __pyx_t_6 = (__pyx_t_7 != 0);
     __pyx_t_4 = __pyx_t_6;
@@ -7225,7 +6611,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *                 dest_projection.proj4_params.get('o_proj', '') in lonlat and
  *                 'to_meter' in dest_projection.proj4_params):
  */
-    __Pyx_TraceLine(623,0,__PYX_ERR(0, 623, __pyx_L1_error))
     if (__pyx_t_4) {
 
       /* "cartopy/trace.pyx":626
@@ -7235,10 +6620,9 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * 
  *     src_coords = GEOSGeom_getCoordSeq_r(handle, g_linear)
  */
-      __Pyx_TraceLine(626,0,__PYX_ERR(0, 626, __pyx_L1_error))
       __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_dest_projection, __pyx_n_s_proj4_params); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 626, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_5);
-      __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_to_meter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
+      __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_u_to_meter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_1);
       __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
       __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_int_1, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 626, __pyx_L1_error)
@@ -7273,7 +6657,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     gp_domain = GEOSPrepare_r(handle, g_domain)
  * 
  */
-  __Pyx_TraceLine(628,0,__PYX_ERR(0, 628, __pyx_L1_error))
   __pyx_v_src_coords = GEOSGeom_getCoordSeq_r(__pyx_v_handle, __pyx_v_g_linear);
 
   /* "cartopy/trace.pyx":629
@@ -7283,7 +6666,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * 
  *     GEOSCoordSeq_getSize_r(handle, src_coords, &src_size)  # check exceptions
  */
-  __Pyx_TraceLine(629,0,__PYX_ERR(0, 629, __pyx_L1_error))
   __pyx_v_gp_domain = GEOSPrepare_r(__pyx_v_handle, __pyx_v_g_domain);
 
   /* "cartopy/trace.pyx":631
@@ -7293,7 +6675,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * 
  *     lines = LineAccumulator()
  */
-  __Pyx_TraceLine(631,0,__PYX_ERR(0, 631, __pyx_L1_error))
   (void)(GEOSCoordSeq_getSize_r(__pyx_v_handle, __pyx_v_src_coords, (&__pyx_v_src_size)));
 
   /* "cartopy/trace.pyx":633
@@ -7303,7 +6684,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     for src_idx in range(1, src_size):
  *         _project_segment(handle, src_coords, src_idx - 1, src_idx,
  */
-  __Pyx_TraceLine(633,0,__PYX_ERR(0, 633, __pyx_L1_error))
   __pyx_t_5 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cartopy_5trace_LineAccumulator)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 633, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __pyx_v_lines = ((struct __pyx_obj_7cartopy_5trace_LineAccumulator *)__pyx_t_5);
@@ -7316,7 +6696,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         _project_segment(handle, src_coords, src_idx - 1, src_idx,
  *                          interpolator, gp_domain, threshold, lines);
  */
-  __Pyx_TraceLine(634,0,__PYX_ERR(0, 634, __pyx_L1_error))
   __pyx_t_8 = __pyx_v_src_size;
   __pyx_t_9 = __pyx_t_8;
   for (__pyx_t_10 = 1; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
@@ -7329,7 +6708,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *                          interpolator, gp_domain, threshold, lines);
  * 
  */
-    __Pyx_TraceLine(635,0,__PYX_ERR(0, 635, __pyx_L1_error))
     __pyx_f_7cartopy_5trace__project_segment(__pyx_v_handle, __pyx_v_src_coords, (__pyx_v_src_idx - 1), __pyx_v_src_idx, __pyx_v_interpolator, __pyx_v_gp_domain, __pyx_v_threshold, __pyx_v_lines);
   }
 
@@ -7340,7 +6718,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * 
  *     g_multi_line_string = lines.as_geom(handle)
  */
-  __Pyx_TraceLine(638,0,__PYX_ERR(0, 638, __pyx_L1_error))
   GEOSPreparedGeom_destroy_r(__pyx_v_handle, __pyx_v_gp_domain);
 
   /* "cartopy/trace.pyx":640
@@ -7350,7 +6727,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * 
  *     del lines, interpolator
  */
-  __Pyx_TraceLine(640,0,__PYX_ERR(0, 640, __pyx_L1_error))
   __pyx_v_g_multi_line_string = __pyx_f_7cartopy_5trace_15LineAccumulator_as_geom(__pyx_v_lines, __pyx_v_handle);
 
   /* "cartopy/trace.pyx":642
@@ -7360,7 +6736,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     multi_line_string = shapely_from_geos(g_multi_line_string)
  *     return multi_line_string
  */
-  __Pyx_TraceLine(642,0,__PYX_ERR(0, 642, __pyx_L1_error))
   __Pyx_DECREF(((PyObject *)__pyx_v_lines));
   __pyx_v_lines = NULL;
   __Pyx_DECREF(((PyObject *)__pyx_v_interpolator));
@@ -7372,7 +6747,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     multi_line_string = shapely_from_geos(g_multi_line_string)             # <<<<<<<<<<<<<<
  *     return multi_line_string
  */
-  __Pyx_TraceLine(643,0,__PYX_ERR(0, 643, __pyx_L1_error))
   __pyx_t_5 = __pyx_f_7cartopy_5trace_shapely_from_geos(__pyx_v_g_multi_line_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 643, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __pyx_v_multi_line_string = __pyx_t_5;
@@ -7383,7 +6757,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     multi_line_string = shapely_from_geos(g_multi_line_string)
  *     return multi_line_string             # <<<<<<<<<<<<<<
  */
-  __Pyx_TraceLine(644,0,__PYX_ERR(0, 644, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(__pyx_v_multi_line_string);
   __pyx_r = __pyx_v_multi_line_string;
@@ -7409,7 +6782,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __Pyx_XDECREF(__pyx_v_lonlat);
   __Pyx_XDECREF(__pyx_v_multi_line_string);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7428,6 +6800,9 @@ static PyObject *__pyx_pw_7cartopy_5trac
   PyObject *__pyx_v___pyx_type = 0;
   long __pyx_v___pyx_checksum;
   PyObject *__pyx_v___pyx_state = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__pyx_unpickle_LineAccumulator (wrapper)", 0);
@@ -7498,7 +6873,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   PyObject *__pyx_v___pyx_PickleError = 0;
   PyObject *__pyx_v___pyx_result = 0;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   PyObject *__pyx_t_2 = NULL;
@@ -7506,9 +6880,10 @@ static PyObject *__pyx_pf_7cartopy_5trac
   PyObject *__pyx_t_4 = NULL;
   PyObject *__pyx_t_5 = NULL;
   int __pyx_t_6;
-  __Pyx_TraceFrameInit(__pyx_codeobj__28)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__pyx_unpickle_LineAccumulator", 0);
-  __Pyx_TraceCall("__pyx_unpickle_LineAccumulator", __pyx_f[1], 1, 0, __PYX_ERR(1, 1, __pyx_L1_error));
 
   /* "(tree fragment)":4
  *     cdef object __pyx_PickleError
@@ -7517,7 +6892,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         from pickle import PickleError as __pyx_PickleError
  *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x980da98 = (lines))" % __pyx_checksum)
  */
-  __Pyx_TraceLine(4,0,__PYX_ERR(1, 4, __pyx_L1_error))
   __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x980da98) != 0);
   if (__pyx_t_1) {
 
@@ -7528,13 +6902,12 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x980da98 = (lines))" % __pyx_checksum)
  *     __pyx_result = LineAccumulator.__new__(__pyx_type)
  */
-    __Pyx_TraceLine(5,0,__PYX_ERR(1, 5, __pyx_L1_error))
     __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __Pyx_INCREF(__pyx_n_s_PickleError);
     __Pyx_GIVEREF(__pyx_n_s_PickleError);
     PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
-    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, -1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
+    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
     __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
     __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
@@ -7551,7 +6924,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     __pyx_result = LineAccumulator.__new__(__pyx_type)
  *     if __pyx_state is not None:
  */
-    __Pyx_TraceLine(6,0,__PYX_ERR(1, 6, __pyx_L1_error))
     __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x98, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
@@ -7594,7 +6966,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     if __pyx_state is not None:
  *         __pyx_unpickle_LineAccumulator__set_state(<LineAccumulator> __pyx_result, __pyx_state)
  */
-  __Pyx_TraceLine(7,0,__PYX_ERR(1, 7, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7cartopy_5trace_LineAccumulator), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_4 = NULL;
@@ -7622,7 +6993,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *         __pyx_unpickle_LineAccumulator__set_state(<LineAccumulator> __pyx_result, __pyx_state)
  *     return __pyx_result
  */
-  __Pyx_TraceLine(8,0,__PYX_ERR(1, 8, __pyx_L1_error))
   __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
   __pyx_t_6 = (__pyx_t_1 != 0);
   if (__pyx_t_6) {
@@ -7634,7 +7004,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  *     return __pyx_result
  * cdef __pyx_unpickle_LineAccumulator__set_state(LineAccumulator __pyx_result, tuple __pyx_state):
  */
-    __Pyx_TraceLine(9,0,__PYX_ERR(1, 9, __pyx_L1_error))
     if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
     __pyx_t_3 = __pyx_f_7cartopy_5trace___pyx_unpickle_LineAccumulator__set_state(((struct __pyx_obj_7cartopy_5trace_LineAccumulator *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 9, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
@@ -7656,7 +7025,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
  * cdef __pyx_unpickle_LineAccumulator__set_state(LineAccumulator __pyx_result, tuple __pyx_state):
  *     __pyx_result.lines = __pyx_state[0]
  */
-  __Pyx_TraceLine(10,0,__PYX_ERR(1, 10, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(__pyx_v___pyx_result);
   __pyx_r = __pyx_v___pyx_result;
@@ -7680,7 +7048,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
   __Pyx_XDECREF(__pyx_v___pyx_PickleError);
   __Pyx_XDECREF(__pyx_v___pyx_result);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7695,7 +7062,6 @@ static PyObject *__pyx_pf_7cartopy_5trac
 
 static PyObject *__pyx_f_7cartopy_5trace___pyx_unpickle_LineAccumulator__set_state(struct __pyx_obj_7cartopy_5trace_LineAccumulator *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   std::list<__pyx_t_7cartopy_5trace_Line>  __pyx_t_2;
@@ -7706,8 +7072,10 @@ static PyObject *__pyx_f_7cartopy_5trace
   PyObject *__pyx_t_7 = NULL;
   PyObject *__pyx_t_8 = NULL;
   PyObject *__pyx_t_9 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__pyx_unpickle_LineAccumulator__set_state", 0);
-  __Pyx_TraceCall("__pyx_unpickle_LineAccumulator__set_state", __pyx_f[1], 11, 0, __PYX_ERR(1, 11, __pyx_L1_error));
 
   /* "(tree fragment)":12
  *     return __pyx_result
@@ -7716,7 +7084,6 @@ static PyObject *__pyx_f_7cartopy_5trace
  *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
  *         __pyx_result.__dict__.update(__pyx_state[1])
  */
-  __Pyx_TraceLine(12,0,__PYX_ERR(1, 12, __pyx_L1_error))
   if (unlikely(__pyx_v___pyx_state == Py_None)) {
     PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
     __PYX_ERR(1, 12, __pyx_L1_error)
@@ -7733,7 +7100,6 @@ static PyObject *__pyx_f_7cartopy_5trace
  *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
  *         __pyx_result.__dict__.update(__pyx_state[1])
  */
-  __Pyx_TraceLine(13,0,__PYX_ERR(1, 13, __pyx_L1_error))
   if (unlikely(__pyx_v___pyx_state == Py_None)) {
     PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
     __PYX_ERR(1, 13, __pyx_L1_error)
@@ -7756,7 +7122,6 @@ static PyObject *__pyx_f_7cartopy_5trace
  *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
  *         __pyx_result.__dict__.update(__pyx_state[1])             # <<<<<<<<<<<<<<
  */
-    __Pyx_TraceLine(14,0,__PYX_ERR(1, 14, __pyx_L1_error))
     __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_7);
     __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
@@ -7814,7 +7179,6 @@ static PyObject *__pyx_f_7cartopy_5trace
   __pyx_r = 0;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7831,13 +7195,14 @@ static PyObject *__pyx_convert_list_to_p
   PyObject *__pyx_v_o = NULL;
   std::list<__pyx_t_7cartopy_5trace_Point> ::const_iterator __pyx_v_iter;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   int __pyx_t_2;
   int __pyx_t_3;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Point", 0);
-  __Pyx_TraceCall("__pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Point", __pyx_f[1], 92, 0, __PYX_ERR(1, 92, __pyx_L1_error));
 
   /* "list.to_py":93
  * @cname("__pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Point")
@@ -7846,7 +7211,6 @@ static PyObject *__pyx_convert_list_to_p
  *     cdef cpp_list[X].const_iterator iter = v.begin()
  *     while iter != v.end():
  */
-  __Pyx_TraceLine(93,0,__PYX_ERR(1, 93, __pyx_L1_error))
   __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 93, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_v_o = ((PyObject*)__pyx_t_1);
@@ -7859,7 +7223,6 @@ static PyObject *__pyx_convert_list_to_p
  *     while iter != v.end():
  *         o.append(cython.operator.dereference(iter))
  */
-  __Pyx_TraceLine(94,0,__PYX_ERR(1, 94, __pyx_L1_error))
   __pyx_v_iter = __pyx_v_v.begin();
 
   /* "list.to_py":95
@@ -7869,7 +7232,6 @@ static PyObject *__pyx_convert_list_to_p
  *         o.append(cython.operator.dereference(iter))
  *         cython.operator.preincrement(iter)
  */
-  __Pyx_TraceLine(95,0,__PYX_ERR(1, 95, __pyx_L1_error))
   while (1) {
     __pyx_t_2 = ((__pyx_v_iter != __pyx_v_v.end()) != 0);
     if (!__pyx_t_2) break;
@@ -7881,7 +7243,6 @@ static PyObject *__pyx_convert_list_to_p
  *         cython.operator.preincrement(iter)
  *     return o
  */
-    __Pyx_TraceLine(96,0,__PYX_ERR(1, 96, __pyx_L1_error))
     __pyx_t_1 = __pyx_convert__to_py___pyx_t_7cartopy_5trace_Point((*__pyx_v_iter)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 96, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __pyx_t_3 = __Pyx_PyList_Append(__pyx_v_o, __pyx_t_1); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 96, __pyx_L1_error)
@@ -7894,7 +7255,6 @@ static PyObject *__pyx_convert_list_to_p
  *     return o
  * 
  */
-    __Pyx_TraceLine(97,0,__PYX_ERR(1, 97, __pyx_L1_error))
     (void)((++__pyx_v_iter));
   }
 
@@ -7905,7 +7265,6 @@ static PyObject *__pyx_convert_list_to_p
  * 
  * 
  */
-  __Pyx_TraceLine(98,0,__PYX_ERR(1, 98, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(__pyx_v_o);
   __pyx_r = __pyx_v_o;
@@ -7927,7 +7286,6 @@ static PyObject *__pyx_convert_list_to_p
   __pyx_L0:;
   __Pyx_XDECREF(__pyx_v_o);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7936,13 +7294,14 @@ static PyObject *__pyx_convert_list_to_p
   PyObject *__pyx_v_o = NULL;
   std::list<__pyx_t_7cartopy_5trace_Line> ::const_iterator __pyx_v_iter;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   int __pyx_t_2;
   int __pyx_t_3;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Line", 0);
-  __Pyx_TraceCall("__pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Line", __pyx_f[1], 92, 0, __PYX_ERR(1, 92, __pyx_L1_error));
 
   /* "list.to_py":93
  * @cname("__pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Line")
@@ -7951,7 +7310,6 @@ static PyObject *__pyx_convert_list_to_p
  *     cdef cpp_list[X].const_iterator iter = v.begin()
  *     while iter != v.end():
  */
-  __Pyx_TraceLine(93,0,__PYX_ERR(1, 93, __pyx_L1_error))
   __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 93, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_v_o = ((PyObject*)__pyx_t_1);
@@ -7964,7 +7322,6 @@ static PyObject *__pyx_convert_list_to_p
  *     while iter != v.end():
  *         o.append(cython.operator.dereference(iter))
  */
-  __Pyx_TraceLine(94,0,__PYX_ERR(1, 94, __pyx_L1_error))
   __pyx_v_iter = __pyx_v_v.begin();
 
   /* "list.to_py":95
@@ -7974,7 +7331,6 @@ static PyObject *__pyx_convert_list_to_p
  *         o.append(cython.operator.dereference(iter))
  *         cython.operator.preincrement(iter)
  */
-  __Pyx_TraceLine(95,0,__PYX_ERR(1, 95, __pyx_L1_error))
   while (1) {
     __pyx_t_2 = ((__pyx_v_iter != __pyx_v_v.end()) != 0);
     if (!__pyx_t_2) break;
@@ -7986,7 +7342,6 @@ static PyObject *__pyx_convert_list_to_p
  *         cython.operator.preincrement(iter)
  *     return o
  */
-    __Pyx_TraceLine(96,0,__PYX_ERR(1, 96, __pyx_L1_error))
     __pyx_t_1 = __pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Point((*__pyx_v_iter)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 96, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __pyx_t_3 = __Pyx_PyList_Append(__pyx_v_o, __pyx_t_1); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 96, __pyx_L1_error)
@@ -7999,7 +7354,6 @@ static PyObject *__pyx_convert_list_to_p
  *     return o
  * 
  */
-    __Pyx_TraceLine(97,0,__PYX_ERR(1, 97, __pyx_L1_error))
     (void)((++__pyx_v_iter));
   }
 
@@ -8010,7 +7364,6 @@ static PyObject *__pyx_convert_list_to_p
  * 
  * 
  */
-  __Pyx_TraceLine(98,0,__PYX_ERR(1, 98, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(__pyx_v_o);
   __pyx_r = __pyx_v_o;
@@ -8032,7 +7385,6 @@ static PyObject *__pyx_convert_list_to_p
   __pyx_L0:;
   __Pyx_XDECREF(__pyx_v_o);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -8049,7 +7401,6 @@ static __pyx_t_7cartopy_5trace_Point __p
   __pyx_t_7cartopy_5trace_Point __pyx_v_result;
   PyObject *__pyx_v_value = NULL;
   __pyx_t_7cartopy_5trace_Point __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   PyObject *__pyx_t_2 = NULL;
@@ -8061,8 +7412,10 @@ static __pyx_t_7cartopy_5trace_Point __p
   PyObject *__pyx_t_8 = NULL;
   PyObject *__pyx_t_9 = NULL;
   double __pyx_t_10;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__pyx_convert__from_py___pyx_t_7cartopy_5trace_Point", 0);
-  __Pyx_TraceCall("__pyx_convert__from_py___pyx_t_7cartopy_5trace_Point", __pyx_f[1], 11, 0, __PYX_ERR(1, 11, __pyx_L1_error));
 
   /* "FromPyStructUtility":13
  * cdef struct_type __pyx_convert__from_py___pyx_t_7cartopy_5trace_Point(obj) except *:
@@ -8071,7 +7424,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         PyErr_Format(TypeError, b"Expected %.16s, got %.200s", b"a mapping", Py_TYPE(obj).tp_name)
  * 
  */
-  __Pyx_TraceLine(13,0,__PYX_ERR(1, 13, __pyx_L1_error))
   __pyx_t_1 = ((!(PyMapping_Check(__pyx_v_obj) != 0)) != 0);
   if (__pyx_t_1) {
 
@@ -8082,7 +7434,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  *     try:
  */
-    __Pyx_TraceLine(14,0,__PYX_ERR(1, 14, __pyx_L1_error))
     __pyx_t_2 = PyErr_Format(__pyx_builtin_TypeError, ((char const *)"Expected %.16s, got %.200s"), ((char *)"a mapping"), Py_TYPE(__pyx_v_obj)->tp_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 14, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -8103,7 +7454,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         value = obj['x']
  *     except KeyError:
  */
-  __Pyx_TraceLine(16,0,__PYX_ERR(1, 16, __pyx_L1_error))
   {
     __Pyx_PyThreadState_declare
     __Pyx_PyThreadState_assign
@@ -8120,7 +7470,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *     except KeyError:
  *         raise ValueError("No value specified for struct attribute 'x'")
  */
-      __Pyx_TraceLine(17,0,__PYX_ERR(1, 17, __pyx_L4_error))
       __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 17, __pyx_L4_error)
       __Pyx_GOTREF(__pyx_t_2);
       __pyx_v_value = __pyx_t_2;
@@ -8148,7 +7497,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         raise ValueError("No value specified for struct attribute 'x'")
  *     result.x = value
  */
-    __Pyx_TraceLine(18,0,__PYX_ERR(1, 18, __pyx_L6_except_error))
     __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
     if (__pyx_t_6) {
       __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py___pyx_t_7cartopy_5trace_Point", __pyx_clineno, __pyx_lineno, __pyx_filename);
@@ -8164,8 +7512,7 @@ static __pyx_t_7cartopy_5trace_Point __p
  *     result.x = value
  *     try:
  */
-      __Pyx_TraceLine(19,0,__PYX_ERR(1, 19, __pyx_L6_except_error))
-      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 19, __pyx_L6_except_error)
+      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 19, __pyx_L6_except_error)
       __Pyx_GOTREF(__pyx_t_9);
       __Pyx_Raise(__pyx_t_9, 0, 0, 0);
       __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
@@ -8196,7 +7543,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *     try:
  *         value = obj['y']
  */
-  __Pyx_TraceLine(20,0,__PYX_ERR(1, 20, __pyx_L1_error))
   __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 20, __pyx_L1_error)
   __pyx_v_result.x = __pyx_t_10;
 
@@ -8207,7 +7553,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         value = obj['y']
  *     except KeyError:
  */
-  __Pyx_TraceLine(21,0,__PYX_ERR(1, 21, __pyx_L1_error))
   {
     __Pyx_PyThreadState_declare
     __Pyx_PyThreadState_assign
@@ -8224,7 +7569,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *     except KeyError:
  *         raise ValueError("No value specified for struct attribute 'y'")
  */
-      __Pyx_TraceLine(22,0,__PYX_ERR(1, 22, __pyx_L12_error))
       __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_y); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 22, __pyx_L12_error)
       __Pyx_GOTREF(__pyx_t_8);
       __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
@@ -8255,7 +7599,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *         raise ValueError("No value specified for struct attribute 'y'")
  *     result.y = value
  */
-    __Pyx_TraceLine(23,0,__PYX_ERR(1, 23, __pyx_L14_except_error))
     __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
     if (__pyx_t_6) {
       __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py___pyx_t_7cartopy_5trace_Point", __pyx_clineno, __pyx_lineno, __pyx_filename);
@@ -8271,8 +7614,7 @@ static __pyx_t_7cartopy_5trace_Point __p
  *     result.y = value
  *     return result
  */
-      __Pyx_TraceLine(24,0,__PYX_ERR(1, 24, __pyx_L14_except_error))
-      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 24, __pyx_L14_except_error)
+      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 24, __pyx_L14_except_error)
       __Pyx_GOTREF(__pyx_t_9);
       __Pyx_Raise(__pyx_t_9, 0, 0, 0);
       __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
@@ -8303,7 +7645,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  *     return result
  * 
  */
-  __Pyx_TraceLine(25,0,__PYX_ERR(1, 25, __pyx_L1_error))
   __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 25, __pyx_L1_error)
   __pyx_v_result.y = __pyx_t_10;
 
@@ -8314,7 +7655,6 @@ static __pyx_t_7cartopy_5trace_Point __p
  * 
  * 
  */
-  __Pyx_TraceLine(26,0,__PYX_ERR(1, 26, __pyx_L1_error))
   __pyx_r = __pyx_v_result;
   goto __pyx_L0;
 
@@ -8336,7 +7676,6 @@ static __pyx_t_7cartopy_5trace_Point __p
   __Pyx_pretend_to_initialize(&__pyx_r);
   __pyx_L0:;
   __Pyx_XDECREF(__pyx_v_value);
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -8353,15 +7692,16 @@ static std::list<__pyx_t_7cartopy_5trace
   std::list<__pyx_t_7cartopy_5trace_Point>  __pyx_v_l;
   PyObject *__pyx_v_item = NULL;
   std::list<__pyx_t_7cartopy_5trace_Point>  __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   Py_ssize_t __pyx_t_2;
   PyObject *(*__pyx_t_3)(PyObject *);
   PyObject *__pyx_t_4 = NULL;
   __pyx_t_7cartopy_5trace_Point __pyx_t_5;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Point", 0);
-  __Pyx_TraceCall("__pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Point", __pyx_f[1], 71, 0, __PYX_ERR(1, 71, __pyx_L1_error));
 
   /* "list.from_py":73
  * cdef cpp_list[X] __pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Point(object o) except *:
@@ -8370,7 +7710,6 @@ static std::list<__pyx_t_7cartopy_5trace
  *         l.push_back(<X>item)
  *     return l
  */
-  __Pyx_TraceLine(73,0,__PYX_ERR(1, 73, __pyx_L1_error))
   if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
     __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
     __pyx_t_3 = NULL;
@@ -8420,7 +7759,6 @@ static std::list<__pyx_t_7cartopy_5trace
  *     return l
  * 
  */
-    __Pyx_TraceLine(74,0,__PYX_ERR(1, 74, __pyx_L1_error))
     __pyx_t_5 = __pyx_convert__from_py___pyx_t_7cartopy_5trace_Point(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 74, __pyx_L1_error)
     __pyx_v_l.push_back(__pyx_t_5);
 
@@ -8431,7 +7769,6 @@ static std::list<__pyx_t_7cartopy_5trace
  *         l.push_back(<X>item)
  *     return l
  */
-    __Pyx_TraceLine(73,0,__PYX_ERR(1, 73, __pyx_L1_error))
   }
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
@@ -8442,7 +7779,6 @@ static std::list<__pyx_t_7cartopy_5trace
  * 
  * 
  */
-  __Pyx_TraceLine(75,0,__PYX_ERR(1, 75, __pyx_L1_error))
   __pyx_r = __pyx_v_l;
   goto __pyx_L0;
 
@@ -8462,7 +7798,6 @@ static std::list<__pyx_t_7cartopy_5trace
   __Pyx_pretend_to_initialize(&__pyx_r);
   __pyx_L0:;
   __Pyx_XDECREF(__pyx_v_item);
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -8471,15 +7806,16 @@ static std::list<__pyx_t_7cartopy_5trace
   std::list<__pyx_t_7cartopy_5trace_Line>  __pyx_v_l;
   PyObject *__pyx_v_item = NULL;
   std::list<__pyx_t_7cartopy_5trace_Line>  __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   Py_ssize_t __pyx_t_2;
   PyObject *(*__pyx_t_3)(PyObject *);
   PyObject *__pyx_t_4 = NULL;
   __pyx_t_7cartopy_5trace_Line __pyx_t_5;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Line", 0);
-  __Pyx_TraceCall("__pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Line", __pyx_f[1], 71, 0, __PYX_ERR(1, 71, __pyx_L1_error));
 
   /* "list.from_py":73
  * cdef cpp_list[X] __pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Line(object o) except *:
@@ -8488,7 +7824,6 @@ static std::list<__pyx_t_7cartopy_5trace
  *         l.push_back(<X>item)
  *     return l
  */
-  __Pyx_TraceLine(73,0,__PYX_ERR(1, 73, __pyx_L1_error))
   if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
     __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
     __pyx_t_3 = NULL;
@@ -8538,7 +7873,6 @@ static std::list<__pyx_t_7cartopy_5trace
  *     return l
  * 
  */
-    __Pyx_TraceLine(74,0,__PYX_ERR(1, 74, __pyx_L1_error))
     __pyx_t_5 = __pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Point(__pyx_v_item); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 74, __pyx_L1_error)
     __pyx_v_l.push_back(((__pyx_t_7cartopy_5trace_Line)__pyx_t_5));
 
@@ -8549,7 +7883,6 @@ static std::list<__pyx_t_7cartopy_5trace
  *         l.push_back(<X>item)
  *     return l
  */
-    __Pyx_TraceLine(73,0,__PYX_ERR(1, 73, __pyx_L1_error))
   }
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
@@ -8560,7 +7893,6 @@ static std::list<__pyx_t_7cartopy_5trace
  * 
  * 
  */
-  __Pyx_TraceLine(75,0,__PYX_ERR(1, 75, __pyx_L1_error))
   __pyx_r = __pyx_v_l;
   goto __pyx_L0;
 
@@ -8580,7 +7912,6 @@ static std::list<__pyx_t_7cartopy_5trace
   __Pyx_pretend_to_initialize(&__pyx_r);
   __pyx_L0:;
   __Pyx_XDECREF(__pyx_v_item);
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -8997,52 +8328,43 @@ static struct PyModuleDef __pyx_modulede
 #endif
 
 static __Pyx_StringTabEntry __pyx_string_tab[] = {
-  {&__pyx_kp_s_Bisecting_from, __pyx_k_Bisecting_from, sizeof(__pyx_k_Bisecting_from), 0, 0, 1, 0},
+  {&__pyx_kp_u_Bisecting_from, __pyx_k_Bisecting_from, sizeof(__pyx_k_Bisecting_from), 0, 1, 0, 0},
   {&__pyx_n_s_CartesianInterpolator, __pyx_k_CartesianInterpolator, sizeof(__pyx_k_CartesianInterpolator), 0, 0, 1, 1},
-  {&__pyx_n_s_CartesianInterpolator___reduce_c, __pyx_k_CartesianInterpolator___reduce_c, sizeof(__pyx_k_CartesianInterpolator___reduce_c), 0, 0, 1, 1},
-  {&__pyx_n_s_CartesianInterpolator___setstate, __pyx_k_CartesianInterpolator___setstate, sizeof(__pyx_k_CartesianInterpolator___setstate), 0, 0, 1, 1},
-  {&__pyx_n_s_IN, __pyx_k_IN, sizeof(__pyx_k_IN), 0, 0, 1, 1},
+  {&__pyx_n_u_IN, __pyx_k_IN, sizeof(__pyx_k_IN), 0, 1, 0, 1},
   {&__pyx_kp_s_Incompatible_checksums_s_vs_0x98, __pyx_k_Incompatible_checksums_s_vs_0x98, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x98), 0, 0, 1, 0},
   {&__pyx_n_s_Interpolator, __pyx_k_Interpolator, sizeof(__pyx_k_Interpolator), 0, 0, 1, 1},
-  {&__pyx_n_s_Interpolator___reduce_cython, __pyx_k_Interpolator___reduce_cython, sizeof(__pyx_k_Interpolator___reduce_cython), 0, 0, 1, 1},
-  {&__pyx_n_s_Interpolator___setstate_cython, __pyx_k_Interpolator___setstate_cython, sizeof(__pyx_k_Interpolator___setstate_cython), 0, 0, 1, 1},
   {&__pyx_n_s_KeyError, __pyx_k_KeyError, sizeof(__pyx_k_KeyError), 0, 0, 1, 1},
   {&__pyx_n_s_LineAccumulator, __pyx_k_LineAccumulator, sizeof(__pyx_k_LineAccumulator), 0, 0, 1, 1},
-  {&__pyx_n_s_LineAccumulator___reduce_cython, __pyx_k_LineAccumulator___reduce_cython, sizeof(__pyx_k_LineAccumulator___reduce_cython), 0, 0, 1, 1},
-  {&__pyx_n_s_LineAccumulator___setstate_cytho, __pyx_k_LineAccumulator___setstate_cytho, sizeof(__pyx_k_LineAccumulator___setstate_cytho), 0, 0, 1, 1},
-  {&__pyx_n_s_NAN, __pyx_k_NAN, sizeof(__pyx_k_NAN), 0, 0, 1, 1},
+  {&__pyx_n_u_NAN, __pyx_k_NAN, sizeof(__pyx_k_NAN), 0, 1, 0, 1},
   {&__pyx_kp_s_No_value_specified_for_struct_at, __pyx_k_No_value_specified_for_struct_at, sizeof(__pyx_k_No_value_specified_for_struct_at), 0, 0, 1, 0},
   {&__pyx_kp_s_No_value_specified_for_struct_at_2, __pyx_k_No_value_specified_for_struct_at_2, sizeof(__pyx_k_No_value_specified_for_struct_at_2), 0, 0, 1, 0},
   {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
-  {&__pyx_n_s_OUT, __pyx_k_OUT, sizeof(__pyx_k_OUT), 0, 0, 1, 1},
+  {&__pyx_n_u_OUT, __pyx_k_OUT, sizeof(__pyx_k_OUT), 0, 1, 0, 1},
   {&__pyx_n_s_PROJ4_VERSION, __pyx_k_PROJ4_VERSION, sizeof(__pyx_k_PROJ4_VERSION), 0, 0, 1, 1},
   {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
-  {&__pyx_kp_s_Projected_as, __pyx_k_Projected_as, sizeof(__pyx_k_Projected_as), 0, 0, 1, 0},
-  {&__pyx_kp_s_Setting_line, __pyx_k_Setting_line, sizeof(__pyx_k_Setting_line), 0, 0, 1, 0},
+  {&__pyx_kp_u_Projected_as, __pyx_k_Projected_as, sizeof(__pyx_k_Projected_as), 0, 1, 0, 0},
+  {&__pyx_kp_u_Setting_line, __pyx_k_Setting_line, sizeof(__pyx_k_Setting_line), 0, 1, 0, 0},
   {&__pyx_n_s_SphericalInterpolator, __pyx_k_SphericalInterpolator, sizeof(__pyx_k_SphericalInterpolator), 0, 0, 1, 1},
-  {&__pyx_n_s_SphericalInterpolator___reduce_c, __pyx_k_SphericalInterpolator___reduce_c, sizeof(__pyx_k_SphericalInterpolator___reduce_c), 0, 0, 1, 1},
-  {&__pyx_n_s_SphericalInterpolator___setstate, __pyx_k_SphericalInterpolator___setstate, sizeof(__pyx_k_SphericalInterpolator___setstate), 0, 0, 1, 1},
   {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
   {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
-  {&__pyx_kp_s__15, __pyx_k__15, sizeof(__pyx_k__15), 0, 0, 1, 0},
-  {&__pyx_kp_s__16, __pyx_k__16, sizeof(__pyx_k__16), 0, 0, 1, 0},
-  {&__pyx_kp_s__17, __pyx_k__17, sizeof(__pyx_k__17), 0, 0, 1, 0},
-  {&__pyx_kp_s__18, __pyx_k__18, sizeof(__pyx_k__18), 0, 0, 1, 0},
-  {&__pyx_kp_s__19, __pyx_k__19, sizeof(__pyx_k__19), 0, 0, 1, 0},
-  {&__pyx_kp_s__20, __pyx_k__20, sizeof(__pyx_k__20), 0, 0, 1, 0},
-  {&__pyx_kp_s__25, __pyx_k__25, sizeof(__pyx_k__25), 0, 0, 1, 0},
-  {&__pyx_n_s__31, __pyx_k__31, sizeof(__pyx_k__31), 0, 0, 1, 1},
+  {&__pyx_kp_u__10, __pyx_k__10, sizeof(__pyx_k__10), 0, 1, 0, 0},
+  {&__pyx_kp_u__12, __pyx_k__12, sizeof(__pyx_k__12), 0, 1, 0, 0},
+  {&__pyx_kp_u__16, __pyx_k__16, sizeof(__pyx_k__16), 0, 1, 0, 0},
+  {&__pyx_kp_u__18, __pyx_k__18, sizeof(__pyx_k__18), 0, 1, 0, 0},
+  {&__pyx_kp_u__19, __pyx_k__19, sizeof(__pyx_k__19), 0, 1, 0, 0},
+  {&__pyx_kp_u__23, __pyx_k__23, sizeof(__pyx_k__23), 0, 1, 0, 0},
+  {&__pyx_n_s__28, __pyx_k__28, sizeof(__pyx_k__28), 0, 0, 1, 1},
+  {&__pyx_kp_u__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 1, 0, 0},
+  {&__pyx_kp_u__9, __pyx_k__9, sizeof(__pyx_k__9), 0, 1, 0, 0},
   {&__pyx_n_s_base, __pyx_k_base, sizeof(__pyx_k_base), 0, 0, 1, 1},
   {&__pyx_n_s_cartopy__crs, __pyx_k_cartopy__crs, sizeof(__pyx_k_cartopy__crs), 0, 0, 1, 1},
   {&__pyx_n_s_cartopy_trace, __pyx_k_cartopy_trace, sizeof(__pyx_k_cartopy_trace), 0, 0, 1, 1},
   {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
+  {&__pyx_n_u_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 1, 0, 1},
   {&__pyx_n_s_dest_projection, __pyx_k_dest_projection, sizeof(__pyx_k_dest_projection), 0, 0, 1, 1},
   {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
-  {&__pyx_n_s_dict_2, __pyx_k_dict_2, sizeof(__pyx_k_dict_2), 0, 0, 1, 1},
   {&__pyx_n_s_domain, __pyx_k_domain, sizeof(__pyx_k_domain), 0, 0, 1, 1},
-  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
   {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
-  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
   {&__pyx_n_s_g_domain, __pyx_k_g_domain, sizeof(__pyx_k_g_domain), 0, 0, 1, 1},
   {&__pyx_n_s_g_linear, __pyx_k_g_linear, sizeof(__pyx_k_g_linear), 0, 0, 1, 1},
   {&__pyx_n_s_g_multi_line_string, __pyx_k_g_multi_line_string, sizeof(__pyx_k_g_multi_line_string), 0, 0, 1, 1},
@@ -9056,24 +8378,24 @@ static __Pyx_StringTabEntry __pyx_string
   {&__pyx_n_s_handle, __pyx_k_handle, sizeof(__pyx_k_handle), 0, 0, 1, 1},
   {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
   {&__pyx_n_s_interpolator, __pyx_k_interpolator, sizeof(__pyx_k_interpolator), 0, 0, 1, 1},
-  {&__pyx_n_s_latlon, __pyx_k_latlon, sizeof(__pyx_k_latlon), 0, 0, 1, 1},
-  {&__pyx_n_s_latlong, __pyx_k_latlong, sizeof(__pyx_k_latlong), 0, 0, 1, 1},
+  {&__pyx_n_u_latlon, __pyx_k_latlon, sizeof(__pyx_k_latlon), 0, 1, 0, 1},
+  {&__pyx_n_u_latlong, __pyx_k_latlong, sizeof(__pyx_k_latlong), 0, 1, 0, 1},
   {&__pyx_n_s_lgeos, __pyx_k_lgeos, sizeof(__pyx_k_lgeos), 0, 0, 1, 1},
-  {&__pyx_kp_s_lib_cartopy_trace_pyx, __pyx_k_lib_cartopy_trace_pyx, sizeof(__pyx_k_lib_cartopy_trace_pyx), 0, 0, 1, 0},
   {&__pyx_n_s_lines, __pyx_k_lines, sizeof(__pyx_k_lines), 0, 0, 1, 1},
-  {&__pyx_n_s_longlat, __pyx_k_longlat, sizeof(__pyx_k_longlat), 0, 0, 1, 1},
+  {&__pyx_n_u_longlat, __pyx_k_longlat, sizeof(__pyx_k_longlat), 0, 1, 0, 1},
   {&__pyx_n_s_lonlat, __pyx_k_lonlat, sizeof(__pyx_k_lonlat), 0, 0, 1, 1},
+  {&__pyx_n_u_lonlat, __pyx_k_lonlat, sizeof(__pyx_k_lonlat), 0, 1, 0, 1},
   {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
   {&__pyx_n_s_multi_line_string, __pyx_k_multi_line_string, sizeof(__pyx_k_multi_line_string), 0, 0, 1, 1},
   {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
   {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
   {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
-  {&__pyx_n_s_o_proj, __pyx_k_o_proj, sizeof(__pyx_k_o_proj), 0, 0, 1, 1},
-  {&__pyx_n_s_ob_tran, __pyx_k_ob_tran, sizeof(__pyx_k_ob_tran), 0, 0, 1, 1},
+  {&__pyx_n_u_o_proj, __pyx_k_o_proj, sizeof(__pyx_k_o_proj), 0, 1, 0, 1},
+  {&__pyx_n_u_ob_tran, __pyx_k_ob_tran, sizeof(__pyx_k_ob_tran), 0, 1, 0, 1},
   {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
-  {&__pyx_kp_s_pj_transform_failed_d_s, __pyx_k_pj_transform_failed_d_s, sizeof(__pyx_k_pj_transform_failed_d_s), 0, 0, 1, 0},
+  {&__pyx_kp_u_pj_transform_failed, __pyx_k_pj_transform_failed, sizeof(__pyx_k_pj_transform_failed), 0, 1, 0, 0},
   {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
-  {&__pyx_n_s_proj, __pyx_k_proj, sizeof(__pyx_k_proj), 0, 0, 1, 1},
+  {&__pyx_n_u_proj, __pyx_k_proj, sizeof(__pyx_k_proj), 0, 1, 0, 1},
   {&__pyx_n_s_proj4_params, __pyx_k_proj4_params, sizeof(__pyx_k_proj4_params), 0, 0, 1, 1},
   {&__pyx_n_s_project_linear, __pyx_k_project_linear, sizeof(__pyx_k_project_linear), 0, 0, 1, 1},
   {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
@@ -9087,7 +8409,6 @@ static __Pyx_StringTabEntry __pyx_string
   {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
   {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
   {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
-  {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
   {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
   {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
   {&__pyx_n_s_sgeom, __pyx_k_sgeom, sizeof(__pyx_k_sgeom), 0, 0, 1, 1},
@@ -9097,17 +8418,16 @@ static __Pyx_StringTabEntry __pyx_string
   {&__pyx_n_s_src_crs, __pyx_k_src_crs, sizeof(__pyx_k_src_crs), 0, 0, 1, 1},
   {&__pyx_n_s_src_idx, __pyx_k_src_idx, sizeof(__pyx_k_src_idx), 0, 0, 1, 1},
   {&__pyx_n_s_src_size, __pyx_k_src_size, sizeof(__pyx_k_src_size), 0, 0, 1, 1},
-  {&__pyx_n_s_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
   {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
-  {&__pyx_kp_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 0},
+  {&__pyx_kp_u_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 1, 0, 0},
   {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
   {&__pyx_n_s_threshold, __pyx_k_threshold, sizeof(__pyx_k_threshold), 0, 0, 1, 1},
-  {&__pyx_n_s_to, __pyx_k_to, sizeof(__pyx_k_to), 0, 0, 1, 1},
-  {&__pyx_kp_s_to_2, __pyx_k_to_2, sizeof(__pyx_k_to_2), 0, 0, 1, 0},
-  {&__pyx_n_s_to_meter, __pyx_k_to_meter, sizeof(__pyx_k_to_meter), 0, 0, 1, 1},
+  {&__pyx_n_u_to, __pyx_k_to, sizeof(__pyx_k_to), 0, 1, 0, 1},
+  {&__pyx_kp_u_to_2, __pyx_k_to_2, sizeof(__pyx_k_to_2), 0, 1, 0, 0},
+  {&__pyx_n_u_to_meter, __pyx_k_to_meter, sizeof(__pyx_k_to_meter), 0, 1, 0, 1},
+  {&__pyx_kp_s_trace_pyx, __pyx_k_trace_pyx, sizeof(__pyx_k_trace_pyx), 0, 0, 1, 0},
   {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
-  {&__pyx_n_s_use_setstate, __pyx_k_use_setstate, sizeof(__pyx_k_use_setstate), 0, 0, 1, 1},
-  {&__pyx_kp_s_valid, __pyx_k_valid, sizeof(__pyx_k_valid), 0, 0, 1, 0},
+  {&__pyx_kp_u_valid, __pyx_k_valid, sizeof(__pyx_k_valid), 0, 1, 0, 0},
   {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
   {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
   {0, 0, 0, 0, 0, 0, 0}
@@ -9116,6 +8436,7 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
   __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(0, 151, __pyx_L1_error)
   __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(0, 191, __pyx_L1_error)
   __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
+  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_n_s_print); if (!__pyx_builtin_print) __PYX_ERR(0, 461, __pyx_L1_error)
   __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 634, __pyx_L1_error)
   __pyx_builtin_KeyError = __Pyx_GetBuiltinName(__pyx_n_s_KeyError); if (!__pyx_builtin_KeyError) __PYX_ERR(1, 18, __pyx_L1_error)
   __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(1, 19, __pyx_L1_error)
@@ -9134,18 +8455,18 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  */
-  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(1, 2, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__4);
-  __Pyx_GIVEREF(__pyx_tuple__4);
+  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple_)) __PYX_ERR(1, 2, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple_);
+  __Pyx_GIVEREF(__pyx_tuple_);
 
   /* "(tree fragment)":4
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
  */
-  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 4, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__6);
-  __Pyx_GIVEREF(__pyx_tuple__6);
+  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(1, 4, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__2);
+  __Pyx_GIVEREF(__pyx_tuple__2);
 
   /* "(tree fragment)":2
  * def __reduce_cython__(self):
@@ -9153,18 +8474,18 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  */
-  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(1, 2, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__8);
-  __Pyx_GIVEREF(__pyx_tuple__8);
+  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(1, 2, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__4);
+  __Pyx_GIVEREF(__pyx_tuple__4);
 
   /* "(tree fragment)":4
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
  */
-  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(1, 4, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__10);
-  __Pyx_GIVEREF(__pyx_tuple__10);
+  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(1, 4, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__5);
+  __Pyx_GIVEREF(__pyx_tuple__5);
 
   /* "(tree fragment)":2
  * def __reduce_cython__(self):
@@ -9172,19 +8493,85 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  */
-  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(1, 2, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__12);
-  __Pyx_GIVEREF(__pyx_tuple__12);
+  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 2, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__6);
+  __Pyx_GIVEREF(__pyx_tuple__6);
 
   /* "(tree fragment)":4
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
  * def __setstate_cython__(self, __pyx_state):
  *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
  */
-  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(1, 4, __pyx_L1_error)
+  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(1, 4, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__7);
+  __Pyx_GIVEREF(__pyx_tuple__7);
+
+  /* "cartopy/trace.pyx":506
+ *     GEOSCoordSeq_getY_r(handle, src_coords, src_idx_to, &p_end.y)
+ *     if DEBUG:
+ *         print("Setting line:")             # <<<<<<<<<<<<<<
+ *         print("   ", p_current.x, ", ", p_current.y)
+ *         print("   ", p_end.x, ", ", p_end.y)
+ */
+  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_u_Setting_line); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 506, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__8);
+  __Pyx_GIVEREF(__pyx_tuple__8);
+
+  /* "cartopy/trace.pyx":514
+ *     p_end = interpolator.project(p_end)
+ *     if DEBUG:
+ *         print("Projected as:")             # <<<<<<<<<<<<<<
+ *         print("   ", p_current.x, ", ", p_current.y)
+ *         print("   ", p_end.x, ", ", p_end.y)
+ */
+  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_u_Projected_as); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 514, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__11);
+  __Pyx_GIVEREF(__pyx_tuple__11);
+
+  /* "cartopy/trace.pyx":526
+ *             print("Bisecting from: ", t_current, " (")
+ *             if state == POINT_IN:
+ *                 print("IN")             # <<<<<<<<<<<<<<
+ *             elif state == POINT_OUT:
+ *                 print("OUT")
+ */
+  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_n_u_IN); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 526, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__13);
+  __Pyx_GIVEREF(__pyx_tuple__13);
+
+  /* "cartopy/trace.pyx":528
+ *                 print("IN")
+ *             elif state == POINT_OUT:
+ *                 print("OUT")             # <<<<<<<<<<<<<<
+ *             else:
+ *                 print("NAN")
+ */
+  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_n_u_OUT); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 528, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_tuple__14);
   __Pyx_GIVEREF(__pyx_tuple__14);
 
+  /* "cartopy/trace.pyx":530
+ *                 print("OUT")
+ *             else:
+ *                 print("NAN")             # <<<<<<<<<<<<<<
+ *             print(")")
+ *             print("   ", p_current.x, ", ", p_current.y)
+ */
+  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_n_u_NAN); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 530, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__15);
+  __Pyx_GIVEREF(__pyx_tuple__15);
+
+  /* "cartopy/trace.pyx":531
+ *             else:
+ *                 print("NAN")
+ *             print(")")             # <<<<<<<<<<<<<<
+ *             print("   ", p_current.x, ", ", p_current.y)
+ *             print("   ", p_end.x, ", ", p_end.y)
+ */
+  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_u__16); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 531, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__17);
+  __Pyx_GIVEREF(__pyx_tuple__17);
+
   /* "cartopy/trace.pyx":615
  *         interpolator = CartesianInterpolator()
  *     interpolator.init(src_crs.proj4, (<CRS>dest_projection).proj4)
@@ -9192,12 +8579,12 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         # Workaround bug in Proj 6.1.1+ with +to_meter on +proj=ob_tran.
  *         # See https://github.com/OSGeo/proj#1782.
  */
-  __pyx_tuple__22 = PyTuple_Pack(3, __pyx_int_6, __pyx_int_1, __pyx_int_1); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 615, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__22);
-  __Pyx_GIVEREF(__pyx_tuple__22);
-  __pyx_tuple__23 = PyTuple_Pack(3, __pyx_int_6, __pyx_int_3, __pyx_int_0); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 615, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__23);
-  __Pyx_GIVEREF(__pyx_tuple__23);
+  __pyx_tuple__20 = PyTuple_Pack(3, __pyx_int_6, __pyx_int_1, __pyx_int_1); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 615, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__20);
+  __Pyx_GIVEREF(__pyx_tuple__20);
+  __pyx_tuple__21 = PyTuple_Pack(3, __pyx_int_6, __pyx_int_3, __pyx_int_0); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 615, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__21);
+  __Pyx_GIVEREF(__pyx_tuple__21);
 
   /* "cartopy/trace.pyx":618
  *         # Workaround bug in Proj 6.1.1+ with +to_meter on +proj=ob_tran.
@@ -9206,9 +8593,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         if (src_crs.proj4_params.get('proj', '') == 'ob_tran' and
  *                 src_crs.proj4_params.get('o_proj', '') in lonlat and
  */
-  __pyx_tuple__24 = PyTuple_Pack(4, __pyx_n_s_latlon, __pyx_n_s_latlong, __pyx_n_s_lonlat, __pyx_n_s_longlat); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 618, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__24);
-  __Pyx_GIVEREF(__pyx_tuple__24);
+  __pyx_tuple__22 = PyTuple_Pack(4, __pyx_n_u_latlon, __pyx_n_u_latlong, __pyx_n_u_lonlat, __pyx_n_u_longlat); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 618, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__22);
+  __Pyx_GIVEREF(__pyx_tuple__22);
 
   /* "cartopy/trace.pyx":619
  *         # See https://github.com/OSGeo/proj#1782.
@@ -9217,9 +8604,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *                 src_crs.proj4_params.get('o_proj', '') in lonlat and
  *                 'to_meter' in src_crs.proj4_params):
  */
-  __pyx_tuple__26 = PyTuple_Pack(2, __pyx_n_s_proj, __pyx_kp_s__25); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 619, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__26);
-  __Pyx_GIVEREF(__pyx_tuple__26);
+  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_n_u_proj, __pyx_kp_u__23); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 619, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__24);
+  __Pyx_GIVEREF(__pyx_tuple__24);
 
   /* "cartopy/trace.pyx":620
  *         lonlat = ('latlon', 'latlong', 'lonlat', 'longlat')
@@ -9228,9 +8615,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *                 'to_meter' in src_crs.proj4_params):
  *             interpolator.src_scale = src_crs.proj4_params['to_meter']
  */
-  __pyx_tuple__27 = PyTuple_Pack(2, __pyx_n_s_o_proj, __pyx_kp_s__25); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 620, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__27);
-  __Pyx_GIVEREF(__pyx_tuple__27);
+  __pyx_tuple__25 = PyTuple_Pack(2, __pyx_n_u_o_proj, __pyx_kp_u__23); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 620, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__25);
+  __Pyx_GIVEREF(__pyx_tuple__25);
 
   /* "FromPyStructUtility":19
  *         value = obj['x']
@@ -9239,9 +8626,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *     result.x = value
  *     try:
  */
-  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(1, 19, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__29);
-  __Pyx_GIVEREF(__pyx_tuple__29);
+  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(1, 19, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__26);
+  __Pyx_GIVEREF(__pyx_tuple__26);
 
   /* "FromPyStructUtility":24
  *         value = obj['y']
@@ -9250,93 +8637,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *     result.y = value
  *     return result
  */
-  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_2); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(1, 24, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__30);
-  __Pyx_GIVEREF(__pyx_tuple__30);
-
-  /* "(tree fragment)":1
- * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
- *     cdef tuple state
- *     cdef object _dict
- */
-  __pyx_tuple__32 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_state, __pyx_n_s_dict_2, __pyx_n_s_use_setstate); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__32);
-  __Pyx_GIVEREF(__pyx_tuple__32);
-  __pyx_codeobj_ = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj_)) __PYX_ERR(1, 1, __pyx_L1_error)
-
-  /* "(tree fragment)":16
- *     else:
- *         return __pyx_unpickle_LineAccumulator, (type(self), 0x980da98, state)
- * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
- *     __pyx_unpickle_LineAccumulator__set_state(self, __pyx_state)
- */
-  __pyx_tuple__33 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(1, 16, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__33);
-  __Pyx_GIVEREF(__pyx_tuple__33);
-  __pyx_codeobj__2 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__33, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__2)) __PYX_ERR(1, 16, __pyx_L1_error)
-
-  /* "(tree fragment)":1
- * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):
- */
-  __pyx_tuple__34 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__34);
-  __Pyx_GIVEREF(__pyx_tuple__34);
-  __pyx_codeobj__3 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__3)) __PYX_ERR(1, 1, __pyx_L1_error)
-
-  /* "(tree fragment)":3
- * def __reduce_cython__(self):
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- */
-  __pyx_tuple__35 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(1, 3, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__35);
-  __Pyx_GIVEREF(__pyx_tuple__35);
-  __pyx_codeobj__5 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__35, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__5)) __PYX_ERR(1, 3, __pyx_L1_error)
-
-  /* "(tree fragment)":1
- * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):
- */
-  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__36);
-  __Pyx_GIVEREF(__pyx_tuple__36);
-  __pyx_codeobj__7 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__36, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__7)) __PYX_ERR(1, 1, __pyx_L1_error)
-
-  /* "(tree fragment)":3
- * def __reduce_cython__(self):
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- */
-  __pyx_tuple__37 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(1, 3, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__37);
-  __Pyx_GIVEREF(__pyx_tuple__37);
-  __pyx_codeobj__9 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__9)) __PYX_ERR(1, 3, __pyx_L1_error)
-
-  /* "(tree fragment)":1
- * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):
- */
-  __pyx_tuple__38 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__38);
-  __Pyx_GIVEREF(__pyx_tuple__38);
-  __pyx_codeobj__11 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__38, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__11)) __PYX_ERR(1, 1, __pyx_L1_error)
-
-  /* "(tree fragment)":3
- * def __reduce_cython__(self):
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- */
-  __pyx_tuple__39 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(1, 3, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__39);
-  __Pyx_GIVEREF(__pyx_tuple__39);
-  __pyx_codeobj__13 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__13)) __PYX_ERR(1, 3, __pyx_L1_error)
+  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_2); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(1, 24, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__27);
+  __Pyx_GIVEREF(__pyx_tuple__27);
 
   /* "cartopy/trace.pyx":575
  * 
@@ -9345,20 +8648,20 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *                    dest_projection not None):
  *     """
  */
-  __pyx_tuple__40 = PyTuple_Pack(16, __pyx_n_s_geometry, __pyx_n_s_src_crs, __pyx_n_s_dest_projection, __pyx_n_s_threshold, __pyx_n_s_handle, __pyx_n_s_g_linear, __pyx_n_s_interpolator, __pyx_n_s_g_domain, __pyx_n_s_src_coords, __pyx_n_s_src_size, __pyx_n_s_src_idx, __pyx_n_s_gp_domain, __pyx_n_s_lines, __pyx_n_s_g_multi_line_string, __pyx_n_s_lonlat, __pyx_n_s_multi_line_string); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 575, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__40);
-  __Pyx_GIVEREF(__pyx_tuple__40);
-  __pyx_codeobj__21 = (PyObject*)__Pyx_PyCode_New(3, 0, 16, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__40, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy_trace_pyx, __pyx_n_s_project_linear, 575, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__21)) __PYX_ERR(0, 575, __pyx_L1_error)
+  __pyx_tuple__29 = PyTuple_Pack(16, __pyx_n_s_geometry, __pyx_n_s_src_crs, __pyx_n_s_dest_projection, __pyx_n_s_threshold, __pyx_n_s_handle, __pyx_n_s_g_linear, __pyx_n_s_interpolator, __pyx_n_s_g_domain, __pyx_n_s_src_coords, __pyx_n_s_src_size, __pyx_n_s_src_idx, __pyx_n_s_gp_domain, __pyx_n_s_lines, __pyx_n_s_g_multi_line_string, __pyx_n_s_lonlat, __pyx_n_s_multi_line_string); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 575, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__29);
+  __Pyx_GIVEREF(__pyx_tuple__29);
+  __pyx_codeobj__30 = (PyObject*)__Pyx_PyCode_New(3, 0, 16, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__29, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_trace_pyx, __pyx_n_s_project_linear, 575, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__30)) __PYX_ERR(0, 575, __pyx_L1_error)
 
   /* "(tree fragment)":1
  * def __pyx_unpickle_LineAccumulator(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
  *     cdef object __pyx_PickleError
  *     cdef object __pyx_result
  */
-  __pyx_tuple__41 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__41);
-  __Pyx_GIVEREF(__pyx_tuple__41);
-  __pyx_codeobj__28 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_LineAccumulator, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__28)) __PYX_ERR(1, 1, __pyx_L1_error)
+  __pyx_tuple__31 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(1, 1, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__31);
+  __Pyx_GIVEREF(__pyx_tuple__31);
+  __pyx_codeobj__32 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__31, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_LineAccumulator, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__32)) __PYX_ERR(1, 1, __pyx_L1_error)
   __Pyx_RefNannyFinishContext();
   return 0;
   __pyx_L1_error:;
@@ -9412,6 +8715,9 @@ static int __Pyx_modinit_function_export
 
 static int __Pyx_modinit_type_init_code(void) {
   __Pyx_RefNannyDeclarations
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
   /*--- Type init code ---*/
   __pyx_vtabptr_7cartopy_5trace_LineAccumulator = &__pyx_vtable_7cartopy_5trace_LineAccumulator;
@@ -9491,6 +8797,9 @@ static int __Pyx_modinit_type_init_code(
 static int __Pyx_modinit_type_import_code(void) {
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
   /*--- Type import code ---*/
   __pyx_t_1 = PyImport_ImportModule("cartopy._crs"); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 22, __pyx_L1_error)
@@ -9524,17 +8833,19 @@ static int __Pyx_modinit_function_import
 }
 
 
-#if PY_MAJOR_VERSION < 3
-#ifdef CYTHON_NO_PYINIT_EXPORT
-#define __Pyx_PyMODINIT_FUNC void
-#else
+#ifndef CYTHON_NO_PYINIT_EXPORT
 #define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
+#elif PY_MAJOR_VERSION < 3
+#ifdef __cplusplus
+#define __Pyx_PyMODINIT_FUNC extern "C" void
+#else
+#define __Pyx_PyMODINIT_FUNC void
 #endif
 #else
-#ifdef CYTHON_NO_PYINIT_EXPORT
-#define __Pyx_PyMODINIT_FUNC PyObject *
+#ifdef __cplusplus
+#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
 #else
-#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
+#define __Pyx_PyMODINIT_FUNC PyObject *
 #endif
 #endif
 
@@ -9615,9 +8926,11 @@ static CYTHON_SMALL_CODE int __pyx_pymod
 #endif
 #endif
 {
-  __Pyx_TraceDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannyDeclarations
   #if CYTHON_PEP489_MULTI_PHASE_INIT
   if (__pyx_m) {
@@ -9665,11 +8978,9 @@ if (!__Pyx_RefNanny) {
   #endif
   /*--- Library function declarations ---*/
   /*--- Threads initialization code ---*/
-  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
-  #ifdef WITH_THREAD /* Python build with threading support? */
+  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
   PyEval_InitThreads();
   #endif
-  #endif
   /*--- Module creation code ---*/
   #if CYTHON_PEP489_MULTI_PHASE_INIT
   __pyx_m = __pyx_pyinit_module;
@@ -9706,22 +9017,21 @@ if (!__Pyx_RefNanny) {
   }
   #endif
   /*--- Builtin init code ---*/
-  if (__Pyx_InitCachedBuiltins() < 0) goto __pyx_L1_error;
+  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
   /*--- Constants init code ---*/
-  if (__Pyx_InitCachedConstants() < 0) goto __pyx_L1_error;
+  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
   /*--- Global type/function init code ---*/
   (void)__Pyx_modinit_global_init_code();
   (void)__Pyx_modinit_variable_export_code();
   (void)__Pyx_modinit_function_export_code();
-  if (unlikely(__Pyx_modinit_type_init_code() != 0)) goto __pyx_L1_error;
-  if (unlikely(__Pyx_modinit_type_import_code() != 0)) goto __pyx_L1_error;
+  if (unlikely(__Pyx_modinit_type_init_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
+  if (unlikely(__Pyx_modinit_type_import_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
   (void)__Pyx_modinit_variable_import_code();
   (void)__Pyx_modinit_function_import_code();
   /*--- Execution code ---*/
   #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
   if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
   #endif
-  __Pyx_TraceCall("__Pyx_PyMODINIT_FUNC PyInit_trace(void)", __pyx_f[0], 1, 0, __PYX_ERR(0, 1, __pyx_L1_error));
 
   /* "cartopy/trace.pyx":35
  * from libcpp.vector cimport vector
@@ -9730,7 +9040,6 @@ if (!__Pyx_RefNanny) {
  * 
  * cdef extern from "geos_c.h":
  */
-  __Pyx_TraceLine(35,0,__PYX_ERR(0, 35, __pyx_L1_error))
   __pyx_v_7cartopy_5trace_DEBUG = 0;
 
   /* "cartopy/trace.pyx":62
@@ -9740,13 +9049,12 @@ if (!__Pyx_RefNanny) {
  * from ._proj4 cimport (projPJ, projLP, pj_get_spheroid_defn, pj_transform,
  *                       pj_strerrno, DEG_TO_RAD)
  */
-  __Pyx_TraceLine(62,0,__PYX_ERR(0, 62, __pyx_L1_error))
   __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 62, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_INCREF(__pyx_n_s_PROJ4_VERSION);
   __Pyx_GIVEREF(__pyx_n_s_PROJ4_VERSION);
   PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PROJ4_VERSION);
-  __pyx_t_2 = __Pyx_Import(__pyx_n_s_cartopy__crs, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_Import(__pyx_n_s_cartopy__crs, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_PROJ4_VERSION); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 62, __pyx_L1_error)
@@ -9762,13 +9070,12 @@ if (!__Pyx_RefNanny) {
  * from shapely.geos import lgeos
  * 
  */
-  __Pyx_TraceLine(71,0,__PYX_ERR(0, 71, __pyx_L1_error))
   __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 71, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  __Pyx_INCREF(__pyx_n_s__31);
-  __Pyx_GIVEREF(__pyx_n_s__31);
-  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s__31);
-  __pyx_t_1 = __Pyx_Import(__pyx_n_s_shapely_geometry, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 71, __pyx_L1_error)
+  __Pyx_INCREF(__pyx_n_s__28);
+  __Pyx_GIVEREF(__pyx_n_s__28);
+  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s__28);
+  __pyx_t_1 = __Pyx_Import(__pyx_n_s_shapely_geometry, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 71, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_sgeom, __pyx_t_1) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
@@ -9781,13 +9088,12 @@ if (!__Pyx_RefNanny) {
  * 
  * 
  */
-  __Pyx_TraceLine(72,0,__PYX_ERR(0, 72, __pyx_L1_error))
   __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_INCREF(__pyx_n_s_lgeos);
   __Pyx_GIVEREF(__pyx_n_s_lgeos);
   PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_lgeos);
-  __pyx_t_2 = __Pyx_Import(__pyx_n_s_shapely_geos, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_Import(__pyx_n_s_shapely_geos, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_lgeos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
@@ -9796,340 +9102,6 @@ if (!__Pyx_RefNanny) {
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
-  /* "cartopy/trace.pyx":75
- * 
- * 
- * cdef GEOSContextHandle_t get_geos_context_handle():             # <<<<<<<<<<<<<<
- *     cdef ptr handle = lgeos.geos_handle
- *     return <GEOSContextHandle_t>handle
- */
-  __Pyx_TraceLine(75,0,__PYX_ERR(0, 75, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":80
- * 
- * 
- * cdef GEOSGeometry *geos_from_shapely(shapely_geom) except *:             # <<<<<<<<<<<<<<
- *     """Get the GEOS pointer from the given shapely geometry."""
- *     cdef ptr geos_geom = shapely_geom._geom
- */
-  __Pyx_TraceLine(80,0,__PYX_ERR(0, 80, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":86
- * 
- * 
- * cdef shapely_from_geos(GEOSGeometry *geom):             # <<<<<<<<<<<<<<
- *     """Turn the given GEOS geometry pointer into a shapely geometry."""
- *     return sgeom.base.geom_factory(<ptr>geom)
- */
-  __Pyx_TraceLine(86,0,__PYX_ERR(0, 86, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":98
- * 
- * 
- * cdef bool degenerate_line(const Line &value):             # <<<<<<<<<<<<<<
- *     return value.size() < 2
- * 
- */
-  __Pyx_TraceLine(98,0,__PYX_ERR(0, 98, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":102
- * 
- * 
- * cdef bool close(double a, double b):             # <<<<<<<<<<<<<<
- *     return abs(a - b) <= (1e-8 + 1e-5 * abs(b))
- * 
- */
-  __Pyx_TraceLine(102,0,__PYX_ERR(0, 102, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":113
- *         self.new_line()
- * 
- *     cdef void new_line(self):             # <<<<<<<<<<<<<<
- *         cdef Line line
- *         self.lines.push_back(line)
- */
-  __Pyx_TraceLine(113,0,__PYX_ERR(0, 113, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":117
- *         self.lines.push_back(line)
- * 
- *     cdef void add_point(self, const Point &point):             # <<<<<<<<<<<<<<
- *         self.lines.back().push_back(point)
- * 
- */
-  __Pyx_TraceLine(117,0,__PYX_ERR(0, 117, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":120
- *         self.lines.back().push_back(point)
- * 
- *     cdef void add_point_if_empty(self, const Point &point):             # <<<<<<<<<<<<<<
- *         if self.lines.back().empty():
- *             self.add_point(point)
- */
-  __Pyx_TraceLine(120,0,__PYX_ERR(0, 120, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":124
- *             self.add_point(point)
- * 
- *     cdef GEOSGeometry *as_geom(self, GEOSContextHandle_t handle):             # <<<<<<<<<<<<<<
- *         from cython.operator cimport dereference, preincrement
- *         # self.lines.remove_if(degenerate_line) is not available in Cython.
- */
-  __Pyx_TraceLine(124,0,__PYX_ERR(0, 124, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":166
- *         return geom
- * 
- *     cdef size_t size(self):             # <<<<<<<<<<<<<<
- *         return self.lines.size()
- * 
- */
-  __Pyx_TraceLine(166,0,__PYX_ERR(0, 166, __pyx_L1_error))
-
-
-  /* "(tree fragment)":1
- * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
- *     cdef tuple state
- *     cdef object _dict
- */
-  __Pyx_TraceLine(1,0,__PYX_ERR(1, 1, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_15LineAccumulator_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LineAccumulator___reduce_cython, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj_)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_5trace_LineAccumulator->tp_dict, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_5trace_LineAccumulator);
-
-  /* "(tree fragment)":16
- *     else:
- *         return __pyx_unpickle_LineAccumulator, (type(self), 0x980da98, state)
- * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
- *     __pyx_unpickle_LineAccumulator__set_state(self, __pyx_state)
- */
-  __Pyx_TraceLine(16,0,__PYX_ERR(1, 16, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_15LineAccumulator_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LineAccumulator___setstate_cytho, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj__2)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_5trace_LineAccumulator->tp_dict, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_5trace_LineAccumulator);
-
-  /* "cartopy/trace.pyx":182
- *         self.dest_scale = 1
- * 
- *     cdef void init(self, projPJ src_proj, projPJ dest_proj):             # <<<<<<<<<<<<<<
- *         self.src_proj = src_proj
- *         self.dest_proj = dest_proj
- */
-  __Pyx_TraceLine(182,0,__PYX_ERR(0, 182, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":186
- *         self.dest_proj = dest_proj
- * 
- *     cdef void set_line(self, const Point &start, const Point &end):             # <<<<<<<<<<<<<<
- *         self.start = start
- *         self.end = end
- */
-  __Pyx_TraceLine(186,0,__PYX_ERR(0, 186, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":190
- *         self.end = end
- * 
- *     cdef Point interpolate(self, double t):             # <<<<<<<<<<<<<<
- *         raise NotImplementedError
- * 
- */
-  __Pyx_TraceLine(190,0,__PYX_ERR(0, 190, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":193
- *         raise NotImplementedError
- * 
- *     cdef Point project(self, const Point &point):             # <<<<<<<<<<<<<<
- *         raise NotImplementedError
- * 
- */
-  __Pyx_TraceLine(193,0,__PYX_ERR(0, 193, __pyx_L1_error))
-
-
-  /* "(tree fragment)":1
- * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):
- */
-  __Pyx_TraceLine(1,0,__PYX_ERR(1, 1, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_12Interpolator_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Interpolator___reduce_cython, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj__3)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-
-  /* "(tree fragment)":3
- * def __reduce_cython__(self):
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- */
-  __Pyx_TraceLine(3,0,__PYX_ERR(1, 3, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_12Interpolator_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Interpolator___setstate_cython, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj__5)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-
-  /* "cartopy/trace.pyx":198
- * 
- * cdef class CartesianInterpolator(Interpolator):
- *     cdef Point interpolate(self, double t):             # <<<<<<<<<<<<<<
- *         cdef Point xy
- *         xy.x = self.start.x + (self.end.x - self.start.x) * t
- */
-  __Pyx_TraceLine(198,0,__PYX_ERR(0, 198, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":204
- *         return self.project(xy)
- * 
- *     cdef Point project(self, const Point &src_xy):             # <<<<<<<<<<<<<<
- *         cdef Point dest_xy
- *         cdef projLP xy
- */
-  __Pyx_TraceLine(204,0,__PYX_ERR(0, 204, __pyx_L1_error))
-
-
-  /* "(tree fragment)":1
- * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):
- */
-  __Pyx_TraceLine(1,0,__PYX_ERR(1, 1, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_21CartesianInterpolator_1__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CartesianInterpolator___reduce_c, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj__7)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-
-  /* "(tree fragment)":3
- * def __reduce_cython__(self):
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- */
-  __Pyx_TraceLine(3,0,__PYX_ERR(1, 3, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_21CartesianInterpolator_3__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CartesianInterpolator___setstate, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj__9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-
-  /* "cartopy/trace.pyx":232
- *     cdef double a13
- * 
- *     cdef void init(self, projPJ src_proj, projPJ dest_proj):             # <<<<<<<<<<<<<<
- *         self.src_proj = src_proj
- *         self.dest_proj = dest_proj
- */
-  __Pyx_TraceLine(232,0,__PYX_ERR(0, 232, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":241
- *         geod_init(&self.geod, major_axis, 1 - sqrt(1 - eccentricity_squared))
- * 
- *     cdef void set_line(self, const Point &start, const Point &end):             # <<<<<<<<<<<<<<
- *         cdef double azi1
- *         self.a13 = geod_geninverse(&self.geod,
- */
-  __Pyx_TraceLine(241,0,__PYX_ERR(0, 241, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":249
- *                       GEOD_LATITUDE | GEOD_LONGITUDE);
- * 
- *     cdef Point interpolate(self, double t):             # <<<<<<<<<<<<<<
- *         cdef Point lonlat
- * 
- */
-  __Pyx_TraceLine(249,0,__PYX_ERR(0, 249, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":258
- *         return self.project(lonlat)
- * 
- *     cdef Point project(self, const Point &lonlat):             # <<<<<<<<<<<<<<
- *         cdef Point xy
- *         cdef projLP dest
- */
-  __Pyx_TraceLine(258,0,__PYX_ERR(0, 258, __pyx_L1_error))
-
-
-  /* "(tree fragment)":1
- * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):
- */
-  __Pyx_TraceLine(1,0,__PYX_ERR(1, 1, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_21SphericalInterpolator_1__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_SphericalInterpolator___reduce_c, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj__11)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-
-  /* "(tree fragment)":3
- * def __reduce_cython__(self):
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
- *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
- */
-  __Pyx_TraceLine(3,0,__PYX_ERR(1, 3, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_21SphericalInterpolator_3__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_SphericalInterpolator___setstate, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj__13)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_2);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-
-  /* "cartopy/trace.pyx":287
- * 
- * 
- * cdef State get_state(const Point &point, const GEOSPreparedGeometry *gp_domain,             # <<<<<<<<<<<<<<
- *                      GEOSContextHandle_t handle):
- *     cdef State state
- */
-  __Pyx_TraceLine(287,0,__PYX_ERR(0, 287, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":309
- * 
- * @cython.cdivision(True)  # Want divide-by-zero to produce NaN.
- * cdef bool straightAndDomain(double t_start, const Point &p_start,             # <<<<<<<<<<<<<<
- *                             double t_end, const Point &p_end,
- *                             Interpolator interpolator, double threshold,
- */
-  __Pyx_TraceLine(309,0,__PYX_ERR(0, 309, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":437
- * 
- * 
- * cdef void bisect(double t_start, const Point &p_start, const Point &p_end,             # <<<<<<<<<<<<<<
- *                  GEOSContextHandle_t handle,
- *                  const GEOSPreparedGeometry *gp_domain, const State &state,
- */
-  __Pyx_TraceLine(437,0,__PYX_ERR(0, 437, __pyx_L1_error))
-
-
-  /* "cartopy/trace.pyx":491
- * 
- * 
- * cdef void _project_segment(GEOSContextHandle_t handle,             # <<<<<<<<<<<<<<
- *                            const GEOSCoordSequence *src_coords,
- *                            unsigned int src_idx_from, unsigned int src_idx_to,
- */
-  __Pyx_TraceLine(491,0,__PYX_ERR(0, 491, __pyx_L1_error))
-
-
   /* "cartopy/trace.pyx":575
  * 
  * 
@@ -10137,8 +9109,7 @@ if (!__Pyx_RefNanny) {
  *                    dest_projection not None):
  *     """
  */
-  __Pyx_TraceLine(575,0,__PYX_ERR(0, 575, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_1project_linear, 0, __pyx_n_s_project_linear, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj__21)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 575, __pyx_L1_error)
+  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_7cartopy_5trace_1project_linear, NULL, __pyx_n_s_cartopy_trace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 575, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_project_linear, __pyx_t_2) < 0) __PYX_ERR(0, 575, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -10148,83 +9119,21 @@ if (!__Pyx_RefNanny) {
  *     cdef object __pyx_PickleError
  *     cdef object __pyx_result
  */
-  __Pyx_TraceLine(1,0,__PYX_ERR(1, 1, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_5trace_3__pyx_unpickle_LineAccumulator, 0, __pyx_n_s_pyx_unpickle_LineAccumulator, NULL, __pyx_n_s_cartopy_trace, __pyx_d, ((PyObject *)__pyx_codeobj__28)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
+  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_7cartopy_5trace_3__pyx_unpickle_LineAccumulator, NULL, __pyx_n_s_cartopy_trace); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_LineAccumulator, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
-  /* "(tree fragment)":11
- *         __pyx_unpickle_LineAccumulator__set_state(<LineAccumulator> __pyx_result, __pyx_state)
- *     return __pyx_result
- * cdef __pyx_unpickle_LineAccumulator__set_state(LineAccumulator __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
- *     __pyx_result.lines = __pyx_state[0]
- *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
- */
-  __Pyx_TraceLine(11,0,__PYX_ERR(1, 11, __pyx_L1_error))
-
-
   /* "cartopy/trace.pyx":1
  * # (C) British Crown Copyright 2011 - 2019, Met Office             # <<<<<<<<<<<<<<
  * #
  * # This file is part of cartopy.
  */
-  __Pyx_TraceLine(1,0,__PYX_ERR(0, 1, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
-  /* "list.to_py":92
- * 
- * @cname("__pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Point")
- * cdef object __pyx_convert_list_to_py___pyx_t_7cartopy_5trace_Point(const cpp_list[X]& v):             # <<<<<<<<<<<<<<
- *     o = []
- *     cdef cpp_list[X].const_iterator iter = v.begin()
- */
-  __Pyx_TraceLine(92,0,__PYX_ERR(1, 92, __pyx_L1_error))
-
-
-  /* "list.to_py":82
- * cimport cython
- * 
- * cdef extern from *:             # <<<<<<<<<<<<<<
- *     cdef cppclass cpp_list "std::list" [T]:
- *         cppclass const_iterator:
- */
-  __Pyx_TraceLine(82,0,__PYX_ERR(1, 82, __pyx_L1_error))
-
-
-  /* "FromPyStructUtility":11
- * 
- * @cname("__pyx_convert__from_py___pyx_t_7cartopy_5trace_Point")
- * cdef struct_type __pyx_convert__from_py___pyx_t_7cartopy_5trace_Point(obj) except *:             # <<<<<<<<<<<<<<
- *     cdef struct_type result
- *     if not PyMapping_Check(obj):
- */
-  __Pyx_TraceLine(11,0,__PYX_ERR(1, 11, __pyx_L1_error))
-
-
-  /* "list.from_py":71
- * 
- * @cname("__pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Point")
- * cdef cpp_list[X] __pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Point(object o) except *:             # <<<<<<<<<<<<<<
- *     cdef cpp_list[X] l
- *     for item in o:
- */
-  __Pyx_TraceLine(71,0,__PYX_ERR(1, 71, __pyx_L1_error))
-
-
-  /* "list.from_py":66
- * 
- * 
- * cdef extern from *:             # <<<<<<<<<<<<<<
- *     cdef cppclass cpp_list "std::list" [T]:
- *         void push_back(T&)
- */
-  __Pyx_TraceLine(66,0,__PYX_ERR(1, 66, __pyx_L1_error))
-
-
   /* "list.from_py":71
  * 
  * @cname("__pyx_convert_list_from_py___pyx_t_7cartopy_5trace_Line")
@@ -10232,7 +9141,6 @@ if (!__Pyx_RefNanny) {
  *     cdef cpp_list[X] l
  *     for item in o:
  */
-  __Pyx_TraceReturn(Py_None, 0);
 
   /*--- Wrapped vars code ---*/
 
@@ -10305,123 +9213,6 @@ static PyObject *__Pyx_GetBuiltinName(Py
     return result;
 }
 
-/* PyErrFetchRestore */
-#if CYTHON_FAST_THREAD_STATE
-static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
-    PyObject *tmp_type, *tmp_value, *tmp_tb;
-    tmp_type = tstate->curexc_type;
-    tmp_value = tstate->curexc_value;
-    tmp_tb = tstate->curexc_traceback;
-    tstate->curexc_type = type;
-    tstate->curexc_value = value;
-    tstate->curexc_traceback = tb;
-    Py_XDECREF(tmp_type);
-    Py_XDECREF(tmp_value);
-    Py_XDECREF(tmp_tb);
-}
-static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
-    *type = tstate->curexc_type;
-    *value = tstate->curexc_value;
-    *tb = tstate->curexc_traceback;
-    tstate->curexc_type = 0;
-    tstate->curexc_value = 0;
-    tstate->curexc_traceback = 0;
-}
-#endif
-
-/* Profile */
-#if CYTHON_PROFILE
-static int __Pyx_TraceSetupAndCall(PyCodeObject** code,
-                                   PyFrameObject** frame,
-                                   PyThreadState* tstate,
-                                   const char *funcname,
-                                   const char *srcfile,
-                                   int firstlineno) {
-    PyObject *type, *value, *traceback;
-    int retval;
-    if (*frame == NULL || !CYTHON_PROFILE_REUSE_FRAME) {
-        if (*code == NULL) {
-            *code = __Pyx_createFrameCodeObject(funcname, srcfile, firstlineno);
-            if (*code == NULL) return 0;
-        }
-        *frame = PyFrame_New(
-            tstate,                          /*PyThreadState *tstate*/
-            *code,                           /*PyCodeObject *code*/
-            __pyx_d,                  /*PyObject *globals*/
-            0                                /*PyObject *locals*/
-        );
-        if (*frame == NULL) return 0;
-        if (CYTHON_TRACE && (*frame)->f_trace == NULL) {
-            Py_INCREF(Py_None);
-            (*frame)->f_trace = Py_None;
-        }
-#if PY_VERSION_HEX < 0x030400B1
-    } else {
-        (*frame)->f_tstate = tstate;
-#endif
-    }
-      __Pyx_PyFrame_SetLineNumber(*frame, firstlineno);
-    retval = 1;
-    tstate->tracing++;
-    tstate->use_tracing = 0;
-    __Pyx_ErrFetchInState(tstate, &type, &value, &traceback);
-    #if CYTHON_TRACE
-    if (tstate->c_tracefunc)
-        retval = tstate->c_tracefunc(tstate->c_traceobj, *frame, PyTrace_CALL, NULL) == 0;
-    if (retval && tstate->c_profilefunc)
-    #endif
-        retval = tstate->c_profilefunc(tstate->c_profileobj, *frame, PyTrace_CALL, NULL) == 0;
-    tstate->use_tracing = (tstate->c_profilefunc ||
-                           (CYTHON_TRACE && tstate->c_tracefunc));
-    tstate->tracing--;
-    if (retval) {
-        __Pyx_ErrRestoreInState(tstate, type, value, traceback);
-        return tstate->use_tracing && retval;
-    } else {
-        Py_XDECREF(type);
-        Py_XDECREF(value);
-        Py_XDECREF(traceback);
-        return -1;
-    }
-}
-static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno) {
-    PyCodeObject *py_code = 0;
-#if PY_MAJOR_VERSION >= 3
-    py_code = PyCode_NewEmpty(srcfile, funcname, firstlineno);
-    if (likely(py_code)) {
-        py_code->co_flags |= CO_OPTIMIZED | CO_NEWLOCALS;
-    }
-#else
-    PyObject *py_srcfile = 0;
-    PyObject *py_funcname = 0;
-    py_funcname = PyString_FromString(funcname);
-    if (unlikely(!py_funcname)) goto bad;
-    py_srcfile = PyString_FromString(srcfile);
-    if (unlikely(!py_srcfile)) goto bad;
-    py_code = PyCode_New(
-        0,
-        0,
-        0,
-        CO_OPTIMIZED | CO_NEWLOCALS,
-        __pyx_empty_bytes,     /*PyObject *code,*/
-        __pyx_empty_tuple,     /*PyObject *consts,*/
-        __pyx_empty_tuple,     /*PyObject *names,*/
-        __pyx_empty_tuple,     /*PyObject *varnames,*/
-        __pyx_empty_tuple,     /*PyObject *freevars,*/
-        __pyx_empty_tuple,     /*PyObject *cellvars,*/
-        py_srcfile,       /*PyObject *filename,*/
-        py_funcname,      /*PyObject *name,*/
-        firstlineno,
-        __pyx_empty_bytes      /*PyObject *lnotab*/
-    );
-bad:
-    Py_XDECREF(py_srcfile);
-    Py_XDECREF(py_funcname);
-#endif
-    return py_code;
-}
-#endif
-
 /* PyDictVersioning */
 #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
 static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
@@ -10483,6 +9274,30 @@ static CYTHON_INLINE PyObject *__Pyx__Ge
     return __Pyx_GetBuiltinName(name);
 }
 
+/* PyErrFetchRestore */
+#if CYTHON_FAST_THREAD_STATE
+static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
+    PyObject *tmp_type, *tmp_value, *tmp_tb;
+    tmp_type = tstate->curexc_type;
+    tmp_value = tstate->curexc_value;
+    tmp_tb = tstate->curexc_traceback;
+    tstate->curexc_type = type;
+    tstate->curexc_value = value;
+    tstate->curexc_traceback = tb;
+    Py_XDECREF(tmp_type);
+    Py_XDECREF(tmp_value);
+    Py_XDECREF(tmp_tb);
+}
+static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
+    *type = tstate->curexc_type;
+    *value = tstate->curexc_value;
+    *tb = tstate->curexc_traceback;
+    tstate->curexc_type = 0;
+    tstate->curexc_value = 0;
+    tstate->curexc_traceback = 0;
+}
+#endif
+
 /* WriteUnraisableException */
 static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                   CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
@@ -10671,7 +9486,7 @@ done:
 #if CYTHON_COMPILING_IN_CPYTHON
 static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
     PyObject *result;
-    ternaryfunc call = func->ob_type->tp_call;
+    ternaryfunc call = Py_TYPE(func)->tp_call;
     if (unlikely(!call))
         return PyObject_Call(func, arg, kw);
     if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
@@ -10758,7 +9573,7 @@ static CYTHON_INLINE PyObject* __Pyx_PyO
         if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
             return __Pyx_PyObject_CallMethO(func, arg);
 #if CYTHON_FAST_PYCCALL
-        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
+        } else if (__Pyx_PyFastCFunction_Check(func)) {
             return __Pyx_PyCFunction_FastCall(func, &arg, 1);
 #endif
         }
@@ -11054,6 +9869,275 @@ bad:
 }
 #endif
 
+/* CIntToDigits */
+static const char DIGIT_PAIRS_10[2*10*10+1] = {
+    "00010203040506070809"
+    "10111213141516171819"
+    "20212223242526272829"
+    "30313233343536373839"
+    "40414243444546474849"
+    "50515253545556575859"
+    "60616263646566676869"
+    "70717273747576777879"
+    "80818283848586878889"
+    "90919293949596979899"
+};
+static const char DIGIT_PAIRS_8[2*8*8+1] = {
+    "0001020304050607"
+    "1011121314151617"
+    "2021222324252627"
+    "3031323334353637"
+    "4041424344454647"
+    "5051525354555657"
+    "6061626364656667"
+    "7071727374757677"
+};
+static const char DIGITS_HEX[2*16+1] = {
+    "0123456789abcdef"
+    "0123456789ABCDEF"
+};
+
+/* BuildPyUnicode */
+static PyObject* __Pyx_PyUnicode_BuildFromAscii(Py_ssize_t ulength, char* chars, int clength,
+                                                int prepend_sign, char padding_char) {
+    PyObject *uval;
+    Py_ssize_t uoffset = ulength - clength;
+#if CYTHON_USE_UNICODE_INTERNALS
+    Py_ssize_t i;
+#if CYTHON_PEP393_ENABLED
+    void *udata;
+    uval = PyUnicode_New(ulength, 127);
+    if (unlikely(!uval)) return NULL;
+    udata = PyUnicode_DATA(uval);
+#else
+    Py_UNICODE *udata;
+    uval = PyUnicode_FromUnicode(NULL, ulength);
+    if (unlikely(!uval)) return NULL;
+    udata = PyUnicode_AS_UNICODE(uval);
+#endif
+    if (uoffset > 0) {
+        i = 0;
+        if (prepend_sign) {
+            __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, 0, '-');
+            i++;
+        }
+        for (; i < uoffset; i++) {
+            __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, i, padding_char);
+        }
+    }
+    for (i=0; i < clength; i++) {
+        __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, uoffset+i, chars[i]);
+    }
+#else
+    {
+        PyObject *sign = NULL, *padding = NULL;
+        uval = NULL;
+        if (uoffset > 0) {
+            prepend_sign = !!prepend_sign;
+            if (uoffset > prepend_sign) {
+                padding = PyUnicode_FromOrdinal(padding_char);
+                if (likely(padding) && uoffset > prepend_sign + 1) {
+                    PyObject *tmp;
+                    PyObject *repeat = PyInt_FromSize_t(uoffset - prepend_sign);
+                    if (unlikely(!repeat)) goto done_or_error;
+                    tmp = PyNumber_Multiply(padding, repeat);
+                    Py_DECREF(repeat);
+                    Py_DECREF(padding);
+                    padding = tmp;
+                }
+                if (unlikely(!padding)) goto done_or_error;
+            }
+            if (prepend_sign) {
+                sign = PyUnicode_FromOrdinal('-');
+                if (unlikely(!sign)) goto done_or_error;
+            }
+        }
+        uval = PyUnicode_DecodeASCII(chars, clength, NULL);
+        if (likely(uval) && padding) {
+            PyObject *tmp = PyNumber_Add(padding, uval);
+            Py_DECREF(uval);
+            uval = tmp;
+        }
+        if (likely(uval) && sign) {
+            PyObject *tmp = PyNumber_Add(sign, uval);
+            Py_DECREF(uval);
+            uval = tmp;
+        }
+done_or_error:
+        Py_XDECREF(padding);
+        Py_XDECREF(sign);
+    }
+#endif
+    return uval;
+}
+
+/* CIntToPyUnicode */
+#ifdef _MSC_VER
+    #ifndef _MSC_STDINT_H_
+        #if _MSC_VER < 1300
+           typedef unsigned short    uint16_t;
+        #else
+           typedef unsigned __int16  uint16_t;
+        #endif
+    #endif
+#else
+   #include <stdint.h>
+#endif
+static CYTHON_INLINE PyObject* __Pyx_PyUnicode_From_int(int value, Py_ssize_t width, char padding_char, char format_char) {
+    char digits[sizeof(int)*3+2];
+    char *dpos, *end = digits + sizeof(int)*3+2;
+    const char *hex_digits = DIGITS_HEX;
+    Py_ssize_t length, ulength;
+    int prepend_sign, last_one_off;
+    int remaining;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const int neg_one = (int) -1, const_zero = (int) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
+    const int is_unsigned = neg_one > const_zero;
+    if (format_char == 'X') {
+        hex_digits += 16;
+        format_char = 'x';
+    }
+    remaining = value;
+    last_one_off = 0;
+    dpos = end;
+    do {
+        int digit_pos;
+        switch (format_char) {
+        case 'o':
+            digit_pos = abs((int)(remaining % (8*8)));
+            remaining = (int) (remaining / (8*8));
+            dpos -= 2;
+            *(uint16_t*)dpos = ((const uint16_t*)DIGIT_PAIRS_8)[digit_pos];
+            last_one_off = (digit_pos < 8);
+            break;
+        case 'd':
+            digit_pos = abs((int)(remaining % (10*10)));
+            remaining = (int) (remaining / (10*10));
+            dpos -= 2;
+            *(uint16_t*)dpos = ((const uint16_t*)DIGIT_PAIRS_10)[digit_pos];
+            last_one_off = (digit_pos < 10);
+            break;
+        case 'x':
+            *(--dpos) = hex_digits[abs((int)(remaining % 16))];
+            remaining = (int) (remaining / 16);
+            break;
+        default:
+            assert(0);
+            break;
+        }
+    } while (unlikely(remaining != 0));
+    if (last_one_off) {
+        assert(*dpos == '0');
+        dpos++;
+    }
+    length = end - dpos;
+    ulength = length;
+    prepend_sign = 0;
+    if (!is_unsigned && value <= neg_one) {
+        if (padding_char == ' ' || width <= length + 1) {
+            *(--dpos) = '-';
+            ++length;
+        } else {
+            prepend_sign = 1;
+        }
+        ++ulength;
+    }
+    if (width > ulength) {
+        ulength = width;
+    }
+    if (ulength == 1) {
+        return PyUnicode_FromOrdinal(*dpos);
+    }
+    return __Pyx_PyUnicode_BuildFromAscii(ulength, dpos, (int) length, prepend_sign, padding_char);
+}
+
+/* PyObjectFormatAndDecref */
+static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatSimpleAndDecref(PyObject* s, PyObject* f) {
+    if (unlikely(!s)) return NULL;
+    if (likely(PyUnicode_CheckExact(s))) return s;
+    #if PY_MAJOR_VERSION < 3
+    if (likely(PyString_CheckExact(s))) {
+        PyObject *result = PyUnicode_FromEncodedObject(s, NULL, "strict");
+        Py_DECREF(s);
+        return result;
+    }
+    #endif
+    return __Pyx_PyObject_FormatAndDecref(s, f);
+}
+static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatAndDecref(PyObject* s, PyObject* f) {
+    PyObject *result = PyObject_Format(s, f);
+    Py_DECREF(s);
+    return result;
+}
+
+/* JoinPyUnicode */
+static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
+                                      CYTHON_UNUSED Py_UCS4 max_char) {
+#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
+    PyObject *result_uval;
+    int result_ukind;
+    Py_ssize_t i, char_pos;
+    void *result_udata;
+#if CYTHON_PEP393_ENABLED
+    result_uval = PyUnicode_New(result_ulength, max_char);
+    if (unlikely(!result_uval)) return NULL;
+    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
+    result_udata = PyUnicode_DATA(result_uval);
+#else
+    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
+    if (unlikely(!result_uval)) return NULL;
+    result_ukind = sizeof(Py_UNICODE);
+    result_udata = PyUnicode_AS_UNICODE(result_uval);
+#endif
+    char_pos = 0;
+    for (i=0; i < value_count; i++) {
+        int ukind;
+        Py_ssize_t ulength;
+        void *udata;
+        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
+        if (unlikely(__Pyx_PyUnicode_READY(uval)))
+            goto bad;
+        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
+        if (unlikely(!ulength))
+            continue;
+        if (unlikely(char_pos + ulength < 0))
+            goto overflow;
+        ukind = __Pyx_PyUnicode_KIND(uval);
+        udata = __Pyx_PyUnicode_DATA(uval);
+        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
+            memcpy((char *)result_udata + char_pos * result_ukind, udata, (size_t) (ulength * result_ukind));
+        } else {
+            #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
+            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
+            #else
+            Py_ssize_t j;
+            for (j=0; j < ulength; j++) {
+                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
+                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
+            }
+            #endif
+        }
+        char_pos += ulength;
+    }
+    return result_uval;
+overflow:
+    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
+bad:
+    Py_DECREF(result_uval);
+    return NULL;
+#else
+    result_ulength++;
+    value_count++;
+    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
+#endif
+}
+
 /* RaiseDoubleKeywords */
 static void __Pyx_RaiseDoubleKeywordsError(
     const char* func_name,
@@ -11918,695 +11002,41 @@ static PyTypeObject *__Pyx_ImportType(Py
         PyErr_Format(PyExc_ValueError,
             "%.200s.%.200s size changed, may indicate binary incompatibility. "
             "Expected %zd from C header, got %zd from PyObject",
-            module_name, class_name, size, basicsize);
-        goto bad;
-    }
-    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
-        PyOS_snprintf(warning, sizeof(warning),
-            "%s.%s size changed, may indicate binary incompatibility. "
-            "Expected %zd from C header, got %zd from PyObject",
-            module_name, class_name, size, basicsize);
-        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
-    }
-    return (PyTypeObject *)result;
-bad:
-    Py_XDECREF(result);
-    return NULL;
-}
-#endif
-
-/* GetVTable */
-static void* __Pyx_GetVtable(PyObject *dict) {
-    void* ptr;
-    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
-    if (!ob)
-        goto bad;
-#if PY_VERSION_HEX >= 0x02070000
-    ptr = PyCapsule_GetPointer(ob, 0);
-#else
-    ptr = PyCObject_AsVoidPtr(ob);
-#endif
-    if (!ptr && !PyErr_Occurred())
-        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
-    Py_DECREF(ob);
-    return ptr;
-bad:
-    Py_XDECREF(ob);
-    return NULL;
-}
-
-/* FetchCommonType */
-static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
-    PyObject* fake_module;
-    PyTypeObject* cached_type = NULL;
-    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
-    if (!fake_module) return NULL;
-    Py_INCREF(fake_module);
-    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
-    if (cached_type) {
-        if (!PyType_Check((PyObject*)cached_type)) {
-            PyErr_Format(PyExc_TypeError,
-                "Shared Cython type %.200s is not a type object",
-                type->tp_name);
-            goto bad;
-        }
-        if (cached_type->tp_basicsize != type->tp_basicsize) {
-            PyErr_Format(PyExc_TypeError,
-                "Shared Cython type %.200s has the wrong size, try recompiling",
-                type->tp_name);
-            goto bad;
-        }
-    } else {
-        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
-        PyErr_Clear();
-        if (PyType_Ready(type) < 0) goto bad;
-        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
-            goto bad;
-        Py_INCREF(type);
-        cached_type = type;
-    }
-done:
-    Py_DECREF(fake_module);
-    return cached_type;
-bad:
-    Py_XDECREF(cached_type);
-    cached_type = NULL;
-    goto done;
-}
-
-/* CythonFunctionShared */
-#include <structmember.h>
-static PyObject *
-__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
-{
-    if (unlikely(op->func_doc == NULL)) {
-        if (op->func.m_ml->ml_doc) {
-#if PY_MAJOR_VERSION >= 3
-            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
-#else
-            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
-#endif
-            if (unlikely(op->func_doc == NULL))
-                return NULL;
-        } else {
-            Py_INCREF(Py_None);
-            return Py_None;
-        }
-    }
-    Py_INCREF(op->func_doc);
-    return op->func_doc;
-}
-static int
-__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
-{
-    PyObject *tmp = op->func_doc;
-    if (value == NULL) {
-        value = Py_None;
-    }
-    Py_INCREF(value);
-    op->func_doc = value;
-    Py_XDECREF(tmp);
-    return 0;
-}
-static PyObject *
-__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
-{
-    if (unlikely(op->func_name == NULL)) {
-#if PY_MAJOR_VERSION >= 3
-        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
-#else
-        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
-#endif
-        if (unlikely(op->func_name == NULL))
-            return NULL;
-    }
-    Py_INCREF(op->func_name);
-    return op->func_name;
-}
-static int
-__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
-{
-    PyObject *tmp;
-#if PY_MAJOR_VERSION >= 3
-    if (unlikely(value == NULL || !PyUnicode_Check(value)))
-#else
-    if (unlikely(value == NULL || !PyString_Check(value)))
-#endif
-    {
-        PyErr_SetString(PyExc_TypeError,
-                        "__name__ must be set to a string object");
-        return -1;
-    }
-    tmp = op->func_name;
-    Py_INCREF(value);
-    op->func_name = value;
-    Py_XDECREF(tmp);
-    return 0;
-}
-static PyObject *
-__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
-{
-    Py_INCREF(op->func_qualname);
-    return op->func_qualname;
-}
-static int
-__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
-{
-    PyObject *tmp;
-#if PY_MAJOR_VERSION >= 3
-    if (unlikely(value == NULL || !PyUnicode_Check(value)))
-#else
-    if (unlikely(value == NULL || !PyString_Check(value)))
-#endif
-    {
-        PyErr_SetString(PyExc_TypeError,
-                        "__qualname__ must be set to a string object");
-        return -1;
-    }
-    tmp = op->func_qualname;
-    Py_INCREF(value);
-    op->func_qualname = value;
-    Py_XDECREF(tmp);
-    return 0;
-}
-static PyObject *
-__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
-{
-    PyObject *self;
-    self = m->func_closure;
-    if (self == NULL)
-        self = Py_None;
-    Py_INCREF(self);
-    return self;
-}
-static PyObject *
-__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
-{
-    if (unlikely(op->func_dict == NULL)) {
-        op->func_dict = PyDict_New();
-        if (unlikely(op->func_dict == NULL))
-            return NULL;
-    }
-    Py_INCREF(op->func_dict);
-    return op->func_dict;
-}
-static int
-__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
-{
-    PyObject *tmp;
-    if (unlikely(value == NULL)) {
-        PyErr_SetString(PyExc_TypeError,
-               "function's dictionary may not be deleted");
-        return -1;
-    }
-    if (unlikely(!PyDict_Check(value))) {
-        PyErr_SetString(PyExc_TypeError,
-               "setting function's dictionary to a non-dict");
-        return -1;
-    }
-    tmp = op->func_dict;
-    Py_INCREF(value);
-    op->func_dict = value;
-    Py_XDECREF(tmp);
-    return 0;
-}
-static PyObject *
-__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
-{
-    Py_INCREF(op->func_globals);
-    return op->func_globals;
-}
-static PyObject *
-__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
-{
-    Py_INCREF(Py_None);
-    return Py_None;
-}
-static PyObject *
-__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
-{
-    PyObject* result = (op->func_code) ? op->func_code : Py_None;
-    Py_INCREF(result);
-    return result;
-}
-static int
-__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
-    int result = 0;
-    PyObject *res = op->defaults_getter((PyObject *) op);
-    if (unlikely(!res))
-        return -1;
-    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
-    Py_INCREF(op->defaults_tuple);
-    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
-    Py_INCREF(op->defaults_kwdict);
-    #else
-    op->defaults_tuple = PySequence_ITEM(res, 0);
-    if (unlikely(!op->defaults_tuple)) result = -1;
-    else {
-        op->defaults_kwdict = PySequence_ITEM(res, 1);
-        if (unlikely(!op->defaults_kwdict)) result = -1;
-    }
-    #endif
-    Py_DECREF(res);
-    return result;
-}
-static int
-__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
-    PyObject* tmp;
-    if (!value) {
-        value = Py_None;
-    } else if (value != Py_None && !PyTuple_Check(value)) {
-        PyErr_SetString(PyExc_TypeError,
-                        "__defaults__ must be set to a tuple object");
-        return -1;
-    }
-    Py_INCREF(value);
-    tmp = op->defaults_tuple;
-    op->defaults_tuple = value;
-    Py_XDECREF(tmp);
-    return 0;
-}
-static PyObject *
-__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
-    PyObject* result = op->defaults_tuple;
-    if (unlikely(!result)) {
-        if (op->defaults_getter) {
-            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
-            result = op->defaults_tuple;
-        } else {
-            result = Py_None;
-        }
-    }
-    Py_INCREF(result);
-    return result;
-}
-static int
-__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
-    PyObject* tmp;
-    if (!value) {
-        value = Py_None;
-    } else if (value != Py_None && !PyDict_Check(value)) {
-        PyErr_SetString(PyExc_TypeError,
-                        "__kwdefaults__ must be set to a dict object");
-        return -1;
-    }
-    Py_INCREF(value);
-    tmp = op->defaults_kwdict;
-    op->defaults_kwdict = value;
-    Py_XDECREF(tmp);
-    return 0;
-}
-static PyObject *
-__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
-    PyObject* result = op->defaults_kwdict;
-    if (unlikely(!result)) {
-        if (op->defaults_getter) {
-            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
-            result = op->defaults_kwdict;
-        } else {
-            result = Py_None;
-        }
-    }
-    Py_INCREF(result);
-    return result;
-}
-static int
-__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
-    PyObject* tmp;
-    if (!value || value == Py_None) {
-        value = NULL;
-    } else if (!PyDict_Check(value)) {
-        PyErr_SetString(PyExc_TypeError,
-                        "__annotations__ must be set to a dict object");
-        return -1;
-    }
-    Py_XINCREF(value);
-    tmp = op->func_annotations;
-    op->func_annotations = value;
-    Py_XDECREF(tmp);
-    return 0;
-}
-static PyObject *
-__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
-    PyObject* result = op->func_annotations;
-    if (unlikely(!result)) {
-        result = PyDict_New();
-        if (unlikely(!result)) return NULL;
-        op->func_annotations = result;
-    }
-    Py_INCREF(result);
-    return result;
-}
-static PyGetSetDef __pyx_CyFunction_getsets[] = {
-    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
-    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
-    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
-    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
-    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
-    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
-    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
-    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
-    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
-    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
-    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
-    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
-    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
-    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
-    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
-    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
-    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
-    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
-    {0, 0, 0, 0, 0}
-};
-static PyMemberDef __pyx_CyFunction_members[] = {
-    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},
-    {0, 0, 0,  0, 0}
-};
-static PyObject *
-__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
-{
-#if PY_MAJOR_VERSION >= 3
-    return PyUnicode_FromString(m->func.m_ml->ml_name);
-#else
-    return PyString_FromString(m->func.m_ml->ml_name);
-#endif
-}
-static PyMethodDef __pyx_CyFunction_methods[] = {
-    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
-    {0, 0, 0, 0}
-};
-#if PY_VERSION_HEX < 0x030500A0
-#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
-#else
-#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
-#endif
-static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
-                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
-    if (unlikely(op == NULL))
-        return NULL;
-    op->flags = flags;
-    __Pyx_CyFunction_weakreflist(op) = NULL;
-    op->func.m_ml = ml;
-    op->func.m_self = (PyObject *) op;
-    Py_XINCREF(closure);
-    op->func_closure = closure;
-    Py_XINCREF(module);
-    op->func.m_module = module;
-    op->func_dict = NULL;
-    op->func_name = NULL;
-    Py_INCREF(qualname);
-    op->func_qualname = qualname;
-    op->func_doc = NULL;
-    op->func_classobj = NULL;
-    op->func_globals = globals;
-    Py_INCREF(op->func_globals);
-    Py_XINCREF(code);
-    op->func_code = code;
-    op->defaults_pyobjects = 0;
-    op->defaults_size = 0;
-    op->defaults = NULL;
-    op->defaults_tuple = NULL;
-    op->defaults_kwdict = NULL;
-    op->defaults_getter = NULL;
-    op->func_annotations = NULL;
-    return (PyObject *) op;
-}
-static int
-__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
-{
-    Py_CLEAR(m->func_closure);
-    Py_CLEAR(m->func.m_module);
-    Py_CLEAR(m->func_dict);
-    Py_CLEAR(m->func_name);
-    Py_CLEAR(m->func_qualname);
-    Py_CLEAR(m->func_doc);
-    Py_CLEAR(m->func_globals);
-    Py_CLEAR(m->func_code);
-    Py_CLEAR(m->func_classobj);
-    Py_CLEAR(m->defaults_tuple);
-    Py_CLEAR(m->defaults_kwdict);
-    Py_CLEAR(m->func_annotations);
-    if (m->defaults) {
-        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
-        int i;
-        for (i = 0; i < m->defaults_pyobjects; i++)
-            Py_XDECREF(pydefaults[i]);
-        PyObject_Free(m->defaults);
-        m->defaults = NULL;
-    }
-    return 0;
-}
-static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
-{
-    if (__Pyx_CyFunction_weakreflist(m) != NULL)
-        PyObject_ClearWeakRefs((PyObject *) m);
-    __Pyx_CyFunction_clear(m);
-    PyObject_GC_Del(m);
-}
-static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
-{
-    PyObject_GC_UnTrack(m);
-    __Pyx__CyFunction_dealloc(m);
-}
-static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
-{
-    Py_VISIT(m->func_closure);
-    Py_VISIT(m->func.m_module);
-    Py_VISIT(m->func_dict);
-    Py_VISIT(m->func_name);
-    Py_VISIT(m->func_qualname);
-    Py_VISIT(m->func_doc);
-    Py_VISIT(m->func_globals);
-    Py_VISIT(m->func_code);
-    Py_VISIT(m->func_classobj);
-    Py_VISIT(m->defaults_tuple);
-    Py_VISIT(m->defaults_kwdict);
-    if (m->defaults) {
-        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
-        int i;
-        for (i = 0; i < m->defaults_pyobjects; i++)
-            Py_VISIT(pydefaults[i]);
+            module_name, class_name, size, basicsize);
+        goto bad;
     }
-    return 0;
-}
-static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
-{
-    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
-    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
-        Py_INCREF(func);
-        return func;
-    }
-    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
-        if (type == NULL)
-            type = (PyObject *)(Py_TYPE(obj));
-        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
-    }
-    if (obj == Py_None)
-        obj = NULL;
-    return __Pyx_PyMethod_New(func, obj, type);
-}
-static PyObject*
-__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
-{
-#if PY_MAJOR_VERSION >= 3
-    return PyUnicode_FromFormat("<cyfunction %U at %p>",
-                                op->func_qualname, (void *)op);
-#else
-    return PyString_FromFormat("<cyfunction %s at %p>",
-                               PyString_AsString(op->func_qualname), (void *)op);
-#endif
-}
-static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
-    PyCFunctionObject* f = (PyCFunctionObject*)func;
-    PyCFunction meth = f->m_ml->ml_meth;
-    Py_ssize_t size;
-    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
-    case METH_VARARGS:
-        if (likely(kw == NULL || PyDict_Size(kw) == 0))
-            return (*meth)(self, arg);
-        break;
-    case METH_VARARGS | METH_KEYWORDS:
-        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
-    case METH_NOARGS:
-        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
-            size = PyTuple_GET_SIZE(arg);
-            if (likely(size == 0))
-                return (*meth)(self, NULL);
-            PyErr_Format(PyExc_TypeError,
-                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
-                f->m_ml->ml_name, size);
-            return NULL;
-        }
-        break;
-    case METH_O:
-        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
-            size = PyTuple_GET_SIZE(arg);
-            if (likely(size == 1)) {
-                PyObject *result, *arg0;
-                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-                arg0 = PyTuple_GET_ITEM(arg, 0);
-                #else
-                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
-                #endif
-                result = (*meth)(self, arg0);
-                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
-                Py_DECREF(arg0);
-                #endif
-                return result;
-            }
-            PyErr_Format(PyExc_TypeError,
-                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
-                f->m_ml->ml_name, size);
-            return NULL;
-        }
-        break;
-    default:
-        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
-                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
-                        "longer supported!");
-        return NULL;
+    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
+        PyOS_snprintf(warning, sizeof(warning),
+            "%s.%s size changed, may indicate binary incompatibility. "
+            "Expected %zd from C header, got %zd from PyObject",
+            module_name, class_name, size, basicsize);
+        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
     }
-    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
-                 f->m_ml->ml_name);
+    return (PyTypeObject *)result;
+bad:
+    Py_XDECREF(result);
     return NULL;
 }
-static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
-    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
-}
-static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
-    PyObject *result;
-    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
-    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
-        Py_ssize_t argc;
-        PyObject *new_args;
-        PyObject *self;
-        argc = PyTuple_GET_SIZE(args);
-        new_args = PyTuple_GetSlice(args, 1, argc);
-        if (unlikely(!new_args))
-            return NULL;
-        self = PyTuple_GetItem(args, 0);
-        if (unlikely(!self)) {
-            Py_DECREF(new_args);
-            return NULL;
-        }
-        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
-        Py_DECREF(new_args);
-    } else {
-        result = __Pyx_CyFunction_Call(func, args, kw);
-    }
-    return result;
-}
-static PyTypeObject __pyx_CyFunctionType_type = {
-    PyVarObject_HEAD_INIT(0, 0)
-    "cython_function_or_method",
-    sizeof(__pyx_CyFunctionObject),
-    0,
-    (destructor) __Pyx_CyFunction_dealloc,
-    0,
-    0,
-    0,
-#if PY_MAJOR_VERSION < 3
-    0,
-#else
-    0,
-#endif
-    (reprfunc) __Pyx_CyFunction_repr,
-    0,
-    0,
-    0,
-    0,
-    __Pyx_CyFunction_CallAsMethod,
-    0,
-    0,
-    0,
-    0,
-    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
-    0,
-    (traverseproc) __Pyx_CyFunction_traverse,
-    (inquiry) __Pyx_CyFunction_clear,
-    0,
-#if PY_VERSION_HEX < 0x030500A0
-    offsetof(__pyx_CyFunctionObject, func_weakreflist),
-#else
-    offsetof(PyCFunctionObject, m_weakreflist),
-#endif
-    0,
-    0,
-    __pyx_CyFunction_methods,
-    __pyx_CyFunction_members,
-    __pyx_CyFunction_getsets,
-    0,
-    0,
-    __Pyx_CyFunction_descr_get,
-    0,
-    offsetof(__pyx_CyFunctionObject, func_dict),
-    0,
-    0,
-    0,
-    0,
-    0,
-    0,
-    0,
-    0,
-    0,
-    0,
-    0,
-    0,
-#if PY_VERSION_HEX >= 0x030400a1
-    0,
 #endif
-#if PY_VERSION_HEX >= 0x030800b1
-    0,
-#endif
-#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
-    0,
+
+/* GetVTable */
+static void* __Pyx_GetVtable(PyObject *dict) {
+    void* ptr;
+    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
+    if (!ob)
+        goto bad;
+#if PY_VERSION_HEX >= 0x02070000
+    ptr = PyCapsule_GetPointer(ob, 0);
+#else
+    ptr = PyCObject_AsVoidPtr(ob);
 #endif
-};
-static int __pyx_CyFunction_init(void) {
-    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
-    if (unlikely(__pyx_CyFunctionType == NULL)) {
-        return -1;
-    }
-    return 0;
-}
-static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
-    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
-    m->defaults = PyObject_Malloc(size);
-    if (unlikely(!m->defaults))
-        return PyErr_NoMemory();
-    memset(m->defaults, 0, size);
-    m->defaults_pyobjects = pyobjects;
-    m->defaults_size = size;
-    return m->defaults;
-}
-static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
-    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
-    m->defaults_tuple = tuple;
-    Py_INCREF(tuple);
-}
-static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
-    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
-    m->defaults_kwdict = dict;
-    Py_INCREF(dict);
-}
-static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
-    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
-    m->func_annotations = dict;
-    Py_INCREF(dict);
-}
-
-/* CythonFunction */
-static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
-                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
-    PyObject *op = __Pyx_CyFunction_Init(
-        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
-        ml, flags, qualname, closure, module, globals, code
-    );
-    if (likely(op)) {
-        PyObject_GC_Track(op);
-    }
-    return op;
+    if (!ptr && !PyErr_Occurred())
+        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
+    Py_DECREF(ob);
+    return ptr;
+bad:
+    Py_XDECREF(ob);
+    return NULL;
 }
 
 /* CLineInTraceback */
@@ -12854,208 +11284,16 @@ static PyObject* __pyx_convert__to_py___
         return (target_type) value;\
     }
 
-/* CIntToPy */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
-    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
-    const int is_unsigned = neg_one > const_zero;
-    if (is_unsigned) {
-        if (sizeof(int) < sizeof(long)) {
-            return PyInt_FromLong((long) value);
-        } else if (sizeof(int) <= sizeof(unsigned long)) {
-            return PyLong_FromUnsignedLong((unsigned long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
-            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
-#endif
-        }
-    } else {
-        if (sizeof(int) <= sizeof(long)) {
-            return PyInt_FromLong((long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
-            return PyLong_FromLongLong((PY_LONG_LONG) value);
-#endif
-        }
-    }
-    {
-        int one = 1; int little = (int)*(unsigned char *)&one;
-        unsigned char *bytes = (unsigned char *)&value;
-        return _PyLong_FromByteArray(bytes, sizeof(int),
-                                     little, !is_unsigned);
-    }
-}
-
-/* Print */
-#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
-static PyObject *__Pyx_GetStdout(void) {
-    PyObject *f = PySys_GetObject((char *)"stdout");
-    if (!f) {
-        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
-    }
-    return f;
-}
-static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
-    int i;
-    if (!f) {
-        if (!(f = __Pyx_GetStdout()))
-            return -1;
-    }
-    Py_INCREF(f);
-    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
-        PyObject* v;
-        if (PyFile_SoftSpace(f, 1)) {
-            if (PyFile_WriteString(" ", f) < 0)
-                goto error;
-        }
-        v = PyTuple_GET_ITEM(arg_tuple, i);
-        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
-            goto error;
-        if (PyString_Check(v)) {
-            char *s = PyString_AsString(v);
-            Py_ssize_t len = PyString_Size(v);
-            if (len > 0) {
-                switch (s[len-1]) {
-                    case ' ': break;
-                    case '\f': case '\r': case '\n': case '\t': case '\v':
-                        PyFile_SoftSpace(f, 0);
-                        break;
-                    default:  break;
-                }
-            }
-        }
-    }
-    if (newline) {
-        if (PyFile_WriteString("\n", f) < 0)
-            goto error;
-        PyFile_SoftSpace(f, 0);
-    }
-    Py_DECREF(f);
-    return 0;
-error:
-    Py_DECREF(f);
-    return -1;
-}
-#else
-static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
-    PyObject* kwargs = 0;
-    PyObject* result = 0;
-    PyObject* end_string;
-    if (unlikely(!__pyx_print)) {
-        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
-        if (!__pyx_print)
-            return -1;
-    }
-    if (stream) {
-        kwargs = PyDict_New();
-        if (unlikely(!kwargs))
-            return -1;
-        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
-            goto bad;
-        if (!newline) {
-            end_string = PyUnicode_FromStringAndSize(" ", 1);
-            if (unlikely(!end_string))
-                goto bad;
-            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
-                Py_DECREF(end_string);
-                goto bad;
-            }
-            Py_DECREF(end_string);
-        }
-    } else if (!newline) {
-        if (unlikely(!__pyx_print_kwargs)) {
-            __pyx_print_kwargs = PyDict_New();
-            if (unlikely(!__pyx_print_kwargs))
-                return -1;
-            end_string = PyUnicode_FromStringAndSize(" ", 1);
-            if (unlikely(!end_string))
-                return -1;
-            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
-                Py_DECREF(end_string);
-                return -1;
-            }
-            Py_DECREF(end_string);
-        }
-        kwargs = __pyx_print_kwargs;
-    }
-    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
-    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
-        Py_DECREF(kwargs);
-    if (!result)
-        return -1;
-    Py_DECREF(result);
-    return 0;
-bad:
-    if (kwargs != __pyx_print_kwargs)
-        Py_XDECREF(kwargs);
-    return -1;
-}
-#endif
-
-/* CIntToPy */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value) {
-    const unsigned int neg_one = (unsigned int) ((unsigned int) 0 - (unsigned int) 1), const_zero = (unsigned int) 0;
-    const int is_unsigned = neg_one > const_zero;
-    if (is_unsigned) {
-        if (sizeof(unsigned int) < sizeof(long)) {
-            return PyInt_FromLong((long) value);
-        } else if (sizeof(unsigned int) <= sizeof(unsigned long)) {
-            return PyLong_FromUnsignedLong((unsigned long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
-            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
-#endif
-        }
-    } else {
-        if (sizeof(unsigned int) <= sizeof(long)) {
-            return PyInt_FromLong((long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
-            return PyLong_FromLongLong((PY_LONG_LONG) value);
-#endif
-        }
-    }
-    {
-        int one = 1; int little = (int)*(unsigned char *)&one;
-        unsigned char *bytes = (unsigned char *)&value;
-        return _PyLong_FromByteArray(bytes, sizeof(unsigned int),
-                                     little, !is_unsigned);
-    }
-}
-
-/* CIntToPy */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
-    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
-    const int is_unsigned = neg_one > const_zero;
-    if (is_unsigned) {
-        if (sizeof(long) < sizeof(long)) {
-            return PyInt_FromLong((long) value);
-        } else if (sizeof(long) <= sizeof(unsigned long)) {
-            return PyLong_FromUnsignedLong((unsigned long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
-            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
-#endif
-        }
-    } else {
-        if (sizeof(long) <= sizeof(long)) {
-            return PyInt_FromLong((long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
-            return PyLong_FromLongLong((PY_LONG_LONG) value);
-#endif
-        }
-    }
-    {
-        int one = 1; int little = (int)*(unsigned char *)&one;
-        unsigned char *bytes = (unsigned char *)&value;
-        return _PyLong_FromByteArray(bytes, sizeof(long),
-                                     little, !is_unsigned);
-    }
-}
-
 /* CIntFromPy */
 static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
-    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const long neg_one = (long) -1, const_zero = (long) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
     const int is_unsigned = neg_one > const_zero;
 #if PY_MAJOR_VERSION < 3
     if (likely(PyInt_Check(x))) {
@@ -13244,7 +11482,14 @@ raise_neg_overflow:
 
 /* CIntFromPy */
 static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
-    const size_t neg_one = (size_t) ((size_t) 0 - (size_t) 1), const_zero = (size_t) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
     const int is_unsigned = neg_one > const_zero;
 #if PY_MAJOR_VERSION < 3
     if (likely(PyInt_Check(x))) {
@@ -13433,7 +11678,14 @@ raise_neg_overflow:
 
 /* CIntFromPy */
 static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
-    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const int neg_one = (int) -1, const_zero = (int) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
     const int is_unsigned = neg_one > const_zero;
 #if PY_MAJOR_VERSION < 3
     if (likely(PyInt_Check(x))) {
@@ -13622,7 +11874,14 @@ raise_neg_overflow:
 
 /* CIntFromPy */
 static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
-    const unsigned int neg_one = (unsigned int) ((unsigned int) 0 - (unsigned int) 1), const_zero = (unsigned int) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
     const int is_unsigned = neg_one > const_zero;
 #if PY_MAJOR_VERSION < 3
     if (likely(PyInt_Check(x))) {
@@ -13809,42 +12068,81 @@ raise_neg_overflow:
     return (unsigned int) -1;
 }
 
-/* PrintOne */
-#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
-static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
-    if (!f) {
-        if (!(f = __Pyx_GetStdout()))
-            return -1;
+/* CIntToPy */
+static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_int(unsigned int value) {
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
+    const int is_unsigned = neg_one > const_zero;
+    if (is_unsigned) {
+        if (sizeof(unsigned int) < sizeof(long)) {
+            return PyInt_FromLong((long) value);
+        } else if (sizeof(unsigned int) <= sizeof(unsigned long)) {
+            return PyLong_FromUnsignedLong((unsigned long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
+            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
+#endif
+        }
+    } else {
+        if (sizeof(unsigned int) <= sizeof(long)) {
+            return PyInt_FromLong((long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
+            return PyLong_FromLongLong((PY_LONG_LONG) value);
+#endif
+        }
+    }
+    {
+        int one = 1; int little = (int)*(unsigned char *)&one;
+        unsigned char *bytes = (unsigned char *)&value;
+        return _PyLong_FromByteArray(bytes, sizeof(unsigned int),
+                                     little, !is_unsigned);
     }
-    Py_INCREF(f);
-    if (PyFile_SoftSpace(f, 0)) {
-        if (PyFile_WriteString(" ", f) < 0)
-            goto error;
-    }
-    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
-        goto error;
-    if (PyFile_WriteString("\n", f) < 0)
-        goto error;
-    Py_DECREF(f);
-    return 0;
-error:
-    Py_DECREF(f);
-    return -1;
-    /* the line below is just to avoid C compiler
-     * warnings about unused functions */
-    return __Pyx_Print(f, NULL, 0);
-}
-#else
-static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
-    int res;
-    PyObject* arg_tuple = PyTuple_Pack(1, o);
-    if (unlikely(!arg_tuple))
-        return -1;
-    res = __Pyx_Print(stream, arg_tuple, 1);
-    Py_DECREF(arg_tuple);
-    return res;
 }
+
+/* CIntToPy */
+static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const long neg_one = (long) -1, const_zero = (long) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
+    const int is_unsigned = neg_one > const_zero;
+    if (is_unsigned) {
+        if (sizeof(long) < sizeof(long)) {
+            return PyInt_FromLong((long) value);
+        } else if (sizeof(long) <= sizeof(unsigned long)) {
+            return PyLong_FromUnsignedLong((unsigned long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
+            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
+#endif
+        }
+    } else {
+        if (sizeof(long) <= sizeof(long)) {
+            return PyInt_FromLong((long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
+            return PyLong_FromLongLong((PY_LONG_LONG) value);
 #endif
+        }
+    }
+    {
+        int one = 1; int little = (int)*(unsigned char *)&one;
+        unsigned char *bytes = (unsigned char *)&value;
+        return _PyLong_FromByteArray(bytes, sizeof(long),
+                                     little, !is_unsigned);
+    }
+}
 
 /* FastTypeChecks */
 #if CYTHON_COMPILING_IN_CPYTHON
Index: Cartopy-0.18.0/lib/cartopy/_crs.c
===================================================================
--- Cartopy-0.18.0.orig/lib/cartopy/_crs.c
+++ Cartopy-0.18.0/lib/cartopy/_crs.c
@@ -1,54 +1,17 @@
-/* Generated by Cython 0.29.17 */
-
-/* BEGIN: Cython Metadata
-{
-    "distutils": {
-        "define_macros": [
-            [
-                "ACCEPT_USE_OF_DEPRECATED_PROJ_API_H",
-                "1"
-            ],
-            [
-                "CYTHON_TRACE_NOGIL",
-                "1"
-            ]
-        ],
-        "depends": [
-            "/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/numpy/core/include/numpy/arrayobject.h",
-            "/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/numpy/core/include/numpy/ufuncobject.h"
-        ],
-        "include_dirs": [
-            "/home/travis/miniconda/envs/test-environment/include",
-            "/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/numpy/core/include"
-        ],
-        "libraries": [
-            "proj"
-        ],
-        "library_dirs": [
-            "/home/travis/miniconda/envs/test-environment/lib"
-        ],
-        "name": "cartopy._crs",
-        "runtime_library_dirs": [
-            "/home/travis/miniconda/envs/test-environment/lib"
-        ],
-        "sources": [
-            "lib/cartopy/_crs.pyx"
-        ]
-    },
-    "module_name": "cartopy._crs"
-}
-END: Cython Metadata */
+/* Generated by Cython 0.29.24 */
 
+#ifndef PY_SSIZE_T_CLEAN
 #define PY_SSIZE_T_CLEAN
+#endif /* PY_SSIZE_T_CLEAN */
 #include "Python.h"
 #ifndef Py_PYTHON_H
     #error Python headers needed to compile C extensions, please install development version of Python.
 #elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
     #error Cython requires Python 2.6+ or Python 3.3+.
 #else
-#define CYTHON_ABI "0_29_17"
-#define CYTHON_HEX_VERSION 0x001D11F0
-#define CYTHON_FUTURE_DIVISION 0
+#define CYTHON_ABI "0_29_24"
+#define CYTHON_HEX_VERSION 0x001D18F0
+#define CYTHON_FUTURE_DIVISION 1
 #include <stddef.h>
 #ifndef offsetof
   #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
@@ -465,8 +428,12 @@ static CYTHON_INLINE void * PyThread_tss
 #endif
 #if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
   #define CYTHON_PEP393_ENABLED 1
+  #if defined(PyUnicode_IS_READY)
   #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                               0 : _PyUnicode_Ready((PyObject *)(op)))
+  #else
+  #define __Pyx_PyUnicode_READY(op)       (0)
+  #endif
   #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
   #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
   #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
@@ -474,7 +441,15 @@ static CYTHON_INLINE void * PyThread_tss
   #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
   #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
   #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
+  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
+  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
+  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
+  #else
   #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
+  #endif
+  #else
+  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
+  #endif
 #else
   #define CYTHON_PEP393_ENABLED 0
   #define PyUnicode_1BYTE_KIND  1
@@ -537,6 +512,13 @@ static CYTHON_INLINE void * PyThread_tss
 #ifndef PySet_CheckExact
   #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
 #endif
+#if PY_VERSION_HEX >= 0x030900A4
+  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
+  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
+#else
+  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
+  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
+#endif
 #if CYTHON_ASSUME_SAFE_MACROS
   #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
 #else
@@ -576,7 +558,7 @@ static CYTHON_INLINE void * PyThread_tss
   #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
 #endif
 #if PY_MAJOR_VERSION >= 3
-  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
+  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
 #else
   #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
 #endif
@@ -617,11 +599,10 @@ static CYTHON_INLINE float __PYX_NAN() {
 #define __Pyx_truncl truncl
 #endif
 
-
+#define __PYX_MARK_ERR_POS(f_index, lineno) \
+    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
 #define __PYX_ERR(f_index, lineno, Ln_error) \
-{ \
-  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
-}
+    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }
 
 #ifndef __PYX_EXTERN_C
   #ifdef __cplusplus
@@ -638,7 +619,13 @@ static CYTHON_INLINE float __PYX_NAN() {
 #include <string.h>
 #include <stdio.h>
 #include "numpy/arrayobject.h"
+#include "numpy/ndarrayobject.h"
+#include "numpy/ndarraytypes.h"
+#include "numpy/arrayscalars.h"
 #include "numpy/ufuncobject.h"
+
+    /* NumPy API declarations from "numpy/__init__.pxd" */
+    
 #ifdef _OPENMP
 #include <omp.h>
 #endif /* _OPENMP */
@@ -869,8 +856,7 @@ static const char *__pyx_filename;
 
 
 static const char *__pyx_f[] = {
-  "lib/cartopy/_crs.pyx",
-  "lib/cartopy/_crs.pxd",
+  "_crs.pyx",
   "__init__.pxd",
   "type.pxd",
 };
@@ -911,7 +897,7 @@ typedef struct {
 } __Pyx_BufFmt_Context;
 
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":776
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":690
  * # in Cython to enable them only on the right systems.
  * 
  * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
@@ -920,7 +906,7 @@ typedef struct {
  */
 typedef npy_int8 __pyx_t_5numpy_int8_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":777
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":691
  * 
  * ctypedef npy_int8       int8_t
  * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
@@ -929,7 +915,7 @@ typedef npy_int8 __pyx_t_5numpy_int8_t;
  */
 typedef npy_int16 __pyx_t_5numpy_int16_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":778
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":692
  * ctypedef npy_int8       int8_t
  * ctypedef npy_int16      int16_t
  * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
@@ -938,7 +924,7 @@ typedef npy_int16 __pyx_t_5numpy_int16_t
  */
 typedef npy_int32 __pyx_t_5numpy_int32_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":779
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":693
  * ctypedef npy_int16      int16_t
  * ctypedef npy_int32      int32_t
  * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
@@ -947,7 +933,7 @@ typedef npy_int32 __pyx_t_5numpy_int32_t
  */
 typedef npy_int64 __pyx_t_5numpy_int64_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":783
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":697
  * #ctypedef npy_int128     int128_t
  * 
  * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
@@ -956,7 +942,7 @@ typedef npy_int64 __pyx_t_5numpy_int64_t
  */
 typedef npy_uint8 __pyx_t_5numpy_uint8_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":784
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":698
  * 
  * ctypedef npy_uint8      uint8_t
  * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
@@ -965,7 +951,7 @@ typedef npy_uint8 __pyx_t_5numpy_uint8_t
  */
 typedef npy_uint16 __pyx_t_5numpy_uint16_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":785
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":699
  * ctypedef npy_uint8      uint8_t
  * ctypedef npy_uint16     uint16_t
  * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
@@ -974,7 +960,7 @@ typedef npy_uint16 __pyx_t_5numpy_uint16
  */
 typedef npy_uint32 __pyx_t_5numpy_uint32_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":786
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":700
  * ctypedef npy_uint16     uint16_t
  * ctypedef npy_uint32     uint32_t
  * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
@@ -983,7 +969,7 @@ typedef npy_uint32 __pyx_t_5numpy_uint32
  */
 typedef npy_uint64 __pyx_t_5numpy_uint64_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":790
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":704
  * #ctypedef npy_uint128    uint128_t
  * 
  * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
@@ -992,7 +978,7 @@ typedef npy_uint64 __pyx_t_5numpy_uint64
  */
 typedef npy_float32 __pyx_t_5numpy_float32_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":791
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":705
  * 
  * ctypedef npy_float32    float32_t
  * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
@@ -1001,7 +987,7 @@ typedef npy_float32 __pyx_t_5numpy_float
  */
 typedef npy_float64 __pyx_t_5numpy_float64_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":800
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":714
  * # The int types are mapped a bit surprising --
  * # numpy.int corresponds to 'l' and numpy.long to 'q'
  * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
@@ -1010,7 +996,7 @@ typedef npy_float64 __pyx_t_5numpy_float
  */
 typedef npy_long __pyx_t_5numpy_int_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":801
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":715
  * # numpy.int corresponds to 'l' and numpy.long to 'q'
  * ctypedef npy_long       int_t
  * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
@@ -1019,7 +1005,7 @@ typedef npy_long __pyx_t_5numpy_int_t;
  */
 typedef npy_longlong __pyx_t_5numpy_long_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":802
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":716
  * ctypedef npy_long       int_t
  * ctypedef npy_longlong   long_t
  * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
@@ -1028,7 +1014,7 @@ typedef npy_longlong __pyx_t_5numpy_long
  */
 typedef npy_longlong __pyx_t_5numpy_longlong_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":804
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":718
  * ctypedef npy_longlong   longlong_t
  * 
  * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
@@ -1037,7 +1023,7 @@ typedef npy_longlong __pyx_t_5numpy_long
  */
 typedef npy_ulong __pyx_t_5numpy_uint_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":805
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":719
  * 
  * ctypedef npy_ulong      uint_t
  * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
@@ -1046,7 +1032,7 @@ typedef npy_ulong __pyx_t_5numpy_uint_t;
  */
 typedef npy_ulonglong __pyx_t_5numpy_ulong_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":806
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":720
  * ctypedef npy_ulong      uint_t
  * ctypedef npy_ulonglong  ulong_t
  * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
@@ -1055,7 +1041,7 @@ typedef npy_ulonglong __pyx_t_5numpy_ulo
  */
 typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":808
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":722
  * ctypedef npy_ulonglong  ulonglong_t
  * 
  * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
@@ -1064,7 +1050,7 @@ typedef npy_ulonglong __pyx_t_5numpy_ulo
  */
 typedef npy_intp __pyx_t_5numpy_intp_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":809
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":723
  * 
  * ctypedef npy_intp       intp_t
  * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
@@ -1073,7 +1059,7 @@ typedef npy_intp __pyx_t_5numpy_intp_t;
  */
 typedef npy_uintp __pyx_t_5numpy_uintp_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":811
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":725
  * ctypedef npy_uintp      uintp_t
  * 
  * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
@@ -1082,7 +1068,7 @@ typedef npy_uintp __pyx_t_5numpy_uintp_t
  */
 typedef npy_double __pyx_t_5numpy_float_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":812
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":726
  * 
  * ctypedef npy_double     float_t
  * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
@@ -1091,7 +1077,7 @@ typedef npy_double __pyx_t_5numpy_float_
  */
 typedef npy_double __pyx_t_5numpy_double_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":813
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":727
  * ctypedef npy_double     float_t
  * ctypedef npy_double     double_t
  * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
@@ -1132,7 +1118,7 @@ struct __pyx_obj_7cartopy_4_crs___pyx_sc
 struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_3_transform_points;
 struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_4_genexpr;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":815
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":729
  * ctypedef npy_longdouble longdouble_t
  * 
  * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
@@ -1141,7 +1127,7 @@ struct __pyx_obj_7cartopy_4_crs___pyx_sc
  */
 typedef npy_cfloat __pyx_t_5numpy_cfloat_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":816
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":730
  * 
  * ctypedef npy_cfloat      cfloat_t
  * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
@@ -1150,7 +1136,7 @@ typedef npy_cfloat __pyx_t_5numpy_cfloat
  */
 typedef npy_cdouble __pyx_t_5numpy_cdouble_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":817
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":731
  * ctypedef npy_cfloat      cfloat_t
  * ctypedef npy_cdouble     cdouble_t
  * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
@@ -1159,7 +1145,7 @@ typedef npy_cdouble __pyx_t_5numpy_cdoub
  */
 typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":819
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":733
  * ctypedef npy_clongdouble clongdouble_t
  * 
  * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
@@ -1348,244 +1334,6 @@ static CYTHON_INLINE PyObject* __Pyx_PyO
 /* GetBuiltinName.proto */
 static PyObject *__Pyx_GetBuiltinName(PyObject *name);
 
-/* PyThreadStateGet.proto */
-#if CYTHON_FAST_THREAD_STATE
-#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
-#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
-#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
-#else
-#define __Pyx_PyThreadState_declare
-#define __Pyx_PyThreadState_assign
-#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
-#endif
-
-/* PyErrFetchRestore.proto */
-#if CYTHON_FAST_THREAD_STATE
-#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
-#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
-#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
-#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
-#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
-static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
-static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
-#if CYTHON_COMPILING_IN_CPYTHON
-#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
-#else
-#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
-#endif
-#else
-#define __Pyx_PyErr_Clear() PyErr_Clear()
-#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
-#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
-#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
-#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
-#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
-#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
-#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
-#endif
-
-/* Profile.proto */
-#ifndef CYTHON_PROFILE
-#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_PYSTON
-  #define CYTHON_PROFILE 0
-#else
-  #define CYTHON_PROFILE 1
-#endif
-#endif
-#ifndef CYTHON_TRACE_NOGIL
-  #define CYTHON_TRACE_NOGIL 0
-#else
-  #if CYTHON_TRACE_NOGIL && !defined(CYTHON_TRACE)
-    #define CYTHON_TRACE 1
-  #endif
-#endif
-#ifndef CYTHON_TRACE
-  #define CYTHON_TRACE 0
-#endif
-#if CYTHON_TRACE
-  #undef CYTHON_PROFILE_REUSE_FRAME
-#endif
-#ifndef CYTHON_PROFILE_REUSE_FRAME
-  #define CYTHON_PROFILE_REUSE_FRAME 0
-#endif
-#if CYTHON_PROFILE || CYTHON_TRACE
-  #include "compile.h"
-  #include "frameobject.h"
-  #include "traceback.h"
-  #if CYTHON_PROFILE_REUSE_FRAME
-    #define CYTHON_FRAME_MODIFIER static
-    #define CYTHON_FRAME_DEL(frame)
-  #else
-    #define CYTHON_FRAME_MODIFIER
-    #define CYTHON_FRAME_DEL(frame) Py_CLEAR(frame)
-  #endif
-  #define __Pyx_TraceDeclarations\
-  static PyCodeObject *__pyx_frame_code = NULL;\
-  CYTHON_FRAME_MODIFIER PyFrameObject *__pyx_frame = NULL;\
-  int __Pyx_use_tracing = 0;
-  #define __Pyx_TraceFrameInit(codeobj)\
-  if (codeobj) __pyx_frame_code = (PyCodeObject*) codeobj;
-  #ifdef WITH_THREAD
-  #define __Pyx_TraceCall(funcname, srcfile, firstlineno, nogil, goto_error)\
-  if (nogil) {\
-      if (CYTHON_TRACE_NOGIL) {\
-          PyThreadState *tstate;\
-          PyGILState_STATE state = PyGILState_Ensure();\
-          tstate = __Pyx_PyThreadState_Current;\
-          if (unlikely(tstate->use_tracing) && !tstate->tracing &&\
-                  (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {\
-              __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, tstate, funcname, srcfile, firstlineno);\
-          }\
-          PyGILState_Release(state);\
-          if (unlikely(__Pyx_use_tracing < 0)) goto_error;\
-      }\
-  } else {\
-      PyThreadState* tstate = PyThreadState_GET();\
-      if (unlikely(tstate->use_tracing) && !tstate->tracing &&\
-              (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {\
-          __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, tstate, funcname, srcfile, firstlineno);\
-          if (unlikely(__Pyx_use_tracing < 0)) goto_error;\
-      }\
-  }
-  #else
-  #define __Pyx_TraceCall(funcname, srcfile, firstlineno, nogil, goto_error)\
-  {   PyThreadState* tstate = PyThreadState_GET();\
-      if (unlikely(tstate->use_tracing) && !tstate->tracing &&\
-              (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {\
-          __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, tstate, funcname, srcfile, firstlineno);\
-          if (unlikely(__Pyx_use_tracing < 0)) goto_error;\
-      }\
-  }
-  #endif
-  #define __Pyx_TraceException()\
-  if (likely(!__Pyx_use_tracing)); else {\
-      PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-      if (tstate->use_tracing &&\
-              (tstate->c_profilefunc || (CYTHON_TRACE && tstate->c_tracefunc))) {\
-          tstate->tracing++;\
-          tstate->use_tracing = 0;\
-          PyObject *exc_info = __Pyx_GetExceptionTuple(tstate);\
-          if (exc_info) {\
-              if (CYTHON_TRACE && tstate->c_tracefunc)\
-                  tstate->c_tracefunc(\
-                      tstate->c_traceobj, __pyx_frame, PyTrace_EXCEPTION, exc_info);\
-              tstate->c_profilefunc(\
-                  tstate->c_profileobj, __pyx_frame, PyTrace_EXCEPTION, exc_info);\
-              Py_DECREF(exc_info);\
-          }\
-          tstate->use_tracing = 1;\
-          tstate->tracing--;\
-      }\
-  }
-  static void __Pyx_call_return_trace_func(PyThreadState *tstate, PyFrameObject *frame, PyObject *result) {
-      PyObject *type, *value, *traceback;
-      __Pyx_ErrFetchInState(tstate, &type, &value, &traceback);
-      tstate->tracing++;
-      tstate->use_tracing = 0;
-      if (CYTHON_TRACE && tstate->c_tracefunc)
-          tstate->c_tracefunc(tstate->c_traceobj, frame, PyTrace_RETURN, result);
-      if (tstate->c_profilefunc)
-          tstate->c_profilefunc(tstate->c_profileobj, frame, PyTrace_RETURN, result);
-      CYTHON_FRAME_DEL(frame);
-      tstate->use_tracing = 1;
-      tstate->tracing--;
-      __Pyx_ErrRestoreInState(tstate, type, value, traceback);
-  }
-  #ifdef WITH_THREAD
-  #define __Pyx_TraceReturn(result, nogil)\
-  if (likely(!__Pyx_use_tracing)); else {\
-      if (nogil) {\
-          if (CYTHON_TRACE_NOGIL) {\
-              PyThreadState *tstate;\
-              PyGILState_STATE state = PyGILState_Ensure();\
-              tstate = __Pyx_PyThreadState_Current;\
-              if (tstate->use_tracing) {\
-                  __Pyx_call_return_trace_func(tstate, __pyx_frame, (PyObject*)result);\
-              }\
-              PyGILState_Release(state);\
-          }\
-      } else {\
-          PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-          if (tstate->use_tracing) {\
-              __Pyx_call_return_trace_func(tstate, __pyx_frame, (PyObject*)result);\
-          }\
-      }\
-  }
-  #else
-  #define __Pyx_TraceReturn(result, nogil)\
-  if (likely(!__Pyx_use_tracing)); else {\
-      PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-      if (tstate->use_tracing) {\
-          __Pyx_call_return_trace_func(tstate, __pyx_frame, (PyObject*)result);\
-      }\
-  }
-  #endif
-  static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno);
-  static int __Pyx_TraceSetupAndCall(PyCodeObject** code, PyFrameObject** frame, PyThreadState* tstate, const char *funcname, const char *srcfile, int firstlineno);
-#else
-  #define __Pyx_TraceDeclarations
-  #define __Pyx_TraceFrameInit(codeobj)
-  #define __Pyx_TraceCall(funcname, srcfile, firstlineno, nogil, goto_error)   if ((1)); else goto_error;
-  #define __Pyx_TraceException()
-  #define __Pyx_TraceReturn(result, nogil)
-#endif
-#if CYTHON_TRACE
-  static int __Pyx_call_line_trace_func(PyThreadState *tstate, PyFrameObject *frame, int lineno) {
-      int ret;
-      PyObject *type, *value, *traceback;
-      __Pyx_ErrFetchInState(tstate, &type, &value, &traceback);
-      __Pyx_PyFrame_SetLineNumber(frame, lineno);
-      tstate->tracing++;
-      tstate->use_tracing = 0;
-      ret = tstate->c_tracefunc(tstate->c_traceobj, frame, PyTrace_LINE, NULL);
-      tstate->use_tracing = 1;
-      tstate->tracing--;
-      if (likely(!ret)) {
-          __Pyx_ErrRestoreInState(tstate, type, value, traceback);
-      } else {
-          Py_XDECREF(type);
-          Py_XDECREF(value);
-          Py_XDECREF(traceback);
-      }
-      return ret;
-  }
-  #ifdef WITH_THREAD
-  #define __Pyx_TraceLine(lineno, nogil, goto_error)\
-  if (likely(!__Pyx_use_tracing)); else {\
-      if (nogil) {\
-          if (CYTHON_TRACE_NOGIL) {\
-              int ret = 0;\
-              PyThreadState *tstate;\
-              PyGILState_STATE state = PyGILState_Ensure();\
-              tstate = __Pyx_PyThreadState_Current;\
-              if (unlikely(tstate->use_tracing && tstate->c_tracefunc && __pyx_frame->f_trace)) {\
-                  ret = __Pyx_call_line_trace_func(tstate, __pyx_frame, lineno);\
-              }\
-              PyGILState_Release(state);\
-              if (unlikely(ret)) goto_error;\
-          }\
-      } else {\
-          PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-          if (unlikely(tstate->use_tracing && tstate->c_tracefunc && __pyx_frame->f_trace)) {\
-              int ret = __Pyx_call_line_trace_func(tstate, __pyx_frame, lineno);\
-              if (unlikely(ret)) goto_error;\
-          }\
-      }\
-  }
-  #else
-  #define __Pyx_TraceLine(lineno, nogil, goto_error)\
-  if (likely(!__Pyx_use_tracing)); else {\
-      PyThreadState* tstate = __Pyx_PyThreadState_Current;\
-      if (unlikely(tstate->use_tracing && tstate->c_tracefunc && __pyx_frame->f_trace)) {\
-          int ret = __Pyx_call_line_trace_func(tstate, __pyx_frame, lineno);\
-          if (unlikely(ret)) goto_error;\
-      }\
-  }
-  #endif
-#else
-  #define __Pyx_TraceLine(lineno, nogil, goto_error)   if ((1)); else goto_error;
-#endif
-
 /* PyDictVersioning.proto */
 #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
 #define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
@@ -1745,13 +1493,6 @@ static CYTHON_INLINE int __Pyx_PyBytes_E
 /* UnicodeEquals.proto */
 static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);
 
-/* StrEquals.proto */
-#if PY_MAJOR_VERSION >= 3
-#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
-#else
-#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
-#endif
-
 /* PySequenceContains.proto */
 static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
     int result = PySequence_Contains(seq, item);
@@ -1779,6 +1520,42 @@ static void __Pyx_RaiseBufferFallbackErr
 static void __Pyx_RaiseBufferIndexError(int axis);
 
 #define __Pyx_BufPtrStrided1d(type, buf, i0, s0) (type)((char*)buf + i0 * s0)
+/* PyThreadStateGet.proto */
+#if CYTHON_FAST_THREAD_STATE
+#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
+#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
+#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
+#else
+#define __Pyx_PyThreadState_declare
+#define __Pyx_PyThreadState_assign
+#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
+#endif
+
+/* PyErrFetchRestore.proto */
+#if CYTHON_FAST_THREAD_STATE
+#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
+#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
+#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
+#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
+#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
+static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
+static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
+#if CYTHON_COMPILING_IN_CPYTHON
+#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
+#else
+#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
+#endif
+#else
+#define __Pyx_PyErr_Clear() PyErr_Clear()
+#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
+#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
+#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
+#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
+#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
+#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
+#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
+#endif
+
 /* None.proto */
 static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);
 
@@ -1797,10 +1574,35 @@ static int __Pyx_IternextUnpackEndCheck(
 /* KeywordStringCheck.proto */
 static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);
 
-/* WriteUnraisableException.proto */
-static void __Pyx_WriteUnraisable(const char *name, int clineno,
-                                  int lineno, const char *filename,
-                                  int full_traceback, int nogil);
+/* PyObjectGetMethod.proto */
+static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);
+
+/* PyObjectCallMethod0.proto */
+static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);
+
+/* RaiseNoneIterError.proto */
+static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);
+
+/* UnpackTupleError.proto */
+static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);
+
+/* UnpackTuple2.proto */
+#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
+    (likely(is_tuple || PyTuple_Check(tuple)) ?\
+        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
+            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
+            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
+        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
+static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
+    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
+static int __Pyx_unpack_tuple2_generic(
+    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);
+
+/* dict_iter.proto */
+static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
+                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
+static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
+                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);
 
 /* ListAppend.proto */
 #if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
@@ -1810,7 +1612,7 @@ static CYTHON_INLINE int __Pyx_PyList_Ap
     if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
         Py_INCREF(x);
         PyList_SET_ITEM(list, len, x);
-        Py_SIZE(list) = len+1;
+        __Pyx_SET_SIZE(list, len + 1);
         return 0;
     }
     return PyList_Append(list, x);
@@ -1819,24 +1621,6 @@ static CYTHON_INLINE int __Pyx_PyList_Ap
 #define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
 #endif
 
-/* StringJoin.proto */
-#if PY_MAJOR_VERSION < 3
-#define __Pyx_PyString_Join __Pyx_PyBytes_Join
-#define __Pyx_PyBaseString_Join(s, v) (PyUnicode_CheckExact(s) ? PyUnicode_Join(s, v) : __Pyx_PyBytes_Join(s, v))
-#else
-#define __Pyx_PyString_Join PyUnicode_Join
-#define __Pyx_PyBaseString_Join PyUnicode_Join
-#endif
-#if CYTHON_COMPILING_IN_CPYTHON
-    #if PY_MAJOR_VERSION < 3
-    #define __Pyx_PyBytes_Join _PyString_Join
-    #else
-    #define __Pyx_PyBytes_Join _PyBytes_Join
-    #endif
-#else
-static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values);
-#endif
-
 /* RaiseException.proto */
 static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);
 
@@ -1878,9 +1662,6 @@ static CYTHON_INLINE PyObject *__Pyx_PyO
 /* PyIntCompare.proto */
 static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, long intval, long inplace);
 
-/* RaiseNoneIterError.proto */
-static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);
-
 /* GetTopmostException.proto */
 #if CYTHON_USE_EXC_INFO_STACK
 static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
@@ -2089,14 +1870,10 @@ typedef struct {
 #endif
 
 
-/* CIntToPy.proto */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);
-
-/* CIntToPy.proto */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value);
-
-/* CIntToPy.proto */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);
+/* GCCDiagnostics.proto */
+#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
+#define __Pyx_HAS_GCC_DIAGNOSTIC
+#endif
 
 /* RealImag.proto */
 #if CYTHON_CCOMPLEX
@@ -2196,12 +1973,18 @@ static CYTHON_INLINE PyObject* __Pyx_PyI
     #endif
 #endif
 
-/* CIntToPy.proto */
-static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);
-
 /* CIntFromPy.proto */
 static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);
 
+/* CIntToPy.proto */
+static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);
+
+/* CIntToPy.proto */
+static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value);
+
+/* CIntToPy.proto */
+static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);
+
 /* CIntFromPy.proto */
 static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);
 
@@ -2226,9 +2009,6 @@ static CYTHON_INLINE void __Pyx__Excepti
 static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
 #endif
 
-/* PyObjectGetMethod.proto */
-static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);
-
 /* PyObjectCallMethod1.proto */
 static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);
 
@@ -2255,6 +2035,7 @@ typedef struct {
     PyObject *gi_qualname;
     PyObject *gi_modulename;
     PyObject *gi_code;
+    PyObject *gi_frame;
     int resume_label;
     char is_running;
 } __pyx_CoroutineObject;
@@ -2343,8 +2124,17 @@ static PyTypeObject *__pyx_ptype_5numpy_
 static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
 static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
 static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
+static PyTypeObject *__pyx_ptype_5numpy_generic = 0;
+static PyTypeObject *__pyx_ptype_5numpy_number = 0;
+static PyTypeObject *__pyx_ptype_5numpy_integer = 0;
+static PyTypeObject *__pyx_ptype_5numpy_signedinteger = 0;
+static PyTypeObject *__pyx_ptype_5numpy_unsignedinteger = 0;
+static PyTypeObject *__pyx_ptype_5numpy_inexact = 0;
+static PyTypeObject *__pyx_ptype_5numpy_floating = 0;
+static PyTypeObject *__pyx_ptype_5numpy_complexfloating = 0;
+static PyTypeObject *__pyx_ptype_5numpy_flexible = 0;
+static PyTypeObject *__pyx_ptype_5numpy_character = 0;
 static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
-static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/
 
 /* Module declarations from 'cartopy._crs' */
 static PyTypeObject *__pyx_ptype_7cartopy_4_crs_CRS = 0;
@@ -2365,7 +2155,6 @@ static PyObject *__pyx_builtin_NotImplem
 static PyObject *__pyx_builtin_ValueError;
 static PyObject *__pyx_builtin_range;
 static PyObject *__pyx_builtin_super;
-static PyObject *__pyx_builtin_RuntimeError;
 static PyObject *__pyx_builtin_ImportError;
 static const char __pyx_k_[] = ".";
 static const char __pyx_k_8[] = "+{}={:.8}";
@@ -2378,25 +2167,21 @@ static const char __pyx_k_x[] = "x";
 static const char __pyx_k_y[] = "y";
 static const char __pyx_k_z[] = "z";
 static const char __pyx_k_16[] = "+{}={:.16}";
-static const char __pyx_k__5[] = "";
-static const char __pyx_k_cx[] = "cx";
-static const char __pyx_k_cy[] = "cy";
+static const char __pyx_k__3[] = "";
+static const char __pyx_k__6[] = "+{}={}";
+static const char __pyx_k__7[] = "+{}";
+static const char __pyx_k__8[] = " ";
 static const char __pyx_k_np[] = "np";
 static const char __pyx_k_pi[] = "pi";
 static const char __pyx_k_re[] = "re";
 static const char __pyx_k_rf[] = "rf";
 static const char __pyx_k_CRS[] = "CRS";
 static const char __pyx_k_PY3[] = "PY3";
-static const char __pyx_k__11[] = "+{}={}";
-static const char __pyx_k__12[] = "+{}";
-static const char __pyx_k__13[] = " ";
-static const char __pyx_k__21[] = "*";
+static const char __pyx_k__12[] = "*";
 static const char __pyx_k_any[] = "any";
 static const char __pyx_k_cos[] = "cos";
 static const char __pyx_k_doc[] = "__doc__";
-static const char __pyx_k_eps[] = "eps";
 static const char __pyx_k_get[] = "get";
-static const char __pyx_k_key[] = "key";
 static const char __pyx_k_msg[] = "msg";
 static const char __pyx_k_nan[] = "nan";
 static const char __pyx_k_pop[] = "pop";
@@ -2407,7 +2192,6 @@ static const char __pyx_k_axes[] = "axes
 static const char __pyx_k_copy[] = "copy";
 static const char __pyx_k_dict[] = "__dict__";
 static const char __pyx_k_init[] = "__init__";
-static const char __pyx_k_join[] = "join";
 static const char __pyx_k_main[] = "__main__";
 static const char __pyx_k_name[] = "__name__";
 static const char __pyx_k_ndim[] = "ndim";
@@ -2425,7 +2209,6 @@ static const char __pyx_k_class[] = "__c
 static const char __pyx_k_close[] = "close";
 static const char __pyx_k_d_d_d[] = "\\d+\\.\\d+.\\d+";
 static const char __pyx_k_datum[] = "datum";
-static const char __pyx_k_delta[] = "delta";
 static const char __pyx_k_dtype[] = "dtype";
 static const char __pyx_k_ellps[] = "ellps";
 static const char __pyx_k_empty[] = "empty";
@@ -2438,12 +2221,10 @@ static const char __pyx_k_proj4[] = "pro
 static const char __pyx_k_range[] = "range";
 static const char __pyx_k_shape[] = "shape";
 static const char __pyx_k_split[] = "split";
-static const char __pyx_k_state[] = "state";
 static const char __pyx_k_super[] = "super";
 static const char __pyx_k_throw[] = "throw";
 static const char __pyx_k_decode[] = "decode";
 static const char __pyx_k_double[] = "double";
-static const char __pyx_k_factor[] = "factor";
 static const char __pyx_k_format[] = "format";
 static const char __pyx_k_import[] = "__import__";
 static const char __pyx_k_latlon[] = "latlon";
@@ -2452,19 +2233,17 @@ static const char __pyx_k_module[] = "__
 static const char __pyx_k_o_proj[] = "o_proj";
 static const char __pyx_k_object[] = "object";
 static const char __pyx_k_offset[] = "offset";
-static const char __pyx_k_reduce[] = "__reduce__";
-static const char __pyx_k_result[] = "result";
 static const char __pyx_k_search[] = "search";
 static const char __pyx_k_status[] = "status";
 static const char __pyx_k_update[] = "update";
 static const char __pyx_k_GeoAxes[] = "GeoAxes";
 static const char __pyx_k_arctan2[] = "arctan2";
+static const char __pyx_k_crs_pyx[] = "_crs.pyx";
 static const char __pyx_k_deg2rad[] = "deg2rad";
 static const char __pyx_k_ellipse[] = "ellipse";
 static const char __pyx_k_flatten[] = "flatten";
 static const char __pyx_k_float32[] = "float32";
 static const char __pyx_k_genexpr[] = "genexpr";
-static const char __pyx_k_geoaxes[] = "geoaxes";
 static const char __pyx_k_geocent[] = "geocent";
 static const char __pyx_k_latlong[] = "latlong";
 static const char __pyx_k_longlat[] = "longlat";
@@ -2479,21 +2258,12 @@ static const char __pyx_k_towgs84[] = "t
 static const char __pyx_k_Geodetic[] = "Geodetic";
 static const char __pyx_k_getstate[] = "__getstate__";
 static const char __pyx_k_nadgrids[] = "nadgrids";
-static const char __pyx_k_proj_xyz[] = "proj_xyz";
 static const char __pyx_k_qualname[] = "__qualname__";
-static const char __pyx_k_setstate[] = "__setstate__";
-static const char __pyx_k_source_x[] = "source_x";
-static const char __pyx_k_source_y[] = "source_y";
 static const char __pyx_k_src_proj[] = "src_proj";
-static const char __pyx_k_target_x[] = "target_x";
-static const char __pyx_k_target_y[] = "target_y";
 static const char __pyx_k_to_meter[] = "to_meter";
 static const char __pyx_k_warnings[] = "warnings";
 static const char __pyx_k_x_limits[] = "x_limits";
 static const char __pyx_k_y_limits[] = "y_limits";
-static const char __pyx_k_CRS_state[] = "CRS_state";
-static const char __pyx_k_invalid_x[] = "invalid_x";
-static const char __pyx_k_invalid_y[] = "invalid_y";
 static const char __pyx_k_metaclass[] = "__metaclass__";
 static const char __pyx_k_transData[] = "transData";
 static const char __pyx_k_Geocentric[] = "Geocentric";
@@ -2506,64 +2276,34 @@ static const char __pyx_k_projection[] =
 static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
 static const char __pyx_k_ImportError[] = "ImportError";
 static const char __pyx_k_OrderedDict[] = "OrderedDict";
-static const char __pyx_k_as_geodetic[] = "as_geodetic";
 static const char __pyx_k_collections[] = "collections";
 static const char __pyx_k_is_geodetic[] = "is_geodetic";
 static const char __pyx_k_logical_xor[] = "logical_xor";
-static const char __pyx_k_projected_u[] = "projected_u";
-static const char __pyx_k_projected_v[] = "projected_v";
-static const char __pyx_k_CRS___reduce[] = "CRS.__reduce__";
 static const char __pyx_k_Globe___init[] = "Globe.__init__";
-static const char __pyx_k_RuntimeError[] = "RuntimeError";
 static const char __pyx_k_cartopy__crs[] = "cartopy._crs";
 static const char __pyx_k_proj4_params[] = "proj4_params";
-static const char __pyx_k_result_shape[] = "result_shape";
 static const char __pyx_k_PROJ4_RELEASE[] = "PROJ4_RELEASE";
 static const char __pyx_k_PROJ4_VERSION[] = "PROJ4_VERSION";
-static const char __pyx_k_as_geocentric[] = "as_geocentric";
-static const char __pyx_k_vector_angles[] = "vector_angles";
-static const char __pyx_k_CRS___getstate[] = "CRS.__getstate__";
-static const char __pyx_k_CRS___setstate[] = "CRS.__setstate__";
 static const char __pyx_k_NotImplemented[] = "NotImplemented";
-static const char __pyx_k_problem_points[] = "problem_points";
 static const char __pyx_k_semimajor_axis[] = "semimajor_axis";
 static const char __pyx_k_semiminor_axis[] = "semiminor_axis";
-static const char __pyx_k_CRS_as_geodetic[] = "CRS.as_geodetic";
-static const char __pyx_k_CRS_is_geodetic[] = "CRS.is_geodetic";
 static const char __pyx_k_Error_from_proj[] = "Error from proj: {}";
 static const char __pyx_k_Geodetic___init[] = "Geodetic.__init__";
 static const char __pyx_k_to_proj4_params[] = "to_proj4_params";
-static const char __pyx_k_transform_point[] = "transform_point";
-static const char __pyx_k_x_perturbations[] = "x_perturbations";
-static const char __pyx_k_y_perturbations[] = "y_perturbations";
-static const char __pyx_k_as_mpl_transform[] = "_as_mpl_transform";
 static const char __pyx_k_handles_ellipses[] = "_handles_ellipses";
-static const char __pyx_k_projected_angles[] = "projected_angles";
-static const char __pyx_k_reversed_vectors[] = "reversed_vectors";
 static const char __pyx_k_transform_points[] = "transform_points";
-static const char __pyx_k_CRS_as_geocentric[] = "CRS.as_geocentric";
 static const char __pyx_k_Geocentric___init[] = "Geocentric.__init__";
 static const char __pyx_k_Proj4Error___init[] = "Proj4Error.__init__";
 static const char __pyx_k_safe_pj_transform[] = "_safe_pj_transform";
-static const char __pyx_k_transform_vectors[] = "transform_vectors";
-static const char __pyx_k_vector_magnitudes[] = "vector_magnitudes";
 static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
 static const char __pyx_k_inverse_flattening[] = "inverse_flattening";
-static const char __pyx_k_target_x_perturbed[] = "target_x_perturbed";
-static const char __pyx_k_target_y_perturbed[] = "target_y_perturbed";
-static const char __pyx_k_CRS_transform_point[] = "CRS.transform_point";
 static const char __pyx_k_cartopy_mpl_geoaxes[] = "cartopy.mpl.geoaxes";
-static const char __pyx_k_CRS_transform_points[] = "CRS.transform_points";
 static const char __pyx_k_WGS84_SEMIMAJOR_AXIS[] = "WGS84_SEMIMAJOR_AXIS";
 static const char __pyx_k_WGS84_SEMIMINOR_AXIS[] = "WGS84_SEMIMINOR_AXIS";
-static const char __pyx_k_lib_cartopy__crs_pyx[] = "lib/cartopy/_crs.pyx";
-static const char __pyx_k_CRS__as_mpl_transform[] = "CRS._as_mpl_transform";
-static const char __pyx_k_CRS_transform_vectors[] = "CRS.transform_vectors";
 static const char __pyx_k_Globe_to_proj4_params[] = "Globe.to_proj4_params";
 static const char __pyx_k_safe_pj_transform_611[] = "_safe_pj_transform_611";
 static const char __pyx_k_InterProjectionTransform[] = "InterProjectionTransform";
 static const char __pyx_k_safe_pj_transform_pre_611[] = "_safe_pj_transform_pre_611";
-static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
 static const char __pyx_k_Define_a_Geocentric_coordinate[] = "\n    Define a Geocentric coordinate system, where x, y, z are Cartesian\n    coordinates from the center of the Earth.\n\n    ";
 static const char __pyx_k_Define_a_latitude_longitude_coo[] = "\n    Define a latitude/longitude coordinate system with spherical topology,\n    geographical distance and coordinates are measured in degrees.\n\n    ";
 static const char __pyx_k_Define_an_ellipsoid_and_optiona[] = "\n    Define an ellipsoid and, optionally, how to relate it to the real world.\n\n    ";
@@ -2571,44 +2311,26 @@ static const char __pyx_k_Raised_when_th
 static const char __pyx_k_This_module_defines_the_core_CR[] = "\nThis module defines the core CRS class which can interface with Proj.\nThe CRS class is the base-class for all projections defined in :mod:`cartopy.crs`.\n\n";
 static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
 static const char __pyx_k_transform_points_locals_genexpr[] = "transform_points.<locals>.genexpr";
-static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
 static const char __pyx_k_x_y_and_z_arrays_must_be_1_or_2[] = "x, y and z arrays must be 1 or 2 dimensional";
 static const char __pyx_k_Axes_should_be_an_instance_of_Ge[] = "Axes should be an instance of GeoAxes, got %s";
-static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
 static const char __pyx_k_Globe_to_proj4_params_locals_gen[] = "Globe.to_proj4_params.<locals>.genexpr";
-static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
 static const char __pyx_k_Some_vectors_at_source_domain_co[] = "Some vectors at source domain corners may not have been transformed correctly";
 static const char __pyx_k_The_projection_does_not_handle_e[] = "The \"{}\" projection does not handle elliptical globes.";
-static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
 static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
 static const char __pyx_k_x_and_y_arrays_must_be_1_or_2_di[] = "x and y arrays must be 1 or 2 dimensional";
 static const char __pyx_k_x_and_y_arrays_must_have_the_sam[] = "x and y arrays must have the same length";
 static const char __pyx_k_x_y_and_z_arrays_must_have_the_s[] = "x, y, and z arrays must have the same length";
 static const char __pyx_k_x_y_u_and_v_arrays_must_be_the_s[] = "x, y, u and v arrays must be the same shape";
 static const char __pyx_k_x_y_u_and_v_must_be_1_or_2_dimen[] = "x, y, u and v must be 1 or 2 dimensional";
-static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
-static PyObject *__pyx_kp_s_;
-static PyObject *__pyx_kp_s_16;
-static PyObject *__pyx_kp_s_8;
-static PyObject *__pyx_kp_s_Axes_should_be_an_instance_of_Ge;
+static PyObject *__pyx_kp_u_;
+static PyObject *__pyx_kp_u_16;
+static PyObject *__pyx_kp_u_8;
+static PyObject *__pyx_kp_u_Axes_should_be_an_instance_of_Ge;
 static PyObject *__pyx_n_s_CRS;
-static PyObject *__pyx_n_s_CRS___getstate;
-static PyObject *__pyx_n_s_CRS___reduce;
-static PyObject *__pyx_n_s_CRS___setstate;
-static PyObject *__pyx_n_s_CRS__as_mpl_transform;
-static PyObject *__pyx_n_s_CRS_as_geocentric;
-static PyObject *__pyx_n_s_CRS_as_geodetic;
-static PyObject *__pyx_n_s_CRS_is_geodetic;
-static PyObject *__pyx_n_s_CRS_state;
-static PyObject *__pyx_n_s_CRS_transform_point;
-static PyObject *__pyx_n_s_CRS_transform_points;
-static PyObject *__pyx_n_s_CRS_transform_vectors;
 static PyObject *__pyx_kp_s_Define_a_Geocentric_coordinate;
 static PyObject *__pyx_kp_s_Define_a_latitude_longitude_coo;
 static PyObject *__pyx_kp_s_Define_an_ellipsoid_and_optiona;
-static PyObject *__pyx_kp_s_Error_from_proj;
-static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
-static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
+static PyObject *__pyx_kp_u_Error_from_proj;
 static PyObject *__pyx_n_s_GeoAxes;
 static PyObject *__pyx_n_s_Geocentric;
 static PyObject *__pyx_n_s_Geocentric___init;
@@ -2620,7 +2342,6 @@ static PyObject *__pyx_n_s_Globe_to_proj
 static PyObject *__pyx_n_s_Globe_to_proj4_params_locals_gen;
 static PyObject *__pyx_n_s_ImportError;
 static PyObject *__pyx_n_s_InterProjectionTransform;
-static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
 static PyObject *__pyx_n_s_NotImplemented;
 static PyObject *__pyx_n_s_OrderedDict;
 static PyObject *__pyx_n_s_PROJ4_RELEASE;
@@ -2629,28 +2350,25 @@ static PyObject *__pyx_n_s_PY3;
 static PyObject *__pyx_n_s_Proj4Error;
 static PyObject *__pyx_n_s_Proj4Error___init;
 static PyObject *__pyx_kp_s_Raised_when_there_has_been_an_e;
-static PyObject *__pyx_n_s_RuntimeError;
-static PyObject *__pyx_kp_s_Some_vectors_at_source_domain_co;
-static PyObject *__pyx_kp_s_The_projection_does_not_handle_e;
+static PyObject *__pyx_kp_u_Some_vectors_at_source_domain_co;
+static PyObject *__pyx_kp_u_The_projection_does_not_handle_e;
 static PyObject *__pyx_n_s_ValueError;
-static PyObject *__pyx_n_s_WGS84;
+static PyObject *__pyx_n_u_WGS84;
 static PyObject *__pyx_n_s_WGS84_SEMIMAJOR_AXIS;
 static PyObject *__pyx_n_s_WGS84_SEMIMINOR_AXIS;
-static PyObject *__pyx_kp_s__11;
-static PyObject *__pyx_kp_s__12;
-static PyObject *__pyx_kp_s__13;
-static PyObject *__pyx_n_s__21;
-static PyObject *__pyx_kp_s__5;
-static PyObject *__pyx_n_s_a;
+static PyObject *__pyx_n_s__12;
+static PyObject *__pyx_kp_u__3;
+static PyObject *__pyx_kp_u__6;
+static PyObject *__pyx_kp_u__7;
+static PyObject *__pyx_kp_u__8;
+static PyObject *__pyx_n_u_a;
 static PyObject *__pyx_n_s_any;
 static PyObject *__pyx_n_s_arctan2;
 static PyObject *__pyx_n_s_args;
 static PyObject *__pyx_n_s_array;
-static PyObject *__pyx_n_s_as_geocentric;
-static PyObject *__pyx_n_s_as_geodetic;
-static PyObject *__pyx_n_s_as_mpl_transform;
 static PyObject *__pyx_n_s_axes;
 static PyObject *__pyx_n_s_b;
+static PyObject *__pyx_n_u_b;
 static PyObject *__pyx_n_s_cartopy__crs;
 static PyObject *__pyx_n_s_cartopy_mpl_geoaxes;
 static PyObject *__pyx_n_s_class;
@@ -2659,96 +2377,82 @@ static PyObject *__pyx_n_s_close;
 static PyObject *__pyx_n_s_collections;
 static PyObject *__pyx_n_s_copy;
 static PyObject *__pyx_n_s_cos;
-static PyObject *__pyx_n_s_cx;
-static PyObject *__pyx_n_s_cy;
-static PyObject *__pyx_kp_s_d_d_d;
+static PyObject *__pyx_kp_s_crs_pyx;
+static PyObject *__pyx_kp_u_d_d_d;
 static PyObject *__pyx_n_s_datum;
+static PyObject *__pyx_n_u_datum;
 static PyObject *__pyx_n_s_decode;
 static PyObject *__pyx_n_s_deg2rad;
-static PyObject *__pyx_n_s_delta;
 static PyObject *__pyx_n_s_dict;
 static PyObject *__pyx_n_s_doc;
 static PyObject *__pyx_n_s_double;
 static PyObject *__pyx_n_s_dtype;
 static PyObject *__pyx_n_s_ellipse;
-static PyObject *__pyx_n_s_ellps;
+static PyObject *__pyx_n_u_ellps;
 static PyObject *__pyx_n_s_empty;
-static PyObject *__pyx_n_s_eps;
-static PyObject *__pyx_n_s_f;
-static PyObject *__pyx_n_s_factor;
+static PyObject *__pyx_n_u_f;
 static PyObject *__pyx_n_s_flatten;
 static PyObject *__pyx_n_s_flattening;
 static PyObject *__pyx_n_s_float32;
 static PyObject *__pyx_n_s_format;
 static PyObject *__pyx_n_s_genexpr;
-static PyObject *__pyx_n_s_geoaxes;
-static PyObject *__pyx_n_s_geocent;
+static PyObject *__pyx_n_u_geocent;
 static PyObject *__pyx_n_s_get;
 static PyObject *__pyx_n_s_getstate;
 static PyObject *__pyx_n_s_globe;
+static PyObject *__pyx_n_u_globe;
 static PyObject *__pyx_n_s_group;
 static PyObject *__pyx_n_s_handles_ellipses;
 static PyObject *__pyx_n_s_import;
 static PyObject *__pyx_n_s_init;
-static PyObject *__pyx_n_s_invalid_x;
-static PyObject *__pyx_n_s_invalid_y;
 static PyObject *__pyx_n_s_inverse_flattening;
 static PyObject *__pyx_n_s_is_geodetic;
 static PyObject *__pyx_n_s_items;
-static PyObject *__pyx_n_s_join;
-static PyObject *__pyx_n_s_key;
-static PyObject *__pyx_n_s_latlon;
-static PyObject *__pyx_n_s_latlong;
-static PyObject *__pyx_kp_s_lib_cartopy__crs_pyx;
+static PyObject *__pyx_n_u_latlon;
+static PyObject *__pyx_n_u_latlong;
 static PyObject *__pyx_n_s_logical_or;
 static PyObject *__pyx_n_s_logical_xor;
-static PyObject *__pyx_n_s_longlat;
+static PyObject *__pyx_n_u_longlat;
 static PyObject *__pyx_n_s_lonlat;
+static PyObject *__pyx_n_u_lonlat;
 static PyObject *__pyx_n_s_main;
 static PyObject *__pyx_n_s_match;
 static PyObject *__pyx_n_s_metaclass;
 static PyObject *__pyx_n_s_module;
 static PyObject *__pyx_n_s_msg;
 static PyObject *__pyx_n_s_nadgrids;
+static PyObject *__pyx_n_u_nadgrids;
 static PyObject *__pyx_n_s_name;
 static PyObject *__pyx_n_s_nan;
-static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
-static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
+static PyObject *__pyx_n_u_nan;
 static PyObject *__pyx_n_s_ndim;
-static PyObject *__pyx_kp_s_no_defs;
+static PyObject *__pyx_kp_u_no_defs;
 static PyObject *__pyx_n_s_np;
 static PyObject *__pyx_n_s_npts;
 static PyObject *__pyx_n_s_numpy;
-static PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
-static PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
-static PyObject *__pyx_n_s_o_proj;
-static PyObject *__pyx_n_s_ob_tran;
+static PyObject *__pyx_kp_u_numpy_core_multiarray_failed_to;
+static PyObject *__pyx_kp_u_numpy_core_umath_failed_to_impor;
+static PyObject *__pyx_n_u_o_proj;
+static PyObject *__pyx_n_u_ob_tran;
 static PyObject *__pyx_n_s_object;
 static PyObject *__pyx_n_s_offset;
 static PyObject *__pyx_n_s_pi;
 static PyObject *__pyx_n_s_pop;
 static PyObject *__pyx_n_s_prepare;
-static PyObject *__pyx_n_s_problem_points;
-static PyObject *__pyx_n_s_proj;
-static PyObject *__pyx_n_s_proj4;
+static PyObject *__pyx_n_u_proj;
+static PyObject *__pyx_n_u_proj4;
 static PyObject *__pyx_n_s_proj4_init;
+static PyObject *__pyx_n_u_proj4_init;
 static PyObject *__pyx_n_s_proj4_params;
-static PyObject *__pyx_n_s_proj_xyz;
-static PyObject *__pyx_n_s_projected_angles;
-static PyObject *__pyx_n_s_projected_u;
-static PyObject *__pyx_n_s_projected_v;
+static PyObject *__pyx_n_u_proj4_params;
 static PyObject *__pyx_n_s_projection;
 static PyObject *__pyx_n_s_pyx_vtable;
 static PyObject *__pyx_n_s_qualname;
 static PyObject *__pyx_n_s_rad2deg;
 static PyObject *__pyx_n_s_range;
 static PyObject *__pyx_n_s_re;
-static PyObject *__pyx_n_s_reduce;
 static PyObject *__pyx_n_s_reshape;
-static PyObject *__pyx_n_s_result;
-static PyObject *__pyx_n_s_result_shape;
-static PyObject *__pyx_n_s_reversed_vectors;
-static PyObject *__pyx_n_s_rf;
+static PyObject *__pyx_n_u_rf;
 static PyObject *__pyx_n_s_safe_pj_transform;
 static PyObject *__pyx_n_s_safe_pj_transform_611;
 static PyObject *__pyx_n_s_safe_pj_transform_pre_611;
@@ -2757,54 +2461,40 @@ static PyObject *__pyx_n_s_self;
 static PyObject *__pyx_n_s_semimajor_axis;
 static PyObject *__pyx_n_s_semiminor_axis;
 static PyObject *__pyx_n_s_send;
-static PyObject *__pyx_n_s_setstate;
 static PyObject *__pyx_n_s_shape;
 static PyObject *__pyx_n_s_sin;
 static PyObject *__pyx_n_s_six;
-static PyObject *__pyx_n_s_source_x;
-static PyObject *__pyx_n_s_source_y;
 static PyObject *__pyx_n_s_split;
 static PyObject *__pyx_n_s_src_crs;
 static PyObject *__pyx_n_s_src_proj;
-static PyObject *__pyx_n_s_state;
 static PyObject *__pyx_n_s_status;
 static PyObject *__pyx_n_s_super;
-static PyObject *__pyx_n_s_target_x;
-static PyObject *__pyx_n_s_target_x_perturbed;
-static PyObject *__pyx_n_s_target_y;
-static PyObject *__pyx_n_s_target_y_perturbed;
 static PyObject *__pyx_n_s_test;
 static PyObject *__pyx_n_s_tgt_crs;
 static PyObject *__pyx_n_s_throw;
-static PyObject *__pyx_n_s_to_meter;
+static PyObject *__pyx_n_u_to_meter;
 static PyObject *__pyx_n_s_to_proj4_params;
 static PyObject *__pyx_n_s_towgs84;
+static PyObject *__pyx_n_u_towgs84;
 static PyObject *__pyx_n_s_transData;
-static PyObject *__pyx_n_s_transform_point;
 static PyObject *__pyx_n_s_transform_points;
 static PyObject *__pyx_n_s_transform_points_locals_genexpr;
-static PyObject *__pyx_n_s_transform_vectors;
 static PyObject *__pyx_n_s_trap;
 static PyObject *__pyx_n_s_u;
-static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
 static PyObject *__pyx_n_s_update;
 static PyObject *__pyx_n_s_v;
-static PyObject *__pyx_n_s_vector_angles;
-static PyObject *__pyx_n_s_vector_magnitudes;
 static PyObject *__pyx_n_s_warn;
 static PyObject *__pyx_n_s_warnings;
 static PyObject *__pyx_n_s_x;
-static PyObject *__pyx_kp_s_x_and_y_arrays_must_be_1_or_2_di;
-static PyObject *__pyx_kp_s_x_and_y_arrays_must_have_the_sam;
+static PyObject *__pyx_kp_u_x_and_y_arrays_must_be_1_or_2_di;
+static PyObject *__pyx_kp_u_x_and_y_arrays_must_have_the_sam;
 static PyObject *__pyx_n_s_x_limits;
-static PyObject *__pyx_n_s_x_perturbations;
-static PyObject *__pyx_kp_s_x_y_and_z_arrays_must_be_1_or_2;
-static PyObject *__pyx_kp_s_x_y_and_z_arrays_must_have_the_s;
-static PyObject *__pyx_kp_s_x_y_u_and_v_arrays_must_be_the_s;
-static PyObject *__pyx_kp_s_x_y_u_and_v_must_be_1_or_2_dimen;
+static PyObject *__pyx_kp_u_x_y_and_z_arrays_must_be_1_or_2;
+static PyObject *__pyx_kp_u_x_y_and_z_arrays_must_have_the_s;
+static PyObject *__pyx_kp_u_x_y_u_and_v_arrays_must_be_the_s;
+static PyObject *__pyx_kp_u_x_y_u_and_v_must_be_1_or_2_dimen;
 static PyObject *__pyx_n_s_y;
 static PyObject *__pyx_n_s_y_limits;
-static PyObject *__pyx_n_s_y_perturbations;
 static PyObject *__pyx_n_s_z;
 static PyObject *__pyx_pf_7cartopy_4_crs_4genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
 static PyObject *__pyx_pf_7cartopy_4_crs_10Proj4Error___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
@@ -2833,8 +2523,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_10proj4_init___get__(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self); /* proto */
 static PyObject *__pyx_pf_7cartopy_4_crs_8Geodetic___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_globe); /* proto */
 static PyObject *__pyx_pf_7cartopy_4_crs_10Geocentric___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_globe); /* proto */
-static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
-static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
 static PyObject *__pyx_tp_new_7cartopy_4_crs_CRS(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
 static PyObject *__pyx_tp_new_7cartopy_4_crs___pyx_scope_struct__genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
 static PyObject *__pyx_tp_new_7cartopy_4_crs___pyx_scope_struct_1_to_proj4_params(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
@@ -2850,76 +2538,51 @@ static PyObject *__pyx_int_2;
 static PyObject *__pyx_int_3;
 static PyObject *__pyx_int_6;
 static PyObject *__pyx_int_neg_1;
+static PyObject *__pyx_tuple__2;
 static PyObject *__pyx_tuple__4;
-static PyObject *__pyx_tuple__6;
-static PyObject *__pyx_tuple__7;
-static PyObject *__pyx_slice__32;
-static PyObject *__pyx_slice__36;
+static PyObject *__pyx_tuple__5;
+static PyObject *__pyx_tuple__9;
+static PyObject *__pyx_slice__18;
+static PyObject *__pyx_slice__22;
+static PyObject *__pyx_tuple__10;
+static PyObject *__pyx_tuple__11;
+static PyObject *__pyx_tuple__13;
+static PyObject *__pyx_tuple__14;
+static PyObject *__pyx_tuple__15;
 static PyObject *__pyx_tuple__16;
 static PyObject *__pyx_tuple__17;
 static PyObject *__pyx_tuple__19;
+static PyObject *__pyx_tuple__20;
+static PyObject *__pyx_tuple__21;
+static PyObject *__pyx_tuple__23;
+static PyObject *__pyx_tuple__24;
+static PyObject *__pyx_tuple__25;
+static PyObject *__pyx_tuple__26;
 static PyObject *__pyx_tuple__27;
 static PyObject *__pyx_tuple__28;
 static PyObject *__pyx_tuple__29;
 static PyObject *__pyx_tuple__30;
 static PyObject *__pyx_tuple__31;
-static PyObject *__pyx_tuple__33;
+static PyObject *__pyx_tuple__32;
 static PyObject *__pyx_tuple__34;
-static PyObject *__pyx_tuple__35;
-static PyObject *__pyx_tuple__37;
+static PyObject *__pyx_tuple__36;
+static PyObject *__pyx_tuple__38;
 static PyObject *__pyx_tuple__39;
 static PyObject *__pyx_tuple__40;
 static PyObject *__pyx_tuple__41;
-static PyObject *__pyx_tuple__42;
+static PyObject *__pyx_tuple__43;
 static PyObject *__pyx_tuple__44;
 static PyObject *__pyx_tuple__46;
-static PyObject *__pyx_tuple__47;
 static PyObject *__pyx_tuple__48;
 static PyObject *__pyx_tuple__49;
-static PyObject *__pyx_tuple__50;
 static PyObject *__pyx_tuple__51;
-static PyObject *__pyx_tuple__52;
-static PyObject *__pyx_tuple__53;
-static PyObject *__pyx_tuple__54;
-static PyObject *__pyx_tuple__55;
-static PyObject *__pyx_tuple__56;
-static PyObject *__pyx_tuple__57;
-static PyObject *__pyx_tuple__58;
-static PyObject *__pyx_tuple__59;
-static PyObject *__pyx_tuple__60;
-static PyObject *__pyx_tuple__61;
-static PyObject *__pyx_tuple__62;
-static PyObject *__pyx_tuple__63;
-static PyObject *__pyx_tuple__64;
-static PyObject *__pyx_tuple__65;
-static PyObject *__pyx_tuple__66;
-static PyObject *__pyx_tuple__67;
-static PyObject *__pyx_tuple__68;
-static PyObject *__pyx_tuple__69;
-static PyObject *__pyx_tuple__70;
-static PyObject *__pyx_tuple__71;
-static PyObject *__pyx_tuple__72;
-static PyObject *__pyx_tuple__73;
-static PyObject *__pyx_tuple__74;
-static PyObject *__pyx_tuple__75;
-static PyObject *__pyx_tuple__76;
-static PyObject *__pyx_codeobj__2;
-static PyObject *__pyx_codeobj__3;
-static PyObject *__pyx_codeobj__8;
-static PyObject *__pyx_codeobj__9;
-static PyObject *__pyx_codeobj__10;
-static PyObject *__pyx_codeobj__14;
-static PyObject *__pyx_codeobj__15;
-static PyObject *__pyx_codeobj__18;
-static PyObject *__pyx_codeobj__20;
-static PyObject *__pyx_codeobj__22;
-static PyObject *__pyx_codeobj__23;
-static PyObject *__pyx_codeobj__24;
-static PyObject *__pyx_codeobj__25;
-static PyObject *__pyx_codeobj__26;
-static PyObject *__pyx_codeobj__38;
-static PyObject *__pyx_codeobj__43;
+static PyObject *__pyx_codeobj__33;
+static PyObject *__pyx_codeobj__35;
+static PyObject *__pyx_codeobj__37;
+static PyObject *__pyx_codeobj__42;
 static PyObject *__pyx_codeobj__45;
+static PyObject *__pyx_codeobj__47;
+static PyObject *__pyx_codeobj__50;
 /* Late includes */
 static PyObject *__pyx_gb_7cartopy_4_crs_6generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */
 
@@ -2935,6 +2598,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct__genexpr *__pyx_cur_scope;
   PyObject *__pyx_r = NULL;
   __Pyx_RefNannyDeclarations
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("genexpr", 0);
   __pyx_cur_scope = (struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct__genexpr *)__pyx_tp_new_7cartopy_4_crs___pyx_scope_struct__genexpr(__pyx_ptype_7cartopy_4_crs___pyx_scope_struct__genexpr, __pyx_empty_tuple, NULL);
   if (unlikely(!__pyx_cur_scope)) {
@@ -2965,21 +2631,21 @@ static PyObject *__pyx_gb_7cartopy_4_crs
 {
   struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct__genexpr *__pyx_cur_scope = ((struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct__genexpr *)__pyx_generator->closure);
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   PyObject *__pyx_t_3 = NULL;
   PyObject *__pyx_t_4 = NULL;
   Py_ssize_t __pyx_t_5;
   PyObject *(*__pyx_t_6)(PyObject *);
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("genexpr", 0);
-  __Pyx_TraceCall("genexpr", __pyx_f[0], 40, 0, __PYX_ERR(0, 40, __pyx_L1_error));
   switch (__pyx_generator->resume_label) {
     case 0: goto __pyx_L3_first_run;
     case 1: goto __pyx_L6_resume_from_yield;
     default: /* CPython raises the right error here */
-    __Pyx_TraceReturn(Py_None, 0);
     __Pyx_RefNannyFinishContext();
     return NULL;
   }
@@ -3018,7 +2684,7 @@ static PyObject *__pyx_gb_7cartopy_4_crs
       __Pyx_DECREF_SET(__pyx_t_4, function);
     }
   }
-  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_s_) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_s_);
+  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_kp_u_) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_kp_u_);
   __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
   if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 40, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
@@ -3076,7 +2742,6 @@ static PyObject *__pyx_gb_7cartopy_4_crs
     __pyx_cur_scope->__pyx_t_1 = __pyx_t_5;
     __pyx_cur_scope->__pyx_t_2 = __pyx_t_6;
     __Pyx_XGIVEREF(__pyx_r);
-    __Pyx_TraceReturn(__pyx_r, 0);
     __Pyx_RefNannyFinishContext();
     __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
     /* return from generator, yielding value */
@@ -3109,7 +2774,6 @@ static PyObject *__pyx_gb_7cartopy_4_crs
   #endif
   __pyx_generator->resume_label = -1;
   __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3141,16 +2805,16 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   int __pyx_v_status;
   PyObject *__pyx_v_msg = NULL;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   PyObject *__pyx_t_3 = NULL;
   PyObject *__pyx_t_4 = NULL;
   int __pyx_t_5;
-  __Pyx_TraceFrameInit(__pyx_codeobj__2)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__init__", 0);
-  __Pyx_TraceCall("__init__", __pyx_f[0], 56, 0, __PYX_ERR(0, 56, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":58
  *     def __init__(self):
@@ -3159,7 +2823,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         msg = 'Error from proj: {}'.format(pj_strerrno(status))
  *         self.status = status
  */
-  __Pyx_TraceLine(58,0,__PYX_ERR(0, 58, __pyx_L1_error))
   __pyx_v_status = (*pj_get_errno_ref());
 
   /* "cartopy/_crs.pyx":59
@@ -3169,8 +2832,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         self.status = status
  *         Exception.__init__(self, msg)
  */
-  __Pyx_TraceLine(59,0,__PYX_ERR(0, 59, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_Error_from_proj, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_Error_from_proj, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_3 = __Pyx_PyBytes_FromString(pj_strerrno(__pyx_v_status)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 59, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
@@ -3200,7 +2862,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         Exception.__init__(self, msg)
  * 
  */
-  __Pyx_TraceLine(60,0,__PYX_ERR(0, 60, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 60, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_status, __pyx_t_1) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
@@ -3213,7 +2874,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  * 
  */
-  __Pyx_TraceLine(61,0,__PYX_ERR(0, 61, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])), __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_3 = NULL;
@@ -3284,7 +2944,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_L0:;
   __Pyx_XDECREF(__pyx_v_msg);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3309,6 +2968,9 @@ static PyObject *__pyx_pw_7cartopy_4_crs
   PyArrayObject *__pyx_v_x = 0;
   PyArrayObject *__pyx_v_y = 0;
   PyArrayObject *__pyx_v_z = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("_safe_pj_transform_611 (wrapper)", 0);
@@ -3434,7 +3096,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_LocalBuf_ND __pyx_pybuffernd_z;
   __Pyx_Buffer __pyx_pybuffer_z;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   PyObject *__pyx_t_2 = NULL;
@@ -3450,9 +3111,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   Py_ssize_t __pyx_t_12;
   Py_ssize_t __pyx_t_13;
   Py_ssize_t __pyx_t_14;
-  __Pyx_TraceFrameInit(__pyx_codeobj__3)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("_safe_pj_transform_611", 0);
-  __Pyx_TraceCall("_safe_pj_transform_611", __pyx_f[0], 64, 0, __PYX_ERR(0, 64, __pyx_L1_error));
   __Pyx_INCREF((PyObject *)__pyx_v_x);
   __Pyx_INCREF((PyObject *)__pyx_v_y);
   __pyx_pybuffer_x.pybuffer.buf = NULL;
@@ -3490,9 +3152,8 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     if (src_crs.proj4_params.get('proj', '') == 'ob_tran' and
  */
-  __Pyx_TraceLine(76,0,__PYX_ERR(0, 76, __pyx_L1_error))
-  __Pyx_INCREF(__pyx_tuple__4);
-  __pyx_v_lonlat = __pyx_tuple__4;
+  __Pyx_INCREF(__pyx_tuple__2);
+  __pyx_v_lonlat = __pyx_tuple__2;
 
   /* "cartopy/_crs.pyx":78
  *     lonlat = ('latlon', 'latlong', 'lonlat', 'longlat')
@@ -3501,13 +3162,12 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             src_crs.proj4_params.get('o_proj', '') in lonlat and
  *             'to_meter' in src_crs.proj4_params):
  */
-  __Pyx_TraceLine(78,0,__PYX_ERR(0, 78, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_crs->proj4_params, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 78, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 78, __pyx_L1_error)
+  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 78, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-  __pyx_t_4 = (__Pyx_PyString_Equals(__pyx_t_3, __pyx_n_s_ob_tran, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 78, __pyx_L1_error)
+  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_ob_tran, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 78, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
   if (__pyx_t_4) {
   } else {
@@ -3522,10 +3182,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             'to_meter' in src_crs.proj4_params):
  *        x *= src_crs.proj4_params['to_meter']
  */
-  __Pyx_TraceLine(79,0,__PYX_ERR(0, 79, __pyx_L1_error))
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_crs->proj4_params, __pyx_n_s_get); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 79, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
-  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
   __pyx_t_4 = (__Pyx_PySequence_ContainsTF(__pyx_t_2, __pyx_v_lonlat, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 79, __pyx_L1_error)
@@ -3544,8 +3203,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *        x *= src_crs.proj4_params['to_meter']
  *        y *= src_crs.proj4_params['to_meter']
  */
-  __Pyx_TraceLine(80,0,__PYX_ERR(0, 80, __pyx_L1_error))
-  __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_to_meter, __pyx_v_src_crs->proj4_params, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 80, __pyx_L1_error)
+  __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_to_meter, __pyx_v_src_crs->proj4_params, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 80, __pyx_L1_error)
   __pyx_t_4 = (__pyx_t_5 != 0);
   __pyx_t_1 = __pyx_t_4;
   __pyx_L4_bool_binop_done:;
@@ -3557,7 +3215,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             src_crs.proj4_params.get('o_proj', '') in lonlat and
  *             'to_meter' in src_crs.proj4_params):
  */
-  __Pyx_TraceLine(78,0,__PYX_ERR(0, 78, __pyx_L1_error))
   if (__pyx_t_1) {
 
     /* "cartopy/_crs.pyx":81
@@ -3567,8 +3224,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *        y *= src_crs.proj4_params['to_meter']
  * 
  */
-    __Pyx_TraceLine(81,0,__PYX_ERR(0, 81, __pyx_L1_error))
-    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_src_crs->proj4_params, __pyx_n_s_to_meter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 81, __pyx_L1_error)
+    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_src_crs->proj4_params, __pyx_n_u_to_meter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 81, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_3 = PyNumber_InPlaceMultiply(((PyObject *)__pyx_v_x), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 81, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
@@ -3603,8 +3259,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     if z is not None:
  */
-    __Pyx_TraceLine(82,0,__PYX_ERR(0, 82, __pyx_L1_error))
-    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_src_crs->proj4_params, __pyx_n_s_to_meter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
+    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_src_crs->proj4_params, __pyx_n_u_to_meter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
     __pyx_t_2 = PyNumber_InPlaceMultiply(((PyObject *)__pyx_v_y), __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 82, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
@@ -3648,7 +3303,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         status = pj_transform(src_crs.proj4, tgt_crs.proj4, npts, offset,
  *                               &x[0], &y[0], &z[0])
  */
-  __Pyx_TraceLine(84,0,__PYX_ERR(0, 84, __pyx_L1_error))
   __pyx_t_1 = (((PyObject *)__pyx_v_z) != Py_None);
   __pyx_t_4 = (__pyx_t_1 != 0);
   if (__pyx_t_4) {
@@ -3660,7 +3314,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *     else:
  *         status = pj_transform(src_crs.proj4, tgt_crs.proj4, npts, offset,
  */
-    __Pyx_TraceLine(86,0,__PYX_ERR(0, 86, __pyx_L1_error))
     __pyx_t_12 = 0;
     __pyx_t_7 = -1;
     if (__pyx_t_12 < 0) {
@@ -3699,7 +3352,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                               &x[0], &y[0], &z[0])
  *     else:
  */
-    __Pyx_TraceLine(85,0,__PYX_ERR(0, 85, __pyx_L1_error))
     __pyx_v_status = pj_transform(__pyx_v_src_crs->proj4, __pyx_v_tgt_crs->proj4, __pyx_v_npts, __pyx_v_offset, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_x.rcbuffer->pybuffer.buf, __pyx_t_12, __pyx_pybuffernd_x.diminfo[0].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_y.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_y.diminfo[0].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_z.rcbuffer->pybuffer.buf, __pyx_t_14, __pyx_pybuffernd_z.diminfo[0].strides))));
 
     /* "cartopy/_crs.pyx":84
@@ -3719,7 +3371,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                               &x[0], &y[0], NULL)
  * 
  */
-  __Pyx_TraceLine(88,0,__PYX_ERR(0, 88, __pyx_L1_error))
   /*else*/ {
 
     /* "cartopy/_crs.pyx":89
@@ -3729,7 +3380,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     if (tgt_crs.proj4_params.get('proj', '') == 'ob_tran' and
  */
-    __Pyx_TraceLine(89,0,__PYX_ERR(0, 89, __pyx_L1_error))
     __pyx_t_14 = 0;
     __pyx_t_7 = -1;
     if (__pyx_t_14 < 0) {
@@ -3758,7 +3408,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                               &x[0], &y[0], NULL)
  * 
  */
-    __Pyx_TraceLine(88,0,__PYX_ERR(0, 88, __pyx_L1_error))
     __pyx_v_status = pj_transform(__pyx_v_src_crs->proj4, __pyx_v_tgt_crs->proj4, __pyx_v_npts, __pyx_v_offset, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_x.rcbuffer->pybuffer.buf, __pyx_t_14, __pyx_pybuffernd_x.diminfo[0].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_y.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_y.diminfo[0].strides))), NULL);
   }
   __pyx_L7:;
@@ -3770,13 +3419,12 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             tgt_crs.proj4_params.get('o_proj', '') in lonlat and
  *            'to_meter' in tgt_crs.proj4_params):
  */
-  __Pyx_TraceLine(91,0,__PYX_ERR(0, 91, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_tgt_crs->proj4_params, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 91, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 91, __pyx_L1_error)
+  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 91, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_t_3, __pyx_n_s_ob_tran, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 91, __pyx_L1_error)
+  __pyx_t_1 = (__Pyx_PyUnicode_Equals(__pyx_t_3, __pyx_n_u_ob_tran, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 91, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
   if (__pyx_t_1) {
   } else {
@@ -3791,10 +3439,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *            'to_meter' in tgt_crs.proj4_params):
  *         x /= tgt_crs.proj4_params['to_meter']
  */
-  __Pyx_TraceLine(92,0,__PYX_ERR(0, 92, __pyx_L1_error))
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_tgt_crs->proj4_params, __pyx_n_s_get); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 92, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
-  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 92, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 92, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
   __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_t_2, __pyx_v_lonlat, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 92, __pyx_L1_error)
@@ -3813,8 +3460,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         x /= tgt_crs.proj4_params['to_meter']
  *         y /= tgt_crs.proj4_params['to_meter']
  */
-  __Pyx_TraceLine(93,0,__PYX_ERR(0, 93, __pyx_L1_error))
-  __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_to_meter, __pyx_v_tgt_crs->proj4_params, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 93, __pyx_L1_error)
+  __pyx_t_5 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_to_meter, __pyx_v_tgt_crs->proj4_params, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 93, __pyx_L1_error)
   __pyx_t_1 = (__pyx_t_5 != 0);
   __pyx_t_4 = __pyx_t_1;
   __pyx_L9_bool_binop_done:;
@@ -3826,7 +3472,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             tgt_crs.proj4_params.get('o_proj', '') in lonlat and
  *            'to_meter' in tgt_crs.proj4_params):
  */
-  __Pyx_TraceLine(91,0,__PYX_ERR(0, 91, __pyx_L1_error))
   if (__pyx_t_4) {
 
     /* "cartopy/_crs.pyx":94
@@ -3836,8 +3481,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         y /= tgt_crs.proj4_params['to_meter']
  * 
  */
-    __Pyx_TraceLine(94,0,__PYX_ERR(0, 94, __pyx_L1_error))
-    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_tgt_crs->proj4_params, __pyx_n_s_to_meter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 94, __pyx_L1_error)
+    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_tgt_crs->proj4_params, __pyx_n_u_to_meter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 94, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_3 = __Pyx_PyNumber_InPlaceDivide(((PyObject *)__pyx_v_x), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 94, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
@@ -3872,8 +3516,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     return status
  */
-    __Pyx_TraceLine(95,0,__PYX_ERR(0, 95, __pyx_L1_error))
-    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_tgt_crs->proj4_params, __pyx_n_s_to_meter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L1_error)
+    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_tgt_crs->proj4_params, __pyx_n_u_to_meter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
     __pyx_t_2 = __Pyx_PyNumber_InPlaceDivide(((PyObject *)__pyx_v_y), __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 95, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
@@ -3917,7 +3560,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  * 
  */
-  __Pyx_TraceLine(97,0,__PYX_ERR(0, 97, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_status); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 97, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
@@ -3957,7 +3599,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_XDECREF((PyObject *)__pyx_v_x);
   __Pyx_XDECREF((PyObject *)__pyx_v_y);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -3982,6 +3623,9 @@ static PyObject *__pyx_pw_7cartopy_4_crs
   PyArrayObject *__pyx_v_x = 0;
   PyArrayObject *__pyx_v_y = 0;
   PyArrayObject *__pyx_v_z = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("_safe_pj_transform_pre_611 (wrapper)", 0);
@@ -4105,7 +3749,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_LocalBuf_ND __pyx_pybuffernd_z;
   __Pyx_Buffer __pyx_pybuffer_z;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   int __pyx_t_2;
@@ -4114,9 +3757,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   Py_ssize_t __pyx_t_5;
   Py_ssize_t __pyx_t_6;
   PyObject *__pyx_t_7 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__8)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("_safe_pj_transform_pre_611", 0);
-  __Pyx_TraceCall("_safe_pj_transform_pre_611", __pyx_f[0], 100, 0, __PYX_ERR(0, 100, __pyx_L1_error));
   __pyx_pybuffer_x.pybuffer.buf = NULL;
   __pyx_pybuffer_x.refcount = 0;
   __pyx_pybuffernd_x.data = NULL;
@@ -4152,7 +3796,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         return pj_transform(src_crs.proj4, tgt_crs.proj4, npts, offset,
  *                             &x[0], &y[0], &z[0])
  */
-  __Pyx_TraceLine(105,0,__PYX_ERR(0, 105, __pyx_L1_error))
   __pyx_t_1 = (((PyObject *)__pyx_v_z) != Py_None);
   __pyx_t_2 = (__pyx_t_1 != 0);
   if (__pyx_t_2) {
@@ -4164,7 +3807,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                             &x[0], &y[0], &z[0])
  *     else:
  */
-    __Pyx_TraceLine(106,0,__PYX_ERR(0, 106, __pyx_L1_error))
     __Pyx_XDECREF(__pyx_r);
 
     /* "cartopy/_crs.pyx":107
@@ -4174,7 +3816,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *     else:
  *         return pj_transform(src_crs.proj4, tgt_crs.proj4, npts, offset,
  */
-    __Pyx_TraceLine(107,0,__PYX_ERR(0, 107, __pyx_L1_error))
     __pyx_t_3 = 0;
     __pyx_t_4 = -1;
     if (__pyx_t_3 < 0) {
@@ -4213,7 +3854,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                             &x[0], &y[0], &z[0])
  *     else:
  */
-    __Pyx_TraceLine(106,0,__PYX_ERR(0, 106, __pyx_L1_error))
     __pyx_t_7 = __Pyx_PyInt_From_int(pj_transform(__pyx_v_src_crs->proj4, __pyx_v_tgt_crs->proj4, __pyx_v_npts, __pyx_v_offset, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_x.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_x.diminfo[0].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_y.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_y.diminfo[0].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_z.rcbuffer->pybuffer.buf, __pyx_t_6, __pyx_pybuffernd_z.diminfo[0].strides))))); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 106, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_7);
     __pyx_r = __pyx_t_7;
@@ -4236,7 +3876,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                             &x[0], &y[0], NULL)
  * 
  */
-  __Pyx_TraceLine(109,0,__PYX_ERR(0, 109, __pyx_L1_error))
   /*else*/ {
     __Pyx_XDECREF(__pyx_r);
 
@@ -4247,7 +3886,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  * 
  */
-    __Pyx_TraceLine(110,0,__PYX_ERR(0, 110, __pyx_L1_error))
     __pyx_t_6 = 0;
     __pyx_t_4 = -1;
     if (__pyx_t_6 < 0) {
@@ -4276,7 +3914,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                             &x[0], &y[0], NULL)
  * 
  */
-    __Pyx_TraceLine(109,0,__PYX_ERR(0, 109, __pyx_L1_error))
     __pyx_t_7 = __Pyx_PyInt_From_int(pj_transform(__pyx_v_src_crs->proj4, __pyx_v_tgt_crs->proj4, __pyx_v_npts, __pyx_v_offset, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_x.rcbuffer->pybuffer.buf, __pyx_t_6, __pyx_pybuffernd_x.diminfo[0].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_y.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_y.diminfo[0].strides))), NULL)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 109, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_7);
     __pyx_r = __pyx_t_7;
@@ -4312,7 +3949,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_z.rcbuffer->pybuffer);
   __pyx_L2:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4327,7 +3963,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_5Globe_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
-static char __pyx_doc_7cartopy_4_crs_5Globe___init__[] = "Globe.__init__(self, datum=None, ellipse='WGS84', semimajor_axis=None, semiminor_axis=None, flattening=None, inverse_flattening=None, towgs84=None, nadgrids=None)\n\n        Parameters\n        ----------\n        datum\n            Proj \"datum\" definition. Defaults to None.\n        ellipse\n            Proj \"ellps\" definition. Defaults to 'WGS84'.\n        semimajor_axis\n            Semimajor axis of the spheroid / ellipsoid.  Defaults to None.\n        semiminor_axis\n            Semiminor axis of the ellipsoid.  Defaults to None.\n        flattening\n            Flattening of the ellipsoid.  Defaults to None.\n        inverse_flattening\n            Inverse flattening of the ellipsoid.  Defaults to None.\n        towgs84\n            Passed through to the Proj definition.  Defaults to None.\n        nadgrids\n            Passed through to the Proj definition.  Defaults to None.\n\n        ";
+static char __pyx_doc_7cartopy_4_crs_5Globe___init__[] = "Globe.__init__(self, datum=None, ellipse=u'WGS84', semimajor_axis=None, semiminor_axis=None, flattening=None, inverse_flattening=None, towgs84=None, nadgrids=None)\n\n        Parameters\n        ----------\n        datum\n            Proj \"datum\" definition. Defaults to None.\n        ellipse\n            Proj \"ellps\" definition. Defaults to 'WGS84'.\n        semimajor_axis\n            Semimajor axis of the spheroid / ellipsoid.  Defaults to None.\n        semiminor_axis\n            Semiminor axis of the ellipsoid.  Defaults to None.\n        flattening\n            Flattening of the ellipsoid.  Defaults to None.\n        inverse_flattening\n            Inverse flattening of the ellipsoid.  Defaults to None.\n        towgs84\n            Passed through to the Proj definition.  Defaults to None.\n        nadgrids\n            Passed through to the Proj definition.  Defaults to None.\n\n        ";
 static PyMethodDef __pyx_mdef_7cartopy_4_crs_5Globe_1__init__ = {"__init__", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cartopy_4_crs_5Globe_1__init__, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cartopy_4_crs_5Globe___init__};
 static PyObject *__pyx_pw_7cartopy_4_crs_5Globe_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
   PyObject *__pyx_v_self = 0;
@@ -4339,6 +3975,9 @@ static PyObject *__pyx_pw_7cartopy_4_crs
   PyObject *__pyx_v_inverse_flattening = 0;
   PyObject *__pyx_v_towgs84 = 0;
   PyObject *__pyx_v_nadgrids = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
@@ -4346,7 +3985,7 @@ static PyObject *__pyx_pw_7cartopy_4_crs
     static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_datum,&__pyx_n_s_ellipse,&__pyx_n_s_semimajor_axis,&__pyx_n_s_semiminor_axis,&__pyx_n_s_flattening,&__pyx_n_s_inverse_flattening,&__pyx_n_s_towgs84,&__pyx_n_s_nadgrids,0};
     PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
     values[1] = ((PyObject *)((PyObject *)Py_None));
-    values[2] = ((PyObject *)((PyObject*)__pyx_n_s_WGS84));
+    values[2] = ((PyObject *)((PyObject*)__pyx_n_u_WGS84));
 
     /* "cartopy/_crs.pyx":125
  *     """
@@ -4517,11 +4156,11 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 
 static PyObject *__pyx_pf_7cartopy_4_crs_5Globe___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_datum, PyObject *__pyx_v_ellipse, PyObject *__pyx_v_semimajor_axis, PyObject *__pyx_v_semiminor_axis, PyObject *__pyx_v_flattening, PyObject *__pyx_v_inverse_flattening, PyObject *__pyx_v_towgs84, PyObject *__pyx_v_nadgrids) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
-  __Pyx_TraceFrameInit(__pyx_codeobj__9)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__init__", 0);
-  __Pyx_TraceCall("__init__", __pyx_f[0], 124, 0, __PYX_ERR(0, 124, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":149
  * 
@@ -4530,7 +4169,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         self.ellipse = ellipse
  *         self.semimajor_axis = semimajor_axis
  */
-  __Pyx_TraceLine(149,0,__PYX_ERR(0, 149, __pyx_L1_error))
   if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_datum, __pyx_v_datum) < 0) __PYX_ERR(0, 149, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":150
@@ -4540,7 +4178,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         self.semimajor_axis = semimajor_axis
  *         self.semiminor_axis = semiminor_axis
  */
-  __Pyx_TraceLine(150,0,__PYX_ERR(0, 150, __pyx_L1_error))
   if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ellipse, __pyx_v_ellipse) < 0) __PYX_ERR(0, 150, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":151
@@ -4550,7 +4187,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         self.semiminor_axis = semiminor_axis
  *         self.flattening = flattening
  */
-  __Pyx_TraceLine(151,0,__PYX_ERR(0, 151, __pyx_L1_error))
   if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_semimajor_axis, __pyx_v_semimajor_axis) < 0) __PYX_ERR(0, 151, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":152
@@ -4560,7 +4196,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         self.flattening = flattening
  *         self.inverse_flattening = inverse_flattening
  */
-  __Pyx_TraceLine(152,0,__PYX_ERR(0, 152, __pyx_L1_error))
   if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_semiminor_axis, __pyx_v_semiminor_axis) < 0) __PYX_ERR(0, 152, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":153
@@ -4570,7 +4205,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         self.inverse_flattening = inverse_flattening
  *         self.towgs84 = towgs84
  */
-  __Pyx_TraceLine(153,0,__PYX_ERR(0, 153, __pyx_L1_error))
   if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_flattening, __pyx_v_flattening) < 0) __PYX_ERR(0, 153, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":154
@@ -4580,7 +4214,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         self.towgs84 = towgs84
  *         self.nadgrids = nadgrids
  */
-  __Pyx_TraceLine(154,0,__PYX_ERR(0, 154, __pyx_L1_error))
   if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_inverse_flattening, __pyx_v_inverse_flattening) < 0) __PYX_ERR(0, 154, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":155
@@ -4590,7 +4223,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         self.nadgrids = nadgrids
  * 
  */
-  __Pyx_TraceLine(155,0,__PYX_ERR(0, 155, __pyx_L1_error))
   if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_towgs84, __pyx_v_towgs84) < 0) __PYX_ERR(0, 155, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":156
@@ -4600,7 +4232,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     def to_proj4_params(self):
  */
-  __Pyx_TraceLine(156,0,__PYX_ERR(0, 156, __pyx_L1_error))
   if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_nadgrids, __pyx_v_nadgrids) < 0) __PYX_ERR(0, 156, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":124
@@ -4619,7 +4250,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_r = NULL;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4660,6 +4290,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_2_genexpr *__pyx_cur_scope;
   PyObject *__pyx_r = NULL;
   __Pyx_RefNannyDeclarations
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("genexpr", 0);
   __pyx_cur_scope = (struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_2_genexpr *)__pyx_tp_new_7cartopy_4_crs___pyx_scope_struct_2_genexpr(__pyx_ptype_7cartopy_4_crs___pyx_scope_struct_2_genexpr, __pyx_empty_tuple, NULL);
   if (unlikely(!__pyx_cur_scope)) {
@@ -4693,7 +4326,6 @@ static PyObject *__pyx_gb_7cartopy_4_crs
 {
   struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_2_genexpr *__pyx_cur_scope = ((struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_2_genexpr *)__pyx_generator->closure);
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   PyObject *__pyx_t_1 = NULL;
   Py_ssize_t __pyx_t_2;
   PyObject *__pyx_t_3 = NULL;
@@ -4703,14 +4335,15 @@ static PyObject *__pyx_gb_7cartopy_4_crs
   PyObject *(*__pyx_t_7)(PyObject *);
   int __pyx_t_8;
   int __pyx_t_9;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("genexpr", 0);
-  __Pyx_TraceCall("genexpr", __pyx_f[0], 168, 0, __PYX_ERR(0, 168, __pyx_L1_error));
   switch (__pyx_generator->resume_label) {
     case 0: goto __pyx_L3_first_run;
     case 1: goto __pyx_L9_resume_from_yield;
     default: /* CPython raises the right error here */
-    __Pyx_TraceReturn(Py_None, 0);
     __Pyx_RefNannyFinishContext();
     return NULL;
   }
@@ -4801,7 +4434,6 @@ static PyObject *__pyx_gb_7cartopy_4_crs
       __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
       __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
       __Pyx_XGIVEREF(__pyx_r);
-      __Pyx_TraceReturn(__pyx_r, 0);
       __Pyx_RefNannyFinishContext();
       __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
       /* return from generator, yielding value */
@@ -4835,7 +4467,6 @@ static PyObject *__pyx_gb_7cartopy_4_crs
   #endif
   __pyx_generator->resume_label = -1;
   __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -4850,8 +4481,8 @@ static PyObject *__pyx_gb_7cartopy_4_crs
 
 static PyObject *__pyx_pf_7cartopy_4_crs_5Globe_2to_proj4_params(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
   struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_1_to_proj4_params *__pyx_cur_scope;
+  PyObject *__pyx_gb_7cartopy_4_crs_5Globe_15to_proj4_params_2generator1 = 0;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
@@ -4862,7 +4493,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   PyObject *__pyx_t_7 = NULL;
   PyObject *__pyx_t_8 = NULL;
   PyObject *__pyx_t_9 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__10)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("to_proj4_params", 0);
   __pyx_cur_scope = (struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_1_to_proj4_params *)__pyx_tp_new_7cartopy_4_crs___pyx_scope_struct_1_to_proj4_params(__pyx_ptype_7cartopy_4_crs___pyx_scope_struct_1_to_proj4_params, __pyx_empty_tuple, NULL);
   if (unlikely(!__pyx_cur_scope)) {
@@ -4872,7 +4505,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   } else {
     __Pyx_GOTREF(__pyx_cur_scope);
   }
-  __Pyx_TraceCall("to_proj4_params", __pyx_f[0], 158, 0, __PYX_ERR(0, 158, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":164
  * 
@@ -4881,14 +4513,13 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                         ['a', self.semimajor_axis], ['b', self.semiminor_axis],
  *                         ['f', self.flattening], ['rf', self.inverse_flattening],
  */
-  __Pyx_TraceLine(164,0,__PYX_ERR(0, 164, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_datum); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 164, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 164, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  __Pyx_INCREF(__pyx_n_s_datum);
-  __Pyx_GIVEREF(__pyx_n_s_datum);
-  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_datum);
+  __Pyx_INCREF(__pyx_n_u_datum);
+  __Pyx_GIVEREF(__pyx_n_u_datum);
+  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_u_datum);
   __Pyx_GIVEREF(__pyx_t_1);
   PyList_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
   __pyx_t_1 = 0;
@@ -4896,9 +4527,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 164, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
-  __Pyx_INCREF(__pyx_n_s_ellps);
-  __Pyx_GIVEREF(__pyx_n_s_ellps);
-  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_ellps);
+  __Pyx_INCREF(__pyx_n_u_ellps);
+  __Pyx_GIVEREF(__pyx_n_u_ellps);
+  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_u_ellps);
   __Pyx_GIVEREF(__pyx_t_1);
   PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
   __pyx_t_1 = 0;
@@ -4910,14 +4541,13 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                         ['f', self.flattening], ['rf', self.inverse_flattening],
  *                         ['towgs84', self.towgs84], ['nadgrids', self.nadgrids])
  */
-  __Pyx_TraceLine(165,0,__PYX_ERR(0, 165, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_semimajor_axis); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 165, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 165, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
-  __Pyx_INCREF(__pyx_n_s_a);
-  __Pyx_GIVEREF(__pyx_n_s_a);
-  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_a);
+  __Pyx_INCREF(__pyx_n_u_a);
+  __Pyx_GIVEREF(__pyx_n_u_a);
+  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_u_a);
   __Pyx_GIVEREF(__pyx_t_1);
   PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
   __pyx_t_1 = 0;
@@ -4925,9 +4555,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 165, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
-  __Pyx_INCREF(__pyx_n_s_b);
-  __Pyx_GIVEREF(__pyx_n_s_b);
-  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_n_s_b);
+  __Pyx_INCREF(__pyx_n_u_b);
+  __Pyx_GIVEREF(__pyx_n_u_b);
+  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_n_u_b);
   __Pyx_GIVEREF(__pyx_t_1);
   PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
   __pyx_t_1 = 0;
@@ -4939,14 +4569,13 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                         ['towgs84', self.towgs84], ['nadgrids', self.nadgrids])
  *         return OrderedDict((k, v) for k, v in proj4_params if v is not None)
  */
-  __Pyx_TraceLine(166,0,__PYX_ERR(0, 166, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_flattening); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_6 = PyList_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 166, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_6);
-  __Pyx_INCREF(__pyx_n_s_f);
-  __Pyx_GIVEREF(__pyx_n_s_f);
-  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_n_s_f);
+  __Pyx_INCREF(__pyx_n_u_f);
+  __Pyx_GIVEREF(__pyx_n_u_f);
+  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_n_u_f);
   __Pyx_GIVEREF(__pyx_t_1);
   PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
   __pyx_t_1 = 0;
@@ -4954,9 +4583,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_7 = PyList_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 166, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_7);
-  __Pyx_INCREF(__pyx_n_s_rf);
-  __Pyx_GIVEREF(__pyx_n_s_rf);
-  PyList_SET_ITEM(__pyx_t_7, 0, __pyx_n_s_rf);
+  __Pyx_INCREF(__pyx_n_u_rf);
+  __Pyx_GIVEREF(__pyx_n_u_rf);
+  PyList_SET_ITEM(__pyx_t_7, 0, __pyx_n_u_rf);
   __Pyx_GIVEREF(__pyx_t_1);
   PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_1);
   __pyx_t_1 = 0;
@@ -4968,14 +4597,13 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         return OrderedDict((k, v) for k, v in proj4_params if v is not None)
  * 
  */
-  __Pyx_TraceLine(167,0,__PYX_ERR(0, 167, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_towgs84); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 167, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_8 = PyList_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 167, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_8);
-  __Pyx_INCREF(__pyx_n_s_towgs84);
-  __Pyx_GIVEREF(__pyx_n_s_towgs84);
-  PyList_SET_ITEM(__pyx_t_8, 0, __pyx_n_s_towgs84);
+  __Pyx_INCREF(__pyx_n_u_towgs84);
+  __Pyx_GIVEREF(__pyx_n_u_towgs84);
+  PyList_SET_ITEM(__pyx_t_8, 0, __pyx_n_u_towgs84);
   __Pyx_GIVEREF(__pyx_t_1);
   PyList_SET_ITEM(__pyx_t_8, 1, __pyx_t_1);
   __pyx_t_1 = 0;
@@ -4983,9 +4611,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_9 = PyList_New(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 167, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_9);
-  __Pyx_INCREF(__pyx_n_s_nadgrids);
-  __Pyx_GIVEREF(__pyx_n_s_nadgrids);
-  PyList_SET_ITEM(__pyx_t_9, 0, __pyx_n_s_nadgrids);
+  __Pyx_INCREF(__pyx_n_u_nadgrids);
+  __Pyx_GIVEREF(__pyx_n_u_nadgrids);
+  PyList_SET_ITEM(__pyx_t_9, 0, __pyx_n_u_nadgrids);
   __Pyx_GIVEREF(__pyx_t_1);
   PyList_SET_ITEM(__pyx_t_9, 1, __pyx_t_1);
   __pyx_t_1 = 0;
@@ -4997,7 +4625,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                         ['a', self.semimajor_axis], ['b', self.semiminor_axis],
  *                         ['f', self.flattening], ['rf', self.inverse_flattening],
  */
-  __Pyx_TraceLine(164,0,__PYX_ERR(0, 164, __pyx_L1_error))
   __pyx_t_1 = PyTuple_New(8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 164, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_GIVEREF(__pyx_t_2);
@@ -5035,7 +4662,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  * 
  */
-  __Pyx_TraceLine(168,0,__PYX_ERR(0, 168, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_OrderedDict); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 168, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_9);
@@ -5083,9 +4709,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_AddTraceback("cartopy._crs.Globe.to_proj4_params", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = NULL;
   __pyx_L0:;
+  __Pyx_XDECREF(__pyx_gb_7cartopy_4_crs_5Globe_15to_proj4_params_2generator1);
   __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -5116,10 +4742,8 @@ static int __pyx_pw_7cartopy_4_crs_3CRS_
 
 static int __pyx_pf_7cartopy_4_crs_3CRS___cinit__(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
   int __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__cinit__", 0);
-  __Pyx_TraceCall("__cinit__", __pyx_f[0], 180, 0, __PYX_ERR(0, 180, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":181
  * 
@@ -5128,7 +4752,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  * 
  *     def __dealloc__(self):
  */
-  __Pyx_TraceLine(181,0,__PYX_ERR(0, 181, __pyx_L1_error))
   __pyx_v_self->proj4 = NULL;
 
   /* "cartopy/_crs.pyx":180
@@ -5141,12 +4764,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
 
   /* function exit code */
   __pyx_r = 0;
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_AddTraceback("cartopy._crs.CRS.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = -1;
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -5171,11 +4788,9 @@ static void __pyx_pw_7cartopy_4_crs_3CRS
 }
 
 static void __pyx_pf_7cartopy_4_crs_3CRS_2__dealloc__(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   __Pyx_RefNannySetupContext("__dealloc__", 0);
-  __Pyx_TraceCall("__dealloc__", __pyx_f[0], 183, 0, __PYX_ERR(0, 183, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":184
  * 
@@ -5184,7 +4799,6 @@ static void __pyx_pf_7cartopy_4_crs_3CRS
  *             pj_free(self.proj4)
  * 
  */
-  __Pyx_TraceLine(184,0,__PYX_ERR(0, 184, __pyx_L1_error))
   __pyx_t_1 = ((__pyx_v_self->proj4 != NULL) != 0);
   if (__pyx_t_1) {
 
@@ -5195,7 +4809,6 @@ static void __pyx_pf_7cartopy_4_crs_3CRS
  * 
  *     def __init__(self, proj4_params, globe=None):
  */
-    __Pyx_TraceLine(185,0,__PYX_ERR(0, 185, __pyx_L1_error))
     pj_free(__pyx_v_self->proj4);
 
     /* "cartopy/_crs.pyx":184
@@ -5216,11 +4829,6 @@ static void __pyx_pf_7cartopy_4_crs_3CRS
  */
 
   /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("cartopy._crs.CRS.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
@@ -5241,6 +4849,9 @@ struct wrapperbase __pyx_wrapperbase_7ca
 static int __pyx_pw_7cartopy_4_crs_3CRS_5__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
   PyObject *__pyx_v_proj4_params = 0;
   PyObject *__pyx_v_globe = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   int __pyx_r;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
@@ -5309,7 +4920,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
   PyObject *__pyx_v_v = NULL;
   PyObject *__pyx_v_proj4_init_bytes = NULL;
   int __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   int __pyx_t_2;
@@ -5321,13 +4931,15 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
   PyObject *__pyx_t_8 = NULL;
   PyObject *__pyx_t_9 = NULL;
   Py_ssize_t __pyx_t_10;
-  PyObject *(*__pyx_t_11)(PyObject *);
-  PyObject *(*__pyx_t_12)(PyObject *);
+  Py_ssize_t __pyx_t_11;
+  int __pyx_t_12;
   int __pyx_t_13;
   int __pyx_t_14;
   char *__pyx_t_15;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__init__", 0);
-  __Pyx_TraceCall("__init__", __pyx_f[0], 187, 0, __PYX_ERR(0, 187, __pyx_L1_error));
   __Pyx_INCREF(__pyx_v_globe);
 
   /* "cartopy/_crs.pyx":203
@@ -5337,7 +4949,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *             if self._handles_ellipses:
  *                 globe = Globe()
  */
-  __Pyx_TraceLine(203,0,__PYX_ERR(0, 203, __pyx_L1_error))
   __pyx_t_1 = (__pyx_v_globe == Py_None);
   __pyx_t_2 = (__pyx_t_1 != 0);
   if (__pyx_t_2) {
@@ -5349,7 +4960,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                 globe = Globe()
  *             else:
  */
-    __Pyx_TraceLine(204,0,__PYX_ERR(0, 204, __pyx_L1_error))
     __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_handles_ellipses); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 204, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
     __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 204, __pyx_L1_error)
@@ -5363,7 +4973,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *             else:
  *                 globe = Globe(semimajor_axis=WGS84_SEMIMAJOR_AXIS,
  */
-      __Pyx_TraceLine(205,0,__PYX_ERR(0, 205, __pyx_L1_error))
       __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_Globe); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 205, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
       __pyx_t_5 = NULL;
@@ -5401,7 +5010,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                               ellipse=None)
  *         if not self._handles_ellipses:
  */
-    __Pyx_TraceLine(207,0,__PYX_ERR(0, 207, __pyx_L1_error))
     /*else*/ {
       __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Globe); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 207, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_3);
@@ -5419,7 +5027,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         if not self._handles_ellipses:
  *             a = globe.semimajor_axis or WGS84_SEMIMAJOR_AXIS
  */
-      __Pyx_TraceLine(208,0,__PYX_ERR(0, 208, __pyx_L1_error))
       if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_ellipse, Py_None) < 0) __PYX_ERR(0, 207, __pyx_L1_error)
 
       /* "cartopy/_crs.pyx":207
@@ -5429,7 +5036,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                               ellipse=None)
  *         if not self._handles_ellipses:
  */
-      __Pyx_TraceLine(207,0,__PYX_ERR(0, 207, __pyx_L1_error))
       __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 207, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_5);
       __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
@@ -5455,7 +5061,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *             a = globe.semimajor_axis or WGS84_SEMIMAJOR_AXIS
  *             b = globe.semiminor_axis or a
  */
-  __Pyx_TraceLine(209,0,__PYX_ERR(0, 209, __pyx_L1_error))
   __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_handles_ellipses); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 209, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 209, __pyx_L1_error)
@@ -5470,7 +5075,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *             b = globe.semiminor_axis or a
  *             if a != b or globe.ellipse is not None:
  */
-    __Pyx_TraceLine(210,0,__PYX_ERR(0, 210, __pyx_L1_error))
     __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_globe, __pyx_n_s_semimajor_axis); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 210, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 210, __pyx_L1_error)
@@ -5498,7 +5102,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *             if a != b or globe.ellipse is not None:
  *                 warnings.warn('The "{}" projection does not handle elliptical '
  */
-    __Pyx_TraceLine(211,0,__PYX_ERR(0, 211, __pyx_L1_error))
     __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_globe, __pyx_n_s_semiminor_axis); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 211, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 211, __pyx_L1_error)
@@ -5523,7 +5126,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                 warnings.warn('The "{}" projection does not handle elliptical '
  *                               'globes.'.format(self.__class__.__name__))
  */
-    __Pyx_TraceLine(212,0,__PYX_ERR(0, 212, __pyx_L1_error))
     __pyx_t_5 = PyObject_RichCompare(__pyx_v_a, __pyx_v_b, Py_NE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 212, __pyx_L1_error)
     __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 212, __pyx_L1_error)
     __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
@@ -5548,7 +5150,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                               'globes.'.format(self.__class__.__name__))
  *         self.globe = globe
  */
-      __Pyx_TraceLine(213,0,__PYX_ERR(0, 213, __pyx_L1_error))
       __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 213, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
       __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 213, __pyx_L1_error)
@@ -5562,8 +5163,7 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         self.globe = globe
  *         self.proj4_params = self.globe.to_proj4_params()
  */
-      __Pyx_TraceLine(214,0,__PYX_ERR(0, 214, __pyx_L1_error))
-      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_The_projection_does_not_handle_e, __pyx_n_s_format); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 214, __pyx_L1_error)
+      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_The_projection_does_not_handle_e, __pyx_n_s_format); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 214, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_7);
       __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 214, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_8);
@@ -5629,7 +5229,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         self.proj4_params = self.globe.to_proj4_params()
  *         self.proj4_params.update(proj4_params)
  */
-  __Pyx_TraceLine(215,0,__PYX_ERR(0, 215, __pyx_L1_error))
   if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_globe, __pyx_v_globe) < 0) __PYX_ERR(0, 215, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":216
@@ -5639,7 +5238,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         self.proj4_params.update(proj4_params)
  * 
  */
-  __Pyx_TraceLine(216,0,__PYX_ERR(0, 216, __pyx_L1_error))
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_globe); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 216, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_to_proj4_params); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 216, __pyx_L1_error)
@@ -5673,7 +5271,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  * 
  *         init_items = []
  */
-  __Pyx_TraceLine(217,0,__PYX_ERR(0, 217, __pyx_L1_error))
   __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->proj4_params, __pyx_n_s_update); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 217, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
   __pyx_t_3 = NULL;
@@ -5700,7 +5297,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         for k, v in self.proj4_params.items():
  *             if v is not None:
  */
-  __Pyx_TraceLine(219,0,__PYX_ERR(0, 219, __pyx_L1_error))
   __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 219, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __pyx_v_init_items = ((PyObject*)__pyx_t_5);
@@ -5713,114 +5309,26 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *             if v is not None:
  *                 if isinstance(v, float):
  */
-  __Pyx_TraceLine(220,0,__PYX_ERR(0, 220, __pyx_L1_error))
-  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->proj4_params, __pyx_n_s_items); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_4);
-  __pyx_t_3 = NULL;
-  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
-    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
-    if (likely(__pyx_t_3)) {
-      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
-      __Pyx_INCREF(__pyx_t_3);
-      __Pyx_INCREF(function);
-      __Pyx_DECREF_SET(__pyx_t_4, function);
-    }
+  __pyx_t_10 = 0;
+  if (unlikely(__pyx_v_self->proj4_params == Py_None)) {
+    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
+    __PYX_ERR(0, 220, __pyx_L1_error)
   }
-  __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
-  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
-  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_5);
-  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-  if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
-    __pyx_t_4 = __pyx_t_5; __Pyx_INCREF(__pyx_t_4); __pyx_t_10 = 0;
-    __pyx_t_11 = NULL;
-  } else {
-    __pyx_t_10 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L1_error)
+  __pyx_t_4 = __Pyx_dict_iterator(__pyx_v_self->proj4_params, 0, __pyx_n_s_items, (&__pyx_t_11), (&__pyx_t_12)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_4);
+  __Pyx_XDECREF(__pyx_t_5);
+  __pyx_t_5 = __pyx_t_4;
+  __pyx_t_4 = 0;
+  while (1) {
+    __pyx_t_13 = __Pyx_dict_iter_next(__pyx_t_5, __pyx_t_11, &__pyx_t_10, &__pyx_t_4, &__pyx_t_3, NULL, __pyx_t_12);
+    if (unlikely(__pyx_t_13 == 0)) break;
+    if (unlikely(__pyx_t_13 == -1)) __PYX_ERR(0, 220, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
-    __pyx_t_11 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 220, __pyx_L1_error)
-  }
-  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-  for (;;) {
-    if (likely(!__pyx_t_11)) {
-      if (likely(PyList_CheckExact(__pyx_t_4))) {
-        if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_4)) break;
-        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-        __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_10); __Pyx_INCREF(__pyx_t_5); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 220, __pyx_L1_error)
-        #else
-        __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L1_error)
-        __Pyx_GOTREF(__pyx_t_5);
-        #endif
-      } else {
-        if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
-        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-        __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_10); __Pyx_INCREF(__pyx_t_5); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 220, __pyx_L1_error)
-        #else
-        __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 220, __pyx_L1_error)
-        __Pyx_GOTREF(__pyx_t_5);
-        #endif
-      }
-    } else {
-      __pyx_t_5 = __pyx_t_11(__pyx_t_4);
-      if (unlikely(!__pyx_t_5)) {
-        PyObject* exc_type = PyErr_Occurred();
-        if (exc_type) {
-          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
-          else __PYX_ERR(0, 220, __pyx_L1_error)
-        }
-        break;
-      }
-      __Pyx_GOTREF(__pyx_t_5);
-    }
-    if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
-      PyObject* sequence = __pyx_t_5;
-      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
-      if (unlikely(size != 2)) {
-        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
-        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
-        __PYX_ERR(0, 220, __pyx_L1_error)
-      }
-      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-      if (likely(PyTuple_CheckExact(sequence))) {
-        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
-        __pyx_t_7 = PyTuple_GET_ITEM(sequence, 1); 
-      } else {
-        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
-        __pyx_t_7 = PyList_GET_ITEM(sequence, 1); 
-      }
-      __Pyx_INCREF(__pyx_t_3);
-      __Pyx_INCREF(__pyx_t_7);
-      #else
-      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 220, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_7 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 220, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_7);
-      #endif
-      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-    } else {
-      Py_ssize_t index = -1;
-      __pyx_t_9 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 220, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_9);
-      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-      __pyx_t_12 = Py_TYPE(__pyx_t_9)->tp_iternext;
-      index = 0; __pyx_t_3 = __pyx_t_12(__pyx_t_9); if (unlikely(!__pyx_t_3)) goto __pyx_L15_unpacking_failed;
-      __Pyx_GOTREF(__pyx_t_3);
-      index = 1; __pyx_t_7 = __pyx_t_12(__pyx_t_9); if (unlikely(!__pyx_t_7)) goto __pyx_L15_unpacking_failed;
-      __Pyx_GOTREF(__pyx_t_7);
-      if (__Pyx_IternextUnpackEndCheck(__pyx_t_12(__pyx_t_9), 2) < 0) __PYX_ERR(0, 220, __pyx_L1_error)
-      __pyx_t_12 = NULL;
-      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
-      goto __pyx_L16_unpacking_done;
-      __pyx_L15_unpacking_failed:;
-      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
-      __pyx_t_12 = NULL;
-      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
-      __PYX_ERR(0, 220, __pyx_L1_error)
-      __pyx_L16_unpacking_done:;
-    }
-    __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_3);
+    __Pyx_GOTREF(__pyx_t_3);
+    __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_4);
+    __pyx_t_4 = 0;
+    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_3);
     __pyx_t_3 = 0;
-    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_7);
-    __pyx_t_7 = 0;
 
     /* "cartopy/_crs.pyx":221
  *         init_items = []
@@ -5829,7 +5337,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                 if isinstance(v, float):
  *                     init_items.append('+{}={:.16}'.format(k, v))
  */
-    __Pyx_TraceLine(221,0,__PYX_ERR(0, 221, __pyx_L1_error))
     __pyx_t_1 = (__pyx_v_v != Py_None);
     __pyx_t_6 = (__pyx_t_1 != 0);
     if (__pyx_t_6) {
@@ -5841,7 +5348,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                     init_items.append('+{}={:.16}'.format(k, v))
  *                 elif isinstance(v, np.float32):
  */
-      __Pyx_TraceLine(222,0,__PYX_ERR(0, 222, __pyx_L1_error))
       __pyx_t_6 = PyFloat_Check(__pyx_v_v); 
       __pyx_t_1 = (__pyx_t_6 != 0);
       if (__pyx_t_1) {
@@ -5853,42 +5359,41 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                 elif isinstance(v, np.float32):
  *                     init_items.append('+{}={:.8}'.format(k, v))
  */
-        __Pyx_TraceLine(223,0,__PYX_ERR(0, 223, __pyx_L1_error))
-        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_16, __pyx_n_s_format); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 223, __pyx_L1_error)
-        __Pyx_GOTREF(__pyx_t_7);
-        __pyx_t_3 = NULL;
+        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_16, __pyx_n_s_format); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 223, __pyx_L1_error)
+        __Pyx_GOTREF(__pyx_t_4);
+        __pyx_t_7 = NULL;
         __pyx_t_13 = 0;
-        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
-          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
-          if (likely(__pyx_t_3)) {
-            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
-            __Pyx_INCREF(__pyx_t_3);
+        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
+          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
+          if (likely(__pyx_t_7)) {
+            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
+            __Pyx_INCREF(__pyx_t_7);
             __Pyx_INCREF(function);
-            __Pyx_DECREF_SET(__pyx_t_7, function);
+            __Pyx_DECREF_SET(__pyx_t_4, function);
             __pyx_t_13 = 1;
           }
         }
         #if CYTHON_FAST_PYCALL
-        if (PyFunction_Check(__pyx_t_7)) {
-          PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_k, __pyx_v_v};
-          __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 223, __pyx_L1_error)
-          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
-          __Pyx_GOTREF(__pyx_t_5);
+        if (PyFunction_Check(__pyx_t_4)) {
+          PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_k, __pyx_v_v};
+          __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
+          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
+          __Pyx_GOTREF(__pyx_t_3);
         } else
         #endif
         #if CYTHON_FAST_PYCCALL
-        if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
-          PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_k, __pyx_v_v};
-          __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 223, __pyx_L1_error)
-          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
-          __Pyx_GOTREF(__pyx_t_5);
+        if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
+          PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_k, __pyx_v_v};
+          __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
+          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
+          __Pyx_GOTREF(__pyx_t_3);
         } else
         #endif
         {
           __pyx_t_9 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 223, __pyx_L1_error)
           __Pyx_GOTREF(__pyx_t_9);
-          if (__pyx_t_3) {
-            __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_3); __pyx_t_3 = NULL;
+          if (__pyx_t_7) {
+            __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
           }
           __Pyx_INCREF(__pyx_v_k);
           __Pyx_GIVEREF(__pyx_v_k);
@@ -5896,13 +5401,13 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
           __Pyx_INCREF(__pyx_v_v);
           __Pyx_GIVEREF(__pyx_v_v);
           PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_13, __pyx_v_v);
-          __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 223, __pyx_L1_error)
-          __Pyx_GOTREF(__pyx_t_5);
+          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_9, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
+          __Pyx_GOTREF(__pyx_t_3);
           __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
         }
-        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
-        __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_init_items, __pyx_t_5); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 223, __pyx_L1_error)
-        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
+        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
+        __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_init_items, __pyx_t_3); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 223, __pyx_L1_error)
+        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
 
         /* "cartopy/_crs.pyx":222
  *         for k, v in self.proj4_params.items():
@@ -5911,7 +5416,7 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                     init_items.append('+{}={:.16}'.format(k, v))
  *                 elif isinstance(v, np.float32):
  */
-        goto __pyx_L18;
+        goto __pyx_L16;
       }
 
       /* "cartopy/_crs.pyx":224
@@ -5921,14 +5426,13 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                     init_items.append('+{}={:.8}'.format(k, v))
  *                 else:
  */
-      __Pyx_TraceLine(224,0,__PYX_ERR(0, 224, __pyx_L1_error))
-      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 224, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_5);
-      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_float32); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 224, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_7);
-      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-      __pyx_t_1 = PyObject_IsInstance(__pyx_v_v, __pyx_t_7); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 224, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
+      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 224, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_3);
+      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_float32); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 224, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_4);
+      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+      __pyx_t_1 = PyObject_IsInstance(__pyx_v_v, __pyx_t_4); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 224, __pyx_L1_error)
+      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
       __pyx_t_6 = (__pyx_t_1 != 0);
       if (__pyx_t_6) {
 
@@ -5939,56 +5443,55 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                 else:
  *                     init_items.append('+{}={}'.format(k, v))
  */
-        __Pyx_TraceLine(225,0,__PYX_ERR(0, 225, __pyx_L1_error))
-        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s_8, __pyx_n_s_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 225, __pyx_L1_error)
-        __Pyx_GOTREF(__pyx_t_5);
+        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_8, __pyx_n_s_format); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 225, __pyx_L1_error)
+        __Pyx_GOTREF(__pyx_t_3);
         __pyx_t_9 = NULL;
         __pyx_t_13 = 0;
-        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
-          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
+        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
+          __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_3);
           if (likely(__pyx_t_9)) {
-            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
+            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
             __Pyx_INCREF(__pyx_t_9);
             __Pyx_INCREF(function);
-            __Pyx_DECREF_SET(__pyx_t_5, function);
+            __Pyx_DECREF_SET(__pyx_t_3, function);
             __pyx_t_13 = 1;
           }
         }
         #if CYTHON_FAST_PYCALL
-        if (PyFunction_Check(__pyx_t_5)) {
+        if (PyFunction_Check(__pyx_t_3)) {
           PyObject *__pyx_temp[3] = {__pyx_t_9, __pyx_v_k, __pyx_v_v};
-          __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 225, __pyx_L1_error)
+          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 225, __pyx_L1_error)
           __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
-          __Pyx_GOTREF(__pyx_t_7);
+          __Pyx_GOTREF(__pyx_t_4);
         } else
         #endif
         #if CYTHON_FAST_PYCCALL
-        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
+        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
           PyObject *__pyx_temp[3] = {__pyx_t_9, __pyx_v_k, __pyx_v_v};
-          __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 225, __pyx_L1_error)
+          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 225, __pyx_L1_error)
           __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
-          __Pyx_GOTREF(__pyx_t_7);
+          __Pyx_GOTREF(__pyx_t_4);
         } else
         #endif
         {
-          __pyx_t_3 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 225, __pyx_L1_error)
-          __Pyx_GOTREF(__pyx_t_3);
+          __pyx_t_7 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 225, __pyx_L1_error)
+          __Pyx_GOTREF(__pyx_t_7);
           if (__pyx_t_9) {
-            __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_9); __pyx_t_9 = NULL;
+            __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_9); __pyx_t_9 = NULL;
           }
           __Pyx_INCREF(__pyx_v_k);
           __Pyx_GIVEREF(__pyx_v_k);
-          PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_13, __pyx_v_k);
+          PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_13, __pyx_v_k);
           __Pyx_INCREF(__pyx_v_v);
           __Pyx_GIVEREF(__pyx_v_v);
-          PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_13, __pyx_v_v);
-          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 225, __pyx_L1_error)
-          __Pyx_GOTREF(__pyx_t_7);
-          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+          PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_13, __pyx_v_v);
+          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 225, __pyx_L1_error)
+          __Pyx_GOTREF(__pyx_t_4);
+          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
         }
-        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-        __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_init_items, __pyx_t_7); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 225, __pyx_L1_error)
-        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
+        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+        __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_init_items, __pyx_t_4); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 225, __pyx_L1_error)
+        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
 
         /* "cartopy/_crs.pyx":224
  *                 if isinstance(v, float):
@@ -5997,7 +5500,7 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                     init_items.append('+{}={:.8}'.format(k, v))
  *                 else:
  */
-        goto __pyx_L18;
+        goto __pyx_L16;
       }
 
       /* "cartopy/_crs.pyx":227
@@ -6007,43 +5510,42 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *             else:
  *                 init_items.append('+{}'.format(k))
  */
-      __Pyx_TraceLine(227,0,__PYX_ERR(0, 227, __pyx_L1_error))
       /*else*/ {
-        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s__11, __pyx_n_s_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 227, __pyx_L1_error)
-        __Pyx_GOTREF(__pyx_t_5);
-        __pyx_t_3 = NULL;
+        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u__6, __pyx_n_s_format); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 227, __pyx_L1_error)
+        __Pyx_GOTREF(__pyx_t_3);
+        __pyx_t_7 = NULL;
         __pyx_t_13 = 0;
-        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
-          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
-          if (likely(__pyx_t_3)) {
-            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
-            __Pyx_INCREF(__pyx_t_3);
+        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
+          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
+          if (likely(__pyx_t_7)) {
+            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
+            __Pyx_INCREF(__pyx_t_7);
             __Pyx_INCREF(function);
-            __Pyx_DECREF_SET(__pyx_t_5, function);
+            __Pyx_DECREF_SET(__pyx_t_3, function);
             __pyx_t_13 = 1;
           }
         }
         #if CYTHON_FAST_PYCALL
-        if (PyFunction_Check(__pyx_t_5)) {
-          PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_k, __pyx_v_v};
-          __pyx_t_7 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 227, __pyx_L1_error)
-          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
-          __Pyx_GOTREF(__pyx_t_7);
+        if (PyFunction_Check(__pyx_t_3)) {
+          PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_k, __pyx_v_v};
+          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 227, __pyx_L1_error)
+          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
+          __Pyx_GOTREF(__pyx_t_4);
         } else
         #endif
         #if CYTHON_FAST_PYCCALL
-        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
-          PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_k, __pyx_v_v};
-          __pyx_t_7 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 227, __pyx_L1_error)
-          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
-          __Pyx_GOTREF(__pyx_t_7);
+        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
+          PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_k, __pyx_v_v};
+          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_13, 2+__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 227, __pyx_L1_error)
+          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
+          __Pyx_GOTREF(__pyx_t_4);
         } else
         #endif
         {
           __pyx_t_9 = PyTuple_New(2+__pyx_t_13); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 227, __pyx_L1_error)
           __Pyx_GOTREF(__pyx_t_9);
-          if (__pyx_t_3) {
-            __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_3); __pyx_t_3 = NULL;
+          if (__pyx_t_7) {
+            __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
           }
           __Pyx_INCREF(__pyx_v_k);
           __Pyx_GIVEREF(__pyx_v_k);
@@ -6051,15 +5553,15 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
           __Pyx_INCREF(__pyx_v_v);
           __Pyx_GIVEREF(__pyx_v_v);
           PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_13, __pyx_v_v);
-          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 227, __pyx_L1_error)
-          __Pyx_GOTREF(__pyx_t_7);
+          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 227, __pyx_L1_error)
+          __Pyx_GOTREF(__pyx_t_4);
           __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
         }
-        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-        __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_init_items, __pyx_t_7); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 227, __pyx_L1_error)
-        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
+        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+        __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_init_items, __pyx_t_4); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 227, __pyx_L1_error)
+        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
       }
-      __pyx_L18:;
+      __pyx_L16:;
 
       /* "cartopy/_crs.pyx":221
  *         init_items = []
@@ -6068,7 +5570,7 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *                 if isinstance(v, float):
  *                     init_items.append('+{}={:.16}'.format(k, v))
  */
-      goto __pyx_L17;
+      goto __pyx_L15;
     }
 
     /* "cartopy/_crs.pyx":229
@@ -6078,40 +5580,30 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         self.proj4_init = ' '.join(init_items) + ' +no_defs'
  *         proj4_init_bytes = six.b(self.proj4_init)
  */
-    __Pyx_TraceLine(229,0,__PYX_ERR(0, 229, __pyx_L1_error))
     /*else*/ {
-      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_kp_s__12, __pyx_n_s_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 229, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_5);
+      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u__7, __pyx_n_s_format); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 229, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_3);
       __pyx_t_9 = NULL;
-      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
-        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
+      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
+        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_3);
         if (likely(__pyx_t_9)) {
-          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
+          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
           __Pyx_INCREF(__pyx_t_9);
           __Pyx_INCREF(function);
-          __Pyx_DECREF_SET(__pyx_t_5, function);
+          __Pyx_DECREF_SET(__pyx_t_3, function);
         }
       }
-      __pyx_t_7 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_9, __pyx_v_k) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_k);
+      __pyx_t_4 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_9, __pyx_v_k) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_k);
       __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
-      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 229, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_7);
-      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-      __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_init_items, __pyx_t_7); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 229, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
+      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 229, __pyx_L1_error)
+      __Pyx_GOTREF(__pyx_t_4);
+      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+      __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_init_items, __pyx_t_4); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 229, __pyx_L1_error)
+      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
     }
-    __pyx_L17:;
-
-    /* "cartopy/_crs.pyx":220
- * 
- *         init_items = []
- *         for k, v in self.proj4_params.items():             # <<<<<<<<<<<<<<
- *             if v is not None:
- *                 if isinstance(v, float):
- */
-    __Pyx_TraceLine(220,0,__PYX_ERR(0, 220, __pyx_L1_error))
+    __pyx_L15:;
   }
-  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
+  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
 
   /* "cartopy/_crs.pyx":230
  *             else:
@@ -6120,17 +5612,16 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         proj4_init_bytes = six.b(self.proj4_init)
  *         if self.proj4 != NULL:
  */
-  __Pyx_TraceLine(230,0,__PYX_ERR(0, 230, __pyx_L1_error))
-  __pyx_t_4 = __Pyx_PyString_Join(__pyx_kp_s__13, __pyx_v_init_items); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 230, __pyx_L1_error)
+  __pyx_t_5 = PyUnicode_Join(__pyx_kp_u__8, __pyx_v_init_items); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 230, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_5);
+  __pyx_t_4 = __Pyx_PyUnicode_Concat(__pyx_t_5, __pyx_kp_u_no_defs); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 230, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
-  __pyx_t_7 = PyNumber_Add(__pyx_t_4, __pyx_kp_s_no_defs); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 230, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_7);
-  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-  __Pyx_GIVEREF(__pyx_t_7);
+  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
+  __Pyx_GIVEREF(__pyx_t_4);
   __Pyx_GOTREF(__pyx_v_self->proj4_init);
   __Pyx_DECREF(__pyx_v_self->proj4_init);
-  __pyx_v_self->proj4_init = __pyx_t_7;
-  __pyx_t_7 = 0;
+  __pyx_v_self->proj4_init = __pyx_t_4;
+  __pyx_t_4 = 0;
 
   /* "cartopy/_crs.pyx":231
  *                 init_items.append('+{}'.format(k))
@@ -6139,29 +5630,28 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         if self.proj4 != NULL:
  *             pj_free(self.proj4)
  */
-  __Pyx_TraceLine(231,0,__PYX_ERR(0, 231, __pyx_L1_error))
-  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_six); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 231, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_4);
-  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_b); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 231, __pyx_L1_error)
+  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_six); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 231, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
-  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-  __pyx_t_4 = NULL;
-  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
-    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
-    if (likely(__pyx_t_4)) {
-      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
-      __Pyx_INCREF(__pyx_t_4);
+  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_b); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 231, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_3);
+  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
+  __pyx_t_5 = NULL;
+  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
+    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
+    if (likely(__pyx_t_5)) {
+      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
+      __Pyx_INCREF(__pyx_t_5);
       __Pyx_INCREF(function);
-      __Pyx_DECREF_SET(__pyx_t_5, function);
+      __Pyx_DECREF_SET(__pyx_t_3, function);
     }
   }
-  __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_v_self->proj4_init) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_self->proj4_init);
-  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
-  if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 231, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_7);
-  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-  __pyx_v_proj4_init_bytes = __pyx_t_7;
-  __pyx_t_7 = 0;
+  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_v_self->proj4_init) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_self->proj4_init);
+  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
+  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 231, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_4);
+  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+  __pyx_v_proj4_init_bytes = __pyx_t_4;
+  __pyx_t_4 = 0;
 
   /* "cartopy/_crs.pyx":232
  *         self.proj4_init = ' '.join(init_items) + ' +no_defs'
@@ -6170,7 +5660,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *             pj_free(self.proj4)
  *         self.proj4 = pj_init_plus(proj4_init_bytes)
  */
-  __Pyx_TraceLine(232,0,__PYX_ERR(0, 232, __pyx_L1_error))
   __pyx_t_6 = ((__pyx_v_self->proj4 != NULL) != 0);
   if (__pyx_t_6) {
 
@@ -6181,7 +5670,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         self.proj4 = pj_init_plus(proj4_init_bytes)
  *         if not self.proj4:
  */
-    __Pyx_TraceLine(233,0,__PYX_ERR(0, 233, __pyx_L1_error))
     pj_free(__pyx_v_self->proj4);
 
     /* "cartopy/_crs.pyx":232
@@ -6200,7 +5688,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *         if not self.proj4:
  *             raise Proj4Error()
  */
-  __Pyx_TraceLine(234,0,__PYX_ERR(0, 234, __pyx_L1_error))
   __pyx_t_15 = __Pyx_PyObject_AsWritableString(__pyx_v_proj4_init_bytes); if (unlikely((!__pyx_t_15) && PyErr_Occurred())) __PYX_ERR(0, 234, __pyx_L1_error)
   __pyx_v_self->proj4 = pj_init_plus(__pyx_t_15);
 
@@ -6211,7 +5698,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  *             raise Proj4Error()
  * 
  */
-  __Pyx_TraceLine(235,0,__PYX_ERR(0, 235, __pyx_L1_error))
   __pyx_t_6 = ((!(__pyx_v_self->proj4 != 0)) != 0);
   if (unlikely(__pyx_t_6)) {
 
@@ -6222,26 +5708,25 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
  * 
  *     # Cython uses this method instead of the normal rich comparisons.
  */
-    __Pyx_TraceLine(236,0,__PYX_ERR(0, 236, __pyx_L1_error))
-    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_Proj4Error); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 236, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_5);
-    __pyx_t_4 = NULL;
-    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
-      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
-      if (likely(__pyx_t_4)) {
-        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
-        __Pyx_INCREF(__pyx_t_4);
+    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Proj4Error); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 236, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_3);
+    __pyx_t_5 = NULL;
+    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
+      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
+      if (likely(__pyx_t_5)) {
+        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
+        __Pyx_INCREF(__pyx_t_5);
         __Pyx_INCREF(function);
-        __Pyx_DECREF_SET(__pyx_t_5, function);
+        __Pyx_DECREF_SET(__pyx_t_3, function);
       }
     }
-    __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
-    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
-    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 236, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_7);
-    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-    __Pyx_Raise(__pyx_t_7, 0, 0, 0);
-    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
+    __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
+    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
+    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 236, __pyx_L1_error)
+    __Pyx_GOTREF(__pyx_t_4);
+    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
+    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
+    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
     __PYX_ERR(0, 236, __pyx_L1_error)
 
     /* "cartopy/_crs.pyx":235
@@ -6281,7 +5766,6 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
   __Pyx_XDECREF(__pyx_v_v);
   __Pyx_XDECREF(__pyx_v_proj4_init_bytes);
   __Pyx_XDECREF(__pyx_v_globe);
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -6298,6 +5782,9 @@ static int __pyx_pf_7cartopy_4_crs_3CRS_
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_7__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_arg_op); /*proto*/
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_7__richcmp__(PyObject *__pyx_v_self, PyObject *__pyx_v_other, int __pyx_arg_op) {
   PyObject *__pyx_v_op = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__richcmp__ (wrapper)", 0);
@@ -6320,14 +5807,15 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_6__richcmp__(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self, PyObject *__pyx_v_other, PyObject *__pyx_v_op) {
   PyObject *__pyx_v_result = NULL;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   int __pyx_t_2;
   PyObject *__pyx_t_3 = NULL;
   PyObject *__pyx_t_4 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__richcmp__", 0);
-  __Pyx_TraceCall("__richcmp__", __pyx_f[0], 239, 0, __PYX_ERR(0, 239, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":243
  *         #   == -> 2
@@ -6336,7 +5824,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         if isinstance(other, CRS):
  *             if op == 2:
  */
-  __Pyx_TraceLine(243,0,__PYX_ERR(0, 243, __pyx_L1_error))
   __Pyx_INCREF(__pyx_builtin_NotImplemented);
   __pyx_v_result = __pyx_builtin_NotImplemented;
 
@@ -6347,7 +5834,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             if op == 2:
  *                 result = self.proj4_init == other.proj4_init
  */
-  __Pyx_TraceLine(244,0,__PYX_ERR(0, 244, __pyx_L1_error))
   __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_other, __pyx_ptype_7cartopy_4_crs_CRS); 
   __pyx_t_2 = (__pyx_t_1 != 0);
   if (__pyx_t_2) {
@@ -6359,7 +5845,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                 result = self.proj4_init == other.proj4_init
  *             elif op == 3:
  */
-    __Pyx_TraceLine(245,0,__PYX_ERR(0, 245, __pyx_L1_error))
     __pyx_t_3 = __Pyx_PyInt_EqObjC(__pyx_v_op, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 245, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
     __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 245, __pyx_L1_error)
@@ -6373,7 +5858,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             elif op == 3:
  *                 result = self.proj4_init != other.proj4_init
  */
-      __Pyx_TraceLine(246,0,__PYX_ERR(0, 246, __pyx_L1_error))
       __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_proj4_init); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 246, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_3);
       __pyx_t_4 = PyObject_RichCompare(__pyx_v_self->proj4_init, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 246, __pyx_L1_error)
@@ -6398,7 +5882,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                 result = self.proj4_init != other.proj4_init
  *         return result
  */
-    __Pyx_TraceLine(247,0,__PYX_ERR(0, 247, __pyx_L1_error))
     __pyx_t_4 = __Pyx_PyInt_EqObjC(__pyx_v_op, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 247, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 247, __pyx_L1_error)
@@ -6412,7 +5895,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         return result
  * 
  */
-      __Pyx_TraceLine(248,0,__PYX_ERR(0, 248, __pyx_L1_error))
       __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_other, __pyx_n_s_proj4_init); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 248, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_4);
       __pyx_t_3 = PyObject_RichCompare(__pyx_v_self->proj4_init, __pyx_t_4, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 248, __pyx_L1_error)
@@ -6446,7 +5928,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     def __hash__(self):
  */
-  __Pyx_TraceLine(249,0,__PYX_ERR(0, 249, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(__pyx_v_result);
   __pyx_r = __pyx_v_result;
@@ -6469,7 +5950,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_L0:;
   __Pyx_XDECREF(__pyx_v_result);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -6501,12 +5981,13 @@ static Py_hash_t __pyx_pw_7cartopy_4_crs
 
 static Py_hash_t __pyx_pf_7cartopy_4_crs_3CRS_8__hash__(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
   Py_hash_t __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   Py_hash_t __pyx_t_2;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__hash__", 0);
-  __Pyx_TraceCall("__hash__", __pyx_f[0], 251, 0, __PYX_ERR(0, 251, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":253
  *     def __hash__(self):
@@ -6515,7 +5996,6 @@ static Py_hash_t __pyx_pf_7cartopy_4_crs
  * 
  *     def __reduce__(self):
  */
-  __Pyx_TraceLine(253,0,__PYX_ERR(0, 253, __pyx_L1_error))
   __pyx_t_1 = __pyx_v_self->proj4_init;
   __Pyx_INCREF(__pyx_t_1);
   __pyx_t_2 = PyObject_Hash(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_hash_t)-1))) __PYX_ERR(0, 253, __pyx_L1_error)
@@ -6538,7 +6018,6 @@ static Py_hash_t __pyx_pf_7cartopy_4_crs
   __pyx_r = -1;
   __pyx_L0:;
   if (unlikely(__pyx_r == -1) && !PyErr_Occurred()) __pyx_r = -2;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -6554,7 +6033,6 @@ static Py_hash_t __pyx_pf_7cartopy_4_crs
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_11__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_10__reduce__[] = "CRS.__reduce__(self)\n\n        Implement the __reduce__ API so that unpickling produces a stateless\n        instance of this class (e.g. an empty tuple). The state will then be\n        added via __getstate__ and __setstate__.\n\n        We are forced to this approach because a CRS does not store\n        the constructor keyword arguments in its state.\n\n        ";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_11__reduce__ = {"__reduce__", (PyCFunction)__pyx_pw_7cartopy_4_crs_3CRS_11__reduce__, METH_NOARGS, __pyx_doc_7cartopy_4_crs_3CRS_10__reduce__};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_11__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -6568,15 +6046,15 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_10__reduce__(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   PyObject *__pyx_t_3 = NULL;
   PyObject *__pyx_t_4 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__14)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__reduce__", 0);
-  __Pyx_TraceCall("__reduce__", __pyx_f[0], 255, 0, __PYX_ERR(0, 255, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":265
  * 
@@ -6585,7 +6063,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     def __getstate__(self):
  */
-  __Pyx_TraceLine(265,0,__PYX_ERR(0, 265, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
@@ -6639,7 +6116,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_r = NULL;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -6655,7 +6131,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_13__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_12__getstate__[] = "CRS.__getstate__(self)\nReturn the full state of this instance for reconstruction\n        in ``__setstate__``.\n\n        ";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_13__getstate__ = {"__getstate__", (PyCFunction)__pyx_pw_7cartopy_4_crs_3CRS_13__getstate__, METH_NOARGS, __pyx_doc_7cartopy_4_crs_3CRS_12__getstate__};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_13__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -6670,14 +6145,14 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_12__getstate__(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
   PyObject *__pyx_v_state = NULL;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   PyObject *__pyx_t_3 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__15)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__getstate__", 0);
-  __Pyx_TraceCall("__getstate__", __pyx_f[0], 267, 0, __PYX_ERR(0, 267, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":272
  * 
@@ -6686,7 +6161,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         # Remove the proj4 instance and the proj4_init string, which can
  *         # be re-created (in __setstate__) from the other arguments.
  */
-  __Pyx_TraceLine(272,0,__PYX_ERR(0, 272, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dict); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 272, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 272, __pyx_L1_error)
@@ -6717,10 +6191,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         state.pop('proj4_init', None)
  *         state['proj4_params'] = self.proj4_params
  */
-  __Pyx_TraceLine(275,0,__PYX_ERR(0, 275, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_state, __pyx_n_s_pop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 275, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
-  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 275, __pyx_L1_error)
+  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 275, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
@@ -6732,10 +6205,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         state['proj4_params'] = self.proj4_params
  *         return state
  */
-  __Pyx_TraceLine(276,0,__PYX_ERR(0, 276, __pyx_L1_error))
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_state, __pyx_n_s_pop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 276, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
-  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 276, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 276, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
@@ -6747,10 +6219,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         return state
  * 
  */
-  __Pyx_TraceLine(277,0,__PYX_ERR(0, 277, __pyx_L1_error))
   __pyx_t_1 = __pyx_v_self->proj4_params;
   __Pyx_INCREF(__pyx_t_1);
-  if (unlikely(PyObject_SetItem(__pyx_v_state, __pyx_n_s_proj4_params, __pyx_t_1) < 0)) __PYX_ERR(0, 277, __pyx_L1_error)
+  if (unlikely(PyObject_SetItem(__pyx_v_state, __pyx_n_u_proj4_params, __pyx_t_1) < 0)) __PYX_ERR(0, 277, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
   /* "cartopy/_crs.pyx":278
@@ -6760,7 +6231,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     def __setstate__(self, state):
  */
-  __Pyx_TraceLine(278,0,__PYX_ERR(0, 278, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(__pyx_v_state);
   __pyx_r = __pyx_v_state;
@@ -6784,7 +6254,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_L0:;
   __Pyx_XDECREF(__pyx_v_state);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -6800,7 +6269,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_15__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_14__setstate__[] = "CRS.__setstate__(self, state)\n\n        Take the dictionary created by ``__getstate__`` and passes it\n        through to this implementation's __init__ method.\n\n        ";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_15__setstate__ = {"__setstate__", (PyCFunction)__pyx_pw_7cartopy_4_crs_3CRS_15__setstate__, METH_O, __pyx_doc_7cartopy_4_crs_3CRS_14__setstate__};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_15__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -6816,7 +6284,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   PyObject *__pyx_v_CRS_state = NULL;
   PyObject *__pyx_8genexpr2__pyx_v_key = NULL;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
@@ -6824,9 +6291,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   PyObject *__pyx_t_4 = NULL;
   PyObject *__pyx_t_5 = NULL;
   PyObject *__pyx_t_6 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__18)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__setstate__", 0);
-  __Pyx_TraceCall("__setstate__", __pyx_f[0], 280, 0, __PYX_ERR(0, 280, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":287
  *         """
@@ -6835,11 +6303,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         # Put everything else directly into the dict of the instance.
  *         self.__dict__.update(state)
  */
-  __Pyx_TraceLine(287,0,__PYX_ERR(0, 287, __pyx_L1_error))
   { /* enter inner scope */
     __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 287, __pyx_L5_error)
     __Pyx_GOTREF(__pyx_t_1);
-    __pyx_t_2 = __pyx_tuple__19; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
+    __pyx_t_2 = __pyx_tuple__11; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
     for (;;) {
       if (__pyx_t_3 >= 2) break;
       #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
@@ -6848,7 +6315,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
       __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 287, __pyx_L5_error)
       __Pyx_GOTREF(__pyx_t_4);
       #endif
-      __Pyx_XDECREF_SET(__pyx_8genexpr2__pyx_v_key, __pyx_t_4);
+      __Pyx_XDECREF_SET(__pyx_8genexpr2__pyx_v_key, ((PyObject*)__pyx_t_4));
       __pyx_t_4 = 0;
       __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_state, __pyx_n_s_pop); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 287, __pyx_L5_error)
       __Pyx_GOTREF(__pyx_t_5);
@@ -6888,7 +6355,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         # Call the init of this class to ensure that the projection is
  *         # properly initialised with proj4.
  */
-  __Pyx_TraceLine(289,0,__PYX_ERR(0, 289, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dict); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 289, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_update); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L1_error)
@@ -6918,7 +6384,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     # TODO
  */
-  __Pyx_TraceLine(292,0,__PYX_ERR(0, 292, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS), __pyx_n_s_init); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 292, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 292, __pyx_L1_error)
@@ -6926,11 +6391,14 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_INCREF(((PyObject *)__pyx_v_self));
   __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
   PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_v_self));
-  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, __pyx_v_CRS_state); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 292, __pyx_L1_error)
+  __pyx_t_2 = PyDict_Copy(__pyx_v_CRS_state); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 292, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
+  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 292, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_5);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
+  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
 
   /* "cartopy/_crs.pyx":280
  *         return state
@@ -6955,7 +6423,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_XDECREF(__pyx_v_CRS_state);
   __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_key);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -6971,9 +6438,11 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_17_as_mpl_transform(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_16_as_mpl_transform[] = "CRS._as_mpl_transform(self, axes=None)\n\n        Cast this CRS instance into a :class:`matplotlib.axes.Axes` using\n        the Matplotlib ``_as_mpl_transform`` interface.\n\n        ";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_17_as_mpl_transform = {"_as_mpl_transform", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cartopy_4_crs_3CRS_17_as_mpl_transform, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cartopy_4_crs_3CRS_16_as_mpl_transform};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_17_as_mpl_transform(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
   PyObject *__pyx_v_axes = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("_as_mpl_transform (wrapper)", 0);
@@ -7029,7 +6498,6 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_16_as_mpl_transform(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self, PyObject *__pyx_v_axes) {
   PyObject *__pyx_v_geoaxes = NULL;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
@@ -7039,9 +6507,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   PyObject *__pyx_t_6 = NULL;
   int __pyx_t_7;
   PyObject *__pyx_t_8 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__20)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("_as_mpl_transform", 0);
-  __Pyx_TraceCall("_as_mpl_transform", __pyx_f[0], 298, 0, __PYX_ERR(0, 298, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":306
  *         # lazy import mpl.geoaxes (and therefore matplotlib) as mpl
@@ -7050,13 +6519,12 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         if not isinstance(axes, geoaxes.GeoAxes):
  *             raise ValueError('Axes should be an instance of GeoAxes, got %s' % type(axes))
  */
-  __Pyx_TraceLine(306,0,__PYX_ERR(0, 306, __pyx_L1_error))
   __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 306, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
-  __Pyx_INCREF(__pyx_n_s__21);
-  __Pyx_GIVEREF(__pyx_n_s__21);
-  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s__21);
-  __pyx_t_2 = __Pyx_Import(__pyx_n_s_cartopy_mpl_geoaxes, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 306, __pyx_L1_error)
+  __Pyx_INCREF(__pyx_n_s__12);
+  __Pyx_GIVEREF(__pyx_n_s__12);
+  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s__12);
+  __pyx_t_2 = __Pyx_Import(__pyx_n_s_cartopy_mpl_geoaxes, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 306, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __pyx_v_geoaxes = __pyx_t_2;
@@ -7069,7 +6537,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             raise ValueError('Axes should be an instance of GeoAxes, got %s' % type(axes))
  *         return geoaxes.InterProjectionTransform(self, axes.projection) + axes.transData
  */
-  __Pyx_TraceLine(307,0,__PYX_ERR(0, 307, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_geoaxes, __pyx_n_s_GeoAxes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 307, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_3 = PyObject_IsInstance(__pyx_v_axes, __pyx_t_2); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(0, 307, __pyx_L1_error)
@@ -7084,8 +6551,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         return geoaxes.InterProjectionTransform(self, axes.projection) + axes.transData
  * 
  */
-    __Pyx_TraceLine(308,0,__PYX_ERR(0, 308, __pyx_L1_error))
-    __pyx_t_2 = __Pyx_PyString_FormatSafe(__pyx_kp_s_Axes_should_be_an_instance_of_Ge, ((PyObject *)Py_TYPE(__pyx_v_axes))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 308, __pyx_L1_error)
+    __pyx_t_2 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_Axes_should_be_an_instance_of_Ge, ((PyObject *)Py_TYPE(__pyx_v_axes))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 308, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 308, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
@@ -7110,7 +6576,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     property proj4_params:
  */
-  __Pyx_TraceLine(309,0,__PYX_ERR(0, 309, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_geoaxes, __pyx_n_s_InterProjectionTransform); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 309, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
@@ -7193,7 +6658,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_L0:;
   __Pyx_XDECREF(__pyx_v_geoaxes);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7221,11 +6685,12 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_12proj4_params___get__(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__get__", 0);
-  __Pyx_TraceCall("__get__", __pyx_f[0], 312, 0, __PYX_ERR(0, 312, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":313
  *     property proj4_params:
@@ -7234,7 +6699,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     def as_geocentric(self):
  */
-  __Pyx_TraceLine(313,0,__PYX_ERR(0, 313, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyDict_Type)), __pyx_v_self->proj4_params); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 313, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
@@ -7257,7 +6721,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_r = NULL;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7273,7 +6736,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_19as_geocentric(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_18as_geocentric[] = "CRS.as_geocentric(self)\n\n        Return a new Geocentric CRS with the same ellipse/datum as this\n        CRS.\n\n        ";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_19as_geocentric = {"as_geocentric", (PyCFunction)__pyx_pw_7cartopy_4_crs_3CRS_19as_geocentric, METH_NOARGS, __pyx_doc_7cartopy_4_crs_3CRS_18as_geocentric};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_19as_geocentric(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -7287,15 +6749,15 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_18as_geocentric(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   PyObject *__pyx_t_3 = NULL;
   PyObject *__pyx_t_4 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__22)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("as_geocentric", 0);
-  __Pyx_TraceCall("as_geocentric", __pyx_f[0], 315, 0, __PYX_ERR(0, 315, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":321
  * 
@@ -7304,7 +6766,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     def as_geodetic(self):
  */
-  __Pyx_TraceLine(321,0,__PYX_ERR(0, 321, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Geocentric); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 321, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
@@ -7348,7 +6809,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_r = NULL;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7364,7 +6824,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_21as_geodetic(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_20as_geodetic[] = "CRS.as_geodetic(self)\n\n        Return a new Geodetic CRS with the same ellipse/datum as this\n        CRS.\n\n        ";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_21as_geodetic = {"as_geodetic", (PyCFunction)__pyx_pw_7cartopy_4_crs_3CRS_21as_geodetic, METH_NOARGS, __pyx_doc_7cartopy_4_crs_3CRS_20as_geodetic};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_21as_geodetic(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -7378,15 +6837,15 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_20as_geodetic(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   PyObject *__pyx_t_3 = NULL;
   PyObject *__pyx_t_4 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__23)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("as_geodetic", 0);
-  __Pyx_TraceCall("as_geodetic", __pyx_f[0], 323, 0, __PYX_ERR(0, 323, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":329
  * 
@@ -7395,7 +6854,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     cpdef is_geodetic(self):
  */
-  __Pyx_TraceLine(329,0,__PYX_ERR(0, 329, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Geodetic); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 329, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
@@ -7439,7 +6897,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_r = NULL;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7455,16 +6912,16 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_23is_geodetic(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static PyObject *__pyx_f_7cartopy_4_crs_3CRS_is_geodetic(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self, int __pyx_skip_dispatch) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   PyObject *__pyx_t_3 = NULL;
   PyObject *__pyx_t_4 = NULL;
   int __pyx_t_5;
-  __Pyx_TraceFrameInit(__pyx_codeobj__24)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("is_geodetic", 0);
-  __Pyx_TraceCall("is_geodetic", __pyx_f[0], 331, 0, __PYX_ERR(0, 331, __pyx_L1_error));
   /* Check if called by wrapper */
   if (unlikely(__pyx_skip_dispatch)) ;
   /* Check if overridden in Python */
@@ -7519,7 +6976,6 @@ static PyObject *__pyx_f_7cartopy_4_crs_
  * 
  *     def transform_point(self, double x, double y, CRS src_crs not None, trap=True):
  */
-  __Pyx_TraceLine(332,0,__PYX_ERR(0, 332, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __pyx_t_1 = __Pyx_PyInt_From_int(pj_is_latlong(__pyx_v_self->proj4)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 332, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
@@ -7549,7 +7005,6 @@ static PyObject *__pyx_f_7cartopy_4_crs_
   __pyx_r = 0;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7557,7 +7012,6 @@ static PyObject *__pyx_f_7cartopy_4_crs_
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_23is_geodetic(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_22is_geodetic[] = "CRS.is_geodetic(self)";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_23is_geodetic = {"is_geodetic", (PyCFunction)__pyx_pw_7cartopy_4_crs_3CRS_23is_geodetic, METH_NOARGS, __pyx_doc_7cartopy_4_crs_3CRS_22is_geodetic};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_23is_geodetic(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
@@ -7571,12 +7025,12 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_22is_geodetic(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__24)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("is_geodetic", 0);
-  __Pyx_TraceCall("is_geodetic (wrapper)", __pyx_f[0], 331, 0, __PYX_ERR(0, 331, __pyx_L1_error));
   __Pyx_XDECREF(__pyx_r);
   __pyx_t_1 = __pyx_f_7cartopy_4_crs_3CRS_is_geodetic(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 331, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
@@ -7591,7 +7045,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __pyx_r = NULL;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -7607,12 +7060,14 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_25transform_point(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_24transform_point[] = "CRS.transform_point(self, double x, double y, CRS src_crs, trap=True)\n\n        transform_point(x, y, src_crs)\n\n        Transform the given float64 coordinate pair, in the given source\n        coordinate system (``src_crs``), to this coordinate system.\n\n        Parameters\n        ----------\n        x\n            the x coordinate, in ``src_crs`` coordinates, to transform\n        y\n            the y coordinate, in ``src_crs`` coordinates, to transform\n        src_crs\n            instance of :class:`CRS` that represents the coordinate\n            system of ``x`` and ``y``.\n        trap\n            Whether proj errors for \"latitude or longitude exceeded limits\" and\n            \"tolerance condition error\" should be trapped.\n\n        Returns\n        -------\n        (x, y) in this coordinate system\n\n        ";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_25transform_point = {"transform_point", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cartopy_4_crs_3CRS_25transform_point, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cartopy_4_crs_3CRS_24transform_point};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_25transform_point(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
   double __pyx_v_x;
   double __pyx_v_y;
   struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_src_crs = 0;
   PyObject *__pyx_v_trap = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("transform_point (wrapper)", 0);
@@ -7707,7 +7162,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_LocalBuf_ND __pyx_pybuffernd_cy;
   __Pyx_Buffer __pyx_pybuffer_cy;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
@@ -7722,11 +7176,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   int __pyx_t_11;
   __pyx_t_5numpy_double_t __pyx_t_12;
   Py_ssize_t __pyx_t_13;
-  Py_ssize_t __pyx_t_14;
-  Py_ssize_t __pyx_t_15;
-  __Pyx_TraceFrameInit(__pyx_codeobj__25)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("transform_point", 0);
-  __Pyx_TraceCall("transform_point", __pyx_f[0], 334, 0, __PYX_ERR(0, 334, __pyx_L1_error));
   __pyx_pybuffer_cx.pybuffer.buf = NULL;
   __pyx_pybuffer_cx.refcount = 0;
   __pyx_pybuffernd_cx.data = NULL;
@@ -7743,7 +7196,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         cy = np.array([y])
  *         if src_crs.is_geodetic():
  */
-  __Pyx_TraceLine(362,0,__PYX_ERR(0, 362, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 362, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 362, __pyx_L1_error)
@@ -7802,7 +7254,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         if src_crs.is_geodetic():
  *             cx *= DEG_TO_RAD
  */
-  __Pyx_TraceLine(363,0,__PYX_ERR(0, 363, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 363, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 363, __pyx_L1_error)
@@ -7861,7 +7312,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             cx *= DEG_TO_RAD
  *             cy *= DEG_TO_RAD
  */
-  __Pyx_TraceLine(364,0,__PYX_ERR(0, 364, __pyx_L1_error))
   __pyx_t_1 = ((struct __pyx_vtabstruct_7cartopy_4_crs_CRS *)__pyx_v_src_crs->__pyx_vtab)->is_geodetic(__pyx_v_src_crs, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 364, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 364, __pyx_L1_error)
@@ -7875,7 +7325,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             cy *= DEG_TO_RAD
  *         status = _safe_pj_transform(src_crs, self, 1, 1, cx, cy, None)
  */
-    __Pyx_TraceLine(365,0,__PYX_ERR(0, 365, __pyx_L1_error))
     __pyx_t_1 = PyFloat_FromDouble(DEG_TO_RAD); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 365, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __pyx_t_4 = PyNumber_InPlaceMultiply(((PyObject *)__pyx_v_cx), __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 365, __pyx_L1_error)
@@ -7911,7 +7360,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         status = _safe_pj_transform(src_crs, self, 1, 1, cx, cy, None)
  * 
  */
-    __Pyx_TraceLine(366,0,__PYX_ERR(0, 366, __pyx_L1_error))
     __pyx_t_4 = PyFloat_FromDouble(DEG_TO_RAD); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 366, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     __pyx_t_1 = PyNumber_InPlaceMultiply(((PyObject *)__pyx_v_cy), __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 366, __pyx_L1_error)
@@ -7956,7 +7404,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *         if trap and status == -14 or status == -20:
  */
-  __Pyx_TraceLine(367,0,__PYX_ERR(0, 367, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_safe_pj_transform); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 367, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
   __pyx_t_2 = NULL;
@@ -8030,7 +7477,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             # -14 => "latitude or longitude exceeded limits"
  *             # -20 => "tolerance condition error"
  */
-  __Pyx_TraceLine(369,0,__PYX_ERR(0, 369, __pyx_L1_error))
   __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_v_trap); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 369, __pyx_L1_error)
   if (!__pyx_t_11) {
     goto __pyx_L6_next_or;
@@ -8055,7 +7501,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         elif trap and status != 0:
  *             raise Proj4Error()
  */
-    __Pyx_TraceLine(372,0,__PYX_ERR(0, 372, __pyx_L1_error))
     __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_nan); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 372, __pyx_L1_error)
@@ -8074,17 +7519,17 @@ static PyObject *__pyx_pf_7cartopy_4_crs
       __PYX_ERR(0, 372, __pyx_L1_error)
     }
     *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_cx.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_cx.diminfo[0].strides) = __pyx_t_12;
-    __pyx_t_14 = 0;
+    __pyx_t_13 = 0;
     __pyx_t_6 = -1;
-    if (__pyx_t_14 < 0) {
-      __pyx_t_14 += __pyx_pybuffernd_cy.diminfo[0].shape;
-      if (unlikely(__pyx_t_14 < 0)) __pyx_t_6 = 0;
-    } else if (unlikely(__pyx_t_14 >= __pyx_pybuffernd_cy.diminfo[0].shape)) __pyx_t_6 = 0;
+    if (__pyx_t_13 < 0) {
+      __pyx_t_13 += __pyx_pybuffernd_cy.diminfo[0].shape;
+      if (unlikely(__pyx_t_13 < 0)) __pyx_t_6 = 0;
+    } else if (unlikely(__pyx_t_13 >= __pyx_pybuffernd_cy.diminfo[0].shape)) __pyx_t_6 = 0;
     if (unlikely(__pyx_t_6 != -1)) {
       __Pyx_RaiseBufferIndexError(__pyx_t_6);
       __PYX_ERR(0, 372, __pyx_L1_error)
     }
-    *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_cy.rcbuffer->pybuffer.buf, __pyx_t_14, __pyx_pybuffernd_cy.diminfo[0].strides) = __pyx_t_12;
+    *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_cy.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_cy.diminfo[0].strides) = __pyx_t_12;
 
     /* "cartopy/_crs.pyx":369
  *         status = _safe_pj_transform(src_crs, self, 1, 1, cx, cy, None)
@@ -8103,7 +7548,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             raise Proj4Error()
  * 
  */
-  __Pyx_TraceLine(373,0,__PYX_ERR(0, 373, __pyx_L1_error))
   __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_v_trap); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 373, __pyx_L1_error)
   if (__pyx_t_11) {
   } else {
@@ -8122,7 +7566,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *         if self.is_geodetic():
  */
-    __Pyx_TraceLine(374,0,__PYX_ERR(0, 374, __pyx_L1_error))
     __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Proj4Error); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 374, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __pyx_t_3 = NULL;
@@ -8161,7 +7604,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             cx *= RAD_TO_DEG
  *             cy *= RAD_TO_DEG
  */
-  __Pyx_TraceLine(376,0,__PYX_ERR(0, 376, __pyx_L1_error))
   __pyx_t_4 = ((struct __pyx_vtabstruct_7cartopy_4_crs_CRS *)__pyx_v_self->__pyx_vtab)->is_geodetic(__pyx_v_self, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 376, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
   __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 376, __pyx_L1_error)
@@ -8175,7 +7617,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             cy *= RAD_TO_DEG
  *         return (cx[0], cy[0])
  */
-    __Pyx_TraceLine(377,0,__PYX_ERR(0, 377, __pyx_L1_error))
     __pyx_t_4 = PyFloat_FromDouble(RAD_TO_DEG); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 377, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     __pyx_t_1 = PyNumber_InPlaceMultiply(((PyObject *)__pyx_v_cx), __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 377, __pyx_L1_error)
@@ -8211,7 +7652,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         return (cx[0], cy[0])
  * 
  */
-    __Pyx_TraceLine(378,0,__PYX_ERR(0, 378, __pyx_L1_error))
     __pyx_t_1 = PyFloat_FromDouble(RAD_TO_DEG); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 378, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __pyx_t_4 = PyNumber_InPlaceMultiply(((PyObject *)__pyx_v_cy), __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 378, __pyx_L1_error)
@@ -8256,31 +7696,30 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     def transform_points(self, CRS src_crs not None,
  */
-  __Pyx_TraceLine(379,0,__PYX_ERR(0, 379, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
-  __pyx_t_15 = 0;
+  __pyx_t_13 = 0;
   __pyx_t_6 = -1;
-  if (__pyx_t_15 < 0) {
-    __pyx_t_15 += __pyx_pybuffernd_cx.diminfo[0].shape;
-    if (unlikely(__pyx_t_15 < 0)) __pyx_t_6 = 0;
-  } else if (unlikely(__pyx_t_15 >= __pyx_pybuffernd_cx.diminfo[0].shape)) __pyx_t_6 = 0;
+  if (__pyx_t_13 < 0) {
+    __pyx_t_13 += __pyx_pybuffernd_cx.diminfo[0].shape;
+    if (unlikely(__pyx_t_13 < 0)) __pyx_t_6 = 0;
+  } else if (unlikely(__pyx_t_13 >= __pyx_pybuffernd_cx.diminfo[0].shape)) __pyx_t_6 = 0;
   if (unlikely(__pyx_t_6 != -1)) {
     __Pyx_RaiseBufferIndexError(__pyx_t_6);
     __PYX_ERR(0, 379, __pyx_L1_error)
   }
-  __pyx_t_4 = PyFloat_FromDouble((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_cx.rcbuffer->pybuffer.buf, __pyx_t_15, __pyx_pybuffernd_cx.diminfo[0].strides))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 379, __pyx_L1_error)
+  __pyx_t_4 = PyFloat_FromDouble((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_cx.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_cx.diminfo[0].strides))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 379, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
-  __pyx_t_15 = 0;
+  __pyx_t_13 = 0;
   __pyx_t_6 = -1;
-  if (__pyx_t_15 < 0) {
-    __pyx_t_15 += __pyx_pybuffernd_cy.diminfo[0].shape;
-    if (unlikely(__pyx_t_15 < 0)) __pyx_t_6 = 0;
-  } else if (unlikely(__pyx_t_15 >= __pyx_pybuffernd_cy.diminfo[0].shape)) __pyx_t_6 = 0;
+  if (__pyx_t_13 < 0) {
+    __pyx_t_13 += __pyx_pybuffernd_cy.diminfo[0].shape;
+    if (unlikely(__pyx_t_13 < 0)) __pyx_t_6 = 0;
+  } else if (unlikely(__pyx_t_13 >= __pyx_pybuffernd_cy.diminfo[0].shape)) __pyx_t_6 = 0;
   if (unlikely(__pyx_t_6 != -1)) {
     __Pyx_RaiseBufferIndexError(__pyx_t_6);
     __PYX_ERR(0, 379, __pyx_L1_error)
   }
-  __pyx_t_1 = PyFloat_FromDouble((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_cy.rcbuffer->pybuffer.buf, __pyx_t_15, __pyx_pybuffernd_cy.diminfo[0].strides))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 379, __pyx_L1_error)
+  __pyx_t_1 = PyFloat_FromDouble((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_cy.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_cy.diminfo[0].strides))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 379, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 379, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
@@ -8325,7 +7764,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_XDECREF((PyObject *)__pyx_v_cx);
   __Pyx_XDECREF((PyObject *)__pyx_v_cy);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -8341,12 +7779,14 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_27transform_points(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_26transform_points[] = "CRS.transform_points(self, CRS src_crs, ndarray x, ndarray y, ndarray z=None)\n\n        transform_points(src_crs, x, y[, z])\n\n        Transform the given coordinates, in the given source\n        coordinate system (``src_crs``), to this coordinate system.\n\n        Parameters\n        ----------\n        src_crs\n            instance of :class:`CRS` that represents the\n            coordinate system of ``x``, ``y`` and ``z``.\n        x\n            the x coordinates (array), in ``src_crs`` coordinates,\n            to transform.  May be 1 or 2 dimensional.\n        y\n            the y coordinates (array), in ``src_crs`` coordinates,\n            to transform.  Its shape must match that of x.\n        z: optional\n            the z coordinates (array), in ``src_crs`` coordinates, to\n            transform.  Defaults to None.\n            If supplied, its shape must match that of x.\n\n        Returns\n        -------\n            Array of shape ``x.shape + (3, )`` in this coordinate system.\n\n        ";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_27transform_points = {"transform_points", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cartopy_4_crs_3CRS_27transform_points, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cartopy_4_crs_3CRS_26transform_points};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_27transform_points(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
   struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_src_crs = 0;
   PyArrayObject *__pyx_v_x = 0;
   PyArrayObject *__pyx_v_y = 0;
   PyArrayObject *__pyx_v_z = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("transform_points (wrapper)", 0);
@@ -8464,6 +7904,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_4_genexpr *__pyx_cur_scope;
   PyObject *__pyx_r = NULL;
   __Pyx_RefNannyDeclarations
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("genexpr", 0);
   __pyx_cur_scope = (struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_4_genexpr *)__pyx_tp_new_7cartopy_4_crs___pyx_scope_struct_4_genexpr(__pyx_ptype_7cartopy_4_crs___pyx_scope_struct_4_genexpr, __pyx_empty_tuple, NULL);
   if (unlikely(!__pyx_cur_scope)) {
@@ -8497,19 +7940,19 @@ static PyObject *__pyx_gb_7cartopy_4_crs
 {
   struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_4_genexpr *__pyx_cur_scope = ((struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_4_genexpr *)__pyx_generator->closure);
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   int __pyx_t_1;
   int __pyx_t_2;
   int __pyx_t_3;
   PyObject *__pyx_t_4 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("genexpr", 0);
-  __Pyx_TraceCall("genexpr", __pyx_f[0], 414, 0, __PYX_ERR(0, 414, __pyx_L1_error));
   switch (__pyx_generator->resume_label) {
     case 0: goto __pyx_L3_first_run;
     case 1: goto __pyx_L6_resume_from_yield;
     default: /* CPython raises the right error here */
-    __Pyx_TraceReturn(Py_None, 0);
     __Pyx_RefNannyFinishContext();
     return NULL;
   }
@@ -8529,7 +7972,6 @@ static PyObject *__pyx_gb_7cartopy_4_crs
     __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
     __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
     __Pyx_XGIVEREF(__pyx_r);
-    __Pyx_TraceReturn(__pyx_r, 0);
     __Pyx_RefNannyFinishContext();
     __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
     /* return from generator, yielding value */
@@ -8556,7 +7998,6 @@ static PyObject *__pyx_gb_7cartopy_4_crs
   #endif
   __pyx_generator->resume_label = -1;
   __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -8575,10 +8016,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   PyObject *__pyx_v_result_shape = NULL;
   npy_intp __pyx_v_npts;
   CYTHON_UNUSED PyObject *__pyx_v_status = NULL;
+  PyObject *__pyx_gb_7cartopy_4_crs_3CRS_16transform_points_2generator2 = 0;
   __Pyx_LocalBuf_ND __pyx_pybuffernd_result;
   __Pyx_Buffer __pyx_pybuffer_result;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
@@ -8596,7 +8037,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   PyObject *__pyx_t_14 = NULL;
   PyObject *__pyx_t_15 = NULL;
   Py_ssize_t __pyx_t_16;
-  __Pyx_TraceFrameInit(__pyx_codeobj__26)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("transform_points", 0);
   __pyx_cur_scope = (struct __pyx_obj_7cartopy_4_crs___pyx_scope_struct_3_transform_points *)__pyx_tp_new_7cartopy_4_crs___pyx_scope_struct_3_transform_points(__pyx_ptype_7cartopy_4_crs___pyx_scope_struct_3_transform_points, __pyx_empty_tuple, NULL);
   if (unlikely(!__pyx_cur_scope)) {
@@ -8606,7 +8049,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   } else {
     __Pyx_GOTREF(__pyx_cur_scope);
   }
-  __Pyx_TraceCall("transform_points", __pyx_f[0], 381, 0, __PYX_ERR(0, 381, __pyx_L1_error));
   __pyx_cur_scope->__pyx_v_x = __pyx_v_x;
   __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_x);
   __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_x);
@@ -8624,13 +8066,12 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *         if z is None:
  */
-  __Pyx_TraceLine(414,0,__PYX_ERR(0, 414, __pyx_L1_error))
   __pyx_t_1 = __pyx_pf_7cartopy_4_crs_3CRS_16transform_points_genexpr(((PyObject*)__pyx_cur_scope)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_2 = __Pyx_PySequence_Tuple(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 414, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_tuple__27); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
+  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_tuple__13); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 414, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
   __pyx_v_result_shape = __pyx_t_1;
@@ -8643,7 +8084,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             if x.ndim > 2 or y.ndim > 2:
  *                 raise ValueError('x and y arrays must be 1 or 2 dimensional')
  */
-  __Pyx_TraceLine(416,0,__PYX_ERR(0, 416, __pyx_L1_error))
   __pyx_t_3 = (((PyObject *)__pyx_v_z) == Py_None);
   __pyx_t_4 = (__pyx_t_3 != 0);
   if (__pyx_t_4) {
@@ -8655,7 +8095,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                 raise ValueError('x and y arrays must be 1 or 2 dimensional')
  *             elif x.ndim != 1 or y.ndim != 1:
  */
-    __Pyx_TraceLine(417,0,__PYX_ERR(0, 417, __pyx_L1_error))
     __pyx_t_3 = ((__pyx_cur_scope->__pyx_v_x->nd > 2) != 0);
     if (!__pyx_t_3) {
     } else {
@@ -8674,8 +8113,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             elif x.ndim != 1 or y.ndim != 1:
  *                 x, y = x.flatten(), y.flatten()
  */
-      __Pyx_TraceLine(418,0,__PYX_ERR(0, 418, __pyx_L1_error))
-      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 418, __pyx_L1_error)
+      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 418, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_1);
       __Pyx_Raise(__pyx_t_1, 0, 0, 0);
       __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
@@ -8697,7 +8135,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                 x, y = x.flatten(), y.flatten()
  * 
  */
-    __Pyx_TraceLine(419,0,__PYX_ERR(0, 419, __pyx_L1_error))
     __pyx_t_3 = ((__pyx_cur_scope->__pyx_v_x->nd != 1) != 0);
     if (!__pyx_t_3) {
     } else {
@@ -8716,7 +8153,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *             if x.shape[0] != y.shape[0]:
  */
-      __Pyx_TraceLine(420,0,__PYX_ERR(0, 420, __pyx_L1_error))
       __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_x), __pyx_n_s_flatten); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 420, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_2);
       __pyx_t_5 = NULL;
@@ -8776,7 +8212,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                 raise ValueError('x and y arrays must have the same length')
  *         else:
  */
-    __Pyx_TraceLine(422,0,__PYX_ERR(0, 422, __pyx_L1_error))
     __pyx_t_4 = (((__pyx_cur_scope->__pyx_v_x->dimensions[0]) != (__pyx_v_y->dimensions[0])) != 0);
     if (unlikely(__pyx_t_4)) {
 
@@ -8787,8 +8222,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         else:
  *             if x.ndim > 2 or y.ndim > 2 or z.ndim > 2:
  */
-      __Pyx_TraceLine(423,0,__PYX_ERR(0, 423, __pyx_L1_error))
-      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
+      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 423, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_2);
       __Pyx_Raise(__pyx_t_2, 0, 0, 0);
       __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -8820,7 +8254,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                 raise ValueError('x, y and z arrays must be 1 or 2 '
  *                                  'dimensional')
  */
-  __Pyx_TraceLine(425,0,__PYX_ERR(0, 425, __pyx_L1_error))
   /*else*/ {
     __pyx_t_3 = ((__pyx_cur_scope->__pyx_v_x->nd > 2) != 0);
     if (!__pyx_t_3) {
@@ -8846,8 +8279,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                                  'dimensional')
  *             elif x.ndim != 1 or y.ndim != 1 or z.ndim != 1:
  */
-      __Pyx_TraceLine(426,0,__PYX_ERR(0, 426, __pyx_L1_error))
-      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 426, __pyx_L1_error)
+      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 426, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_2);
       __Pyx_Raise(__pyx_t_2, 0, 0, 0);
       __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -8869,7 +8301,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                 x, y, z = x.flatten(), y.flatten(), z.flatten()
  * 
  */
-    __Pyx_TraceLine(428,0,__PYX_ERR(0, 428, __pyx_L1_error))
     __pyx_t_3 = ((__pyx_cur_scope->__pyx_v_x->nd != 1) != 0);
     if (!__pyx_t_3) {
     } else {
@@ -8894,7 +8325,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *             if not x.shape[0] == y.shape[0] == z.shape[0]:
  */
-      __Pyx_TraceLine(429,0,__PYX_ERR(0, 429, __pyx_L1_error))
       __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_x), __pyx_n_s_flatten); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 429, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_1);
       __pyx_t_5 = NULL;
@@ -8974,7 +8404,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                 raise ValueError('x, y, and z arrays must have the same '
  *                                  'length')
  */
-    __Pyx_TraceLine(431,0,__PYX_ERR(0, 431, __pyx_L1_error))
     __pyx_t_4 = ((__pyx_cur_scope->__pyx_v_x->dimensions[0]) == (__pyx_v_y->dimensions[0]));
     if (__pyx_t_4) {
       __pyx_t_4 = ((__pyx_v_y->dimensions[0]) == (__pyx_v_z->dimensions[0]));
@@ -8989,8 +8418,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                                  'length')
  * 
  */
-      __Pyx_TraceLine(432,0,__PYX_ERR(0, 432, __pyx_L1_error))
-      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 432, __pyx_L1_error)
+      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 432, __pyx_L1_error)
       __Pyx_GOTREF(__pyx_t_5);
       __Pyx_Raise(__pyx_t_5, 0, 0, 0);
       __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
@@ -9014,7 +8442,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *         result = np.empty([npts, 3], dtype=np.double)
  */
-  __Pyx_TraceLine(435,0,__PYX_ERR(0, 435, __pyx_L1_error))
   __pyx_v_npts = (__pyx_cur_scope->__pyx_v_x->dimensions[0]);
 
   /* "cartopy/_crs.pyx":437
@@ -9024,7 +8451,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         if src_crs.is_geodetic():
  *             result[:, 0] = np.deg2rad(x)
  */
-  __Pyx_TraceLine(437,0,__PYX_ERR(0, 437, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 437, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_empty); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 437, __pyx_L1_error)
@@ -9089,7 +8515,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             result[:, 0] = np.deg2rad(x)
  *             result[:, 1] = np.deg2rad(y)
  */
-  __Pyx_TraceLine(438,0,__PYX_ERR(0, 438, __pyx_L1_error))
   __pyx_t_7 = ((struct __pyx_vtabstruct_7cartopy_4_crs_CRS *)__pyx_v_src_crs->__pyx_vtab)->is_geodetic(__pyx_v_src_crs, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 438, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_7);
   __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 438, __pyx_L1_error)
@@ -9103,7 +8528,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             result[:, 1] = np.deg2rad(y)
  *         else:
  */
-    __Pyx_TraceLine(439,0,__PYX_ERR(0, 439, __pyx_L1_error))
     __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_deg2rad); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 439, __pyx_L1_error)
@@ -9124,7 +8548,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
     if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 439, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_7);
     __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__33, __pyx_t_7) < 0)) __PYX_ERR(0, 439, __pyx_L1_error)
+    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__19, __pyx_t_7) < 0)) __PYX_ERR(0, 439, __pyx_L1_error)
     __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
 
     /* "cartopy/_crs.pyx":440
@@ -9134,7 +8558,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         else:
  *             result[:, 0] = x
  */
-    __Pyx_TraceLine(440,0,__PYX_ERR(0, 440, __pyx_L1_error))
     __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 440, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_5);
     __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_deg2rad); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 440, __pyx_L1_error)
@@ -9155,7 +8578,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
     if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 440, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_7);
     __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__34, __pyx_t_7) < 0)) __PYX_ERR(0, 440, __pyx_L1_error)
+    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__20, __pyx_t_7) < 0)) __PYX_ERR(0, 440, __pyx_L1_error)
     __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
 
     /* "cartopy/_crs.pyx":438
@@ -9175,9 +8598,8 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             result[:, 1] = y
  *         # if a z has been given, put it in the result array which will be
  */
-  __Pyx_TraceLine(442,0,__PYX_ERR(0, 442, __pyx_L1_error))
   /*else*/ {
-    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__33, ((PyObject *)__pyx_cur_scope->__pyx_v_x)) < 0)) __PYX_ERR(0, 442, __pyx_L1_error)
+    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__19, ((PyObject *)__pyx_cur_scope->__pyx_v_x)) < 0)) __PYX_ERR(0, 442, __pyx_L1_error)
 
     /* "cartopy/_crs.pyx":443
  *         else:
@@ -9186,8 +8608,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         # if a z has been given, put it in the result array which will be
  *         # transformed in-place
  */
-    __Pyx_TraceLine(443,0,__PYX_ERR(0, 443, __pyx_L1_error))
-    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__34, ((PyObject *)__pyx_v_y)) < 0)) __PYX_ERR(0, 443, __pyx_L1_error)
+    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__20, ((PyObject *)__pyx_v_y)) < 0)) __PYX_ERR(0, 443, __pyx_L1_error)
   }
   __pyx_L18:;
 
@@ -9198,7 +8619,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             result[:, 2] = 0
  *         else:
  */
-  __Pyx_TraceLine(446,0,__PYX_ERR(0, 446, __pyx_L1_error))
   __pyx_t_3 = (((PyObject *)__pyx_v_z) == Py_None);
   __pyx_t_4 = (__pyx_t_3 != 0);
   if (__pyx_t_4) {
@@ -9210,8 +8630,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         else:
  *             result[:, 2] = z
  */
-    __Pyx_TraceLine(447,0,__PYX_ERR(0, 447, __pyx_L1_error))
-    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__35, __pyx_int_0) < 0)) __PYX_ERR(0, 447, __pyx_L1_error)
+    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__21, __pyx_int_0) < 0)) __PYX_ERR(0, 447, __pyx_L1_error)
 
     /* "cartopy/_crs.pyx":446
  *         # if a z has been given, put it in the result array which will be
@@ -9230,9 +8649,8 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *         # call proj. The result array is modified in place. This is only
  */
-  __Pyx_TraceLine(449,0,__PYX_ERR(0, 449, __pyx_L1_error))
   /*else*/ {
-    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__35, ((PyObject *)__pyx_v_z)) < 0)) __PYX_ERR(0, 449, __pyx_L1_error)
+    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__21, ((PyObject *)__pyx_v_z)) < 0)) __PYX_ERR(0, 449, __pyx_L1_error)
   }
   __pyx_L19:;
 
@@ -9243,7 +8661,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             status = _safe_pj_transform(src_crs, self, npts, 3,
  *                                         result[:, 0], result[:, 1],
  */
-  __Pyx_TraceLine(453,0,__PYX_ERR(0, 453, __pyx_L1_error))
   __pyx_t_4 = (__pyx_v_npts != 0);
   if (__pyx_t_4) {
 
@@ -9254,7 +8671,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                                         result[:, 0], result[:, 1],
  *                                         result[:, 2])
  */
-    __Pyx_TraceLine(454,0,__PYX_ERR(0, 454, __pyx_L1_error))
     __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_safe_pj_transform); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 454, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_5 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_npts); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 454, __pyx_L1_error)
@@ -9267,10 +8683,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                                         result[:, 2])
  * 
  */
-    __Pyx_TraceLine(455,0,__PYX_ERR(0, 455, __pyx_L1_error))
-    __pyx_t_1 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_result), __pyx_tuple__33); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 455, __pyx_L1_error)
+    __pyx_t_1 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_result), __pyx_tuple__19); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 455, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
-    __pyx_t_6 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_result), __pyx_tuple__34); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 455, __pyx_L1_error)
+    __pyx_t_6 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_result), __pyx_tuple__20); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 455, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_6);
 
     /* "cartopy/_crs.pyx":456
@@ -9280,8 +8695,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *         if self.is_geodetic():
  */
-    __Pyx_TraceLine(456,0,__PYX_ERR(0, 456, __pyx_L1_error))
-    __pyx_t_13 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_result), __pyx_tuple__35); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 456, __pyx_L1_error)
+    __pyx_t_13 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_result), __pyx_tuple__21); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 456, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_13);
     __pyx_t_14 = NULL;
     __pyx_t_9 = 0;
@@ -9370,7 +8784,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             result[:, :2] = np.rad2deg(result[:, :2])
  *         #if status:
  */
-  __Pyx_TraceLine(458,0,__PYX_ERR(0, 458, __pyx_L1_error))
   __pyx_t_7 = ((struct __pyx_vtabstruct_7cartopy_4_crs_CRS *)__pyx_v_self->__pyx_vtab)->is_geodetic(__pyx_v_self, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 458, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_7);
   __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 458, __pyx_L1_error)
@@ -9384,13 +8797,12 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         #if status:
  *         #    raise Proj4Error()
  */
-    __Pyx_TraceLine(459,0,__PYX_ERR(0, 459, __pyx_L1_error))
     __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 459, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_rad2deg); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 459, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_15);
     __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-    __pyx_t_2 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_result), __pyx_tuple__37); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 459, __pyx_L1_error)
+    __pyx_t_2 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_result), __pyx_tuple__23); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 459, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_2);
     __pyx_t_13 = NULL;
     if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
@@ -9408,7 +8820,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
     if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 459, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_7);
     __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
-    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__37, __pyx_t_7) < 0)) __PYX_ERR(0, 459, __pyx_L1_error)
+    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_result), __pyx_tuple__23, __pyx_t_7) < 0)) __PYX_ERR(0, 459, __pyx_L1_error)
     __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
 
     /* "cartopy/_crs.pyx":458
@@ -9427,7 +8839,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             return result.reshape(result_shape)
  * 
  */
-  __Pyx_TraceLine(463,0,__PYX_ERR(0, 463, __pyx_L1_error))
   __pyx_t_16 = PyObject_Length(__pyx_v_result_shape); if (unlikely(__pyx_t_16 == ((Py_ssize_t)-1))) __PYX_ERR(0, 463, __pyx_L1_error)
   __pyx_t_4 = ((__pyx_t_16 > 2) != 0);
   if (__pyx_t_4) {
@@ -9439,7 +8850,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *         return result
  */
-    __Pyx_TraceLine(464,0,__PYX_ERR(0, 464, __pyx_L1_error))
     __Pyx_XDECREF(__pyx_r);
     __pyx_t_15 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_result), __pyx_n_s_reshape); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 464, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_15);
@@ -9478,7 +8888,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     def transform_vectors(self, src_proj, x, y, u, v):
  */
-  __Pyx_TraceLine(466,0,__PYX_ERR(0, 466, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(((PyObject *)__pyx_v_result));
   __pyx_r = ((PyObject *)__pyx_v_result);
@@ -9517,11 +8926,11 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_XDECREF((PyObject *)__pyx_v_result);
   __Pyx_XDECREF(__pyx_v_result_shape);
   __Pyx_XDECREF(__pyx_v_status);
+  __Pyx_XDECREF(__pyx_gb_7cartopy_4_crs_3CRS_16transform_points_2generator2);
   __Pyx_XDECREF((PyObject *)__pyx_v_y);
   __Pyx_XDECREF((PyObject *)__pyx_v_z);
   __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -9537,13 +8946,15 @@ static PyObject *__pyx_pf_7cartopy_4_crs
 /* Python wrapper */
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_29transform_vectors(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
 static char __pyx_doc_7cartopy_4_crs_3CRS_28transform_vectors[] = "CRS.transform_vectors(self, src_proj, x, y, u, v)\n\n        transform_vectors(src_proj, x, y, u, v)\n\n        Transform the given vector components, with coordinates in the\n        given source coordinate system (``src_proj``), to this coordinate\n        system. The vector components must be given relative to the\n        source projection's coordinate reference system (grid eastward and\n        grid northward).\n\n        Parameters\n        ----------\n        src_proj\n            The :class:`CRS.Projection` that represents the coordinate system\n            the vectors are defined in.\n        x\n            The x coordinates of the vectors in the source projection.\n        y\n            The y coordinates of the vectors in the source projection.\n        u\n            The grid-eastward components of the vectors.\n        v\n            The grid-northward components of the vectors.\n\n        Note\n        ----\n            x, y, u and v may be 1 or 2 dimensional, but must all have matching\n            shapes.\n\n        Returns\n        -------\n            ut, vt: The transformed vector components.\n\n        Note\n        ----\n           The algorithm used to transform vectors is an approximation\n           rather than an exact transform, but the accuracy should be\n           good enough for visualization purposes.\n\n        ";
-static PyMethodDef __pyx_mdef_7cartopy_4_crs_3CRS_29transform_vectors = {"transform_vectors", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cartopy_4_crs_3CRS_29transform_vectors, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cartopy_4_crs_3CRS_28transform_vectors};
 static PyObject *__pyx_pw_7cartopy_4_crs_3CRS_29transform_vectors(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
   PyObject *__pyx_v_src_proj = 0;
   PyObject *__pyx_v_x = 0;
   PyObject *__pyx_v_y = 0;
   PyObject *__pyx_v_u = 0;
   PyObject *__pyx_v_v = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("transform_vectors (wrapper)", 0);
@@ -9653,7 +9064,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   PyObject *__pyx_v_projected_u = NULL;
   PyObject *__pyx_v_projected_v = NULL;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
@@ -9665,9 +9075,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   int __pyx_t_8;
   PyObject *__pyx_t_9 = NULL;
   PyObject *__pyx_t_10 = NULL;
-  __Pyx_TraceFrameInit(__pyx_codeobj__38)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("transform_vectors", 0);
-  __Pyx_TraceCall("transform_vectors", __pyx_f[0], 468, 0, __PYX_ERR(0, 468, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":508
  * 
@@ -9676,7 +9087,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             raise ValueError('x, y, u and v arrays must be the same shape')
  *         if x.ndim not in (1, 2):
  */
-  __Pyx_TraceLine(508,0,__PYX_ERR(0, 508, __pyx_L1_error))
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 508, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_y, __pyx_n_s_shape); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 508, __pyx_L1_error)
@@ -9710,8 +9120,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         if x.ndim not in (1, 2):
  *             raise ValueError('x, y, u and v must be 1 or 2 dimensional')
  */
-    __Pyx_TraceLine(509,0,__PYX_ERR(0, 509, __pyx_L1_error))
-    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 509, __pyx_L1_error)
+    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 509, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
     __Pyx_Raise(__pyx_t_3, 0, 0, 0);
     __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
@@ -9733,7 +9142,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             raise ValueError('x, y, u and v must be 1 or 2 dimensional')
  *         # Transform the coordinates to the target projection.
  */
-  __Pyx_TraceLine(510,0,__PYX_ERR(0, 510, __pyx_L1_error))
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_x, __pyx_n_s_ndim); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 510, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_t_2 = __Pyx_PyInt_NeObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 510, __pyx_L1_error)
@@ -9762,8 +9170,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         # Transform the coordinates to the target projection.
  *         proj_xyz = self.transform_points(src_proj, x, y)
  */
-    __Pyx_TraceLine(511,0,__PYX_ERR(0, 511, __pyx_L1_error))
-    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 511, __pyx_L1_error)
+    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 511, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
     __Pyx_Raise(__pyx_t_3, 0, 0, 0);
     __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
@@ -9785,7 +9192,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         target_x, target_y = proj_xyz[..., 0], proj_xyz[..., 1]
  *         # Rotate the input vectors to the projection.
  */
-  __Pyx_TraceLine(513,0,__PYX_ERR(0, 513, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transform_points); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 513, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_1 = NULL;
@@ -9846,10 +9252,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         # Rotate the input vectors to the projection.
  *         #
  */
-  __Pyx_TraceLine(514,0,__PYX_ERR(0, 514, __pyx_L1_error))
-  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__41); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 514, __pyx_L1_error)
+  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__26); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 514, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
-  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__42); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 514, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__27); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 514, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_v_target_x = __pyx_t_3;
   __pyx_t_3 = 0;
@@ -9863,7 +9268,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         vector_angles = np.arctan2(v, u)
  *         # 2: Find a point in the direction of the original vector that is
  */
-  __Pyx_TraceLine(518,0,__PYX_ERR(0, 518, __pyx_L1_error))
   __pyx_t_2 = PyNumber_Power(__pyx_v_u, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 518, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_3 = PyNumber_Power(__pyx_v_v, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 518, __pyx_L1_error)
@@ -9885,7 +9289,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         # 2: Find a point in the direction of the original vector that is
  *         #    a small distance away from the base point of the vector (near
  */
-  __Pyx_TraceLine(519,0,__PYX_ERR(0, 519, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 519, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_arctan2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 519, __pyx_L1_error)
@@ -9946,7 +9349,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         delta = (src_proj.x_limits[1] - src_proj.x_limits[0]) / factor
  *         x_perturbations = delta * np.cos(vector_angles)
  */
-  __Pyx_TraceLine(524,0,__PYX_ERR(0, 524, __pyx_L1_error))
   __pyx_v_factor = 360000.;
 
   /* "cartopy/_crs.pyx":525
@@ -9956,7 +9358,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         x_perturbations = delta * np.cos(vector_angles)
  *         y_perturbations = delta * np.sin(vector_angles)
  */
-  __Pyx_TraceLine(525,0,__PYX_ERR(0, 525, __pyx_L1_error))
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_proj, __pyx_n_s_x_limits); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 525, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 525, __pyx_L1_error)
@@ -9987,7 +9388,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         y_perturbations = delta * np.sin(vector_angles)
  *         # 3: Handle points that are invalid. These come from picking a new
  */
-  __Pyx_TraceLine(526,0,__PYX_ERR(0, 526, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 526, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_cos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 526, __pyx_L1_error)
@@ -10021,7 +9421,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         # 3: Handle points that are invalid. These come from picking a new
  *         #    point that is outside the domain of the CRS. The first step is
  */
-  __Pyx_TraceLine(527,0,__PYX_ERR(0, 527, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 527, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 527, __pyx_L1_error)
@@ -10055,7 +9454,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         source_x, source_y = proj_xyz[..., 0], proj_xyz[..., 1]
  *         #    Detect all the coordinates where the perturbation takes the point
  */
-  __Pyx_TraceLine(536,0,__PYX_ERR(0, 536, __pyx_L1_error))
   __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_proj, __pyx_n_s_transform_points); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 536, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_t_2 = NULL;
@@ -10116,10 +9514,9 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         #    Detect all the coordinates where the perturbation takes the point
  *         #    outside of the valid x-domain, and reverse the direction of the
  */
-  __Pyx_TraceLine(537,0,__PYX_ERR(0, 537, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__41); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 537, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__26); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 537, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
-  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__42); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 537, __pyx_L1_error)
+  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__27); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 537, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_v_source_x = __pyx_t_1;
   __pyx_t_1 = 0;
@@ -10133,7 +9530,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         invalid_x = np.logical_or(
  *             source_x + x_perturbations < src_proj.x_limits[0]-eps,
  */
-  __Pyx_TraceLine(541,0,__PYX_ERR(0, 541, __pyx_L1_error))
   __pyx_v_eps = 1e-9;
 
   /* "cartopy/_crs.pyx":542
@@ -10143,7 +9539,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             source_x + x_perturbations < src_proj.x_limits[0]-eps,
  *             source_x + x_perturbations > src_proj.x_limits[1]+eps)
  */
-  __Pyx_TraceLine(542,0,__PYX_ERR(0, 542, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 542, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_logical_or); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 542, __pyx_L1_error)
@@ -10157,7 +9552,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             source_x + x_perturbations > src_proj.x_limits[1]+eps)
  *         if invalid_x.any():
  */
-  __Pyx_TraceLine(543,0,__PYX_ERR(0, 543, __pyx_L1_error))
   __pyx_t_1 = PyNumber_Add(__pyx_v_source_x, __pyx_v_x_perturbations); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 543, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_proj, __pyx_n_s_x_limits); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 543, __pyx_L1_error)
@@ -10182,7 +9576,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         if invalid_x.any():
  *             x_perturbations[invalid_x] *= -1
  */
-  __Pyx_TraceLine(544,0,__PYX_ERR(0, 544, __pyx_L1_error))
   __pyx_t_9 = PyNumber_Add(__pyx_v_source_x, __pyx_v_x_perturbations); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 544, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_9);
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_proj, __pyx_n_s_x_limits); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 544, __pyx_L1_error)
@@ -10258,7 +9651,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             x_perturbations[invalid_x] *= -1
  *             y_perturbations[invalid_x] *= -1
  */
-  __Pyx_TraceLine(545,0,__PYX_ERR(0, 545, __pyx_L1_error))
   __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_invalid_x, __pyx_n_s_any); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 545, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
   __pyx_t_9 = NULL;
@@ -10287,7 +9679,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             y_perturbations[invalid_x] *= -1
  *         #    Do the same for coordinates where the perturbation takes the point
  */
-    __Pyx_TraceLine(546,0,__PYX_ERR(0, 546, __pyx_L1_error))
     __Pyx_INCREF(__pyx_v_invalid_x);
     __pyx_t_3 = __pyx_v_invalid_x;
     __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_x_perturbations, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 546, __pyx_L1_error)
@@ -10306,7 +9697,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         #    Do the same for coordinates where the perturbation takes the point
  *         #    outside of the valid y-domain. This may reintroduce some points
  */
-    __Pyx_TraceLine(547,0,__PYX_ERR(0, 547, __pyx_L1_error))
     __Pyx_INCREF(__pyx_v_invalid_x);
     __pyx_t_3 = __pyx_v_invalid_x;
     __pyx_t_9 = __Pyx_PyObject_GetItem(__pyx_v_y_perturbations, __pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 547, __pyx_L1_error)
@@ -10334,7 +9724,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             source_y + y_perturbations < src_proj.y_limits[0]-eps,
  *             source_y + y_perturbations > src_proj.y_limits[1]+eps)
  */
-  __Pyx_TraceLine(552,0,__PYX_ERR(0, 552, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 552, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
   __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_logical_or); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 552, __pyx_L1_error)
@@ -10348,7 +9737,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             source_y + y_perturbations > src_proj.y_limits[1]+eps)
  *         if invalid_y.any():
  */
-  __Pyx_TraceLine(553,0,__PYX_ERR(0, 553, __pyx_L1_error))
   __pyx_t_4 = PyNumber_Add(__pyx_v_source_y, __pyx_v_y_perturbations); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 553, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_proj, __pyx_n_s_y_limits); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 553, __pyx_L1_error)
@@ -10373,7 +9761,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         if invalid_y.any():
  *             x_perturbations[invalid_y] *= -1
  */
-  __Pyx_TraceLine(554,0,__PYX_ERR(0, 554, __pyx_L1_error))
   __pyx_t_10 = PyNumber_Add(__pyx_v_source_y, __pyx_v_y_perturbations); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 554, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_10);
   __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_proj, __pyx_n_s_y_limits); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 554, __pyx_L1_error)
@@ -10449,7 +9836,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             x_perturbations[invalid_y] *= -1
  *             y_perturbations[invalid_y] *= -1
  */
-  __Pyx_TraceLine(555,0,__PYX_ERR(0, 555, __pyx_L1_error))
   __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_invalid_y, __pyx_n_s_any); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 555, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_9);
   __pyx_t_10 = NULL;
@@ -10478,7 +9864,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             y_perturbations[invalid_y] *= -1
  *         #    Keep track of the points where the perturbation direction was
  */
-    __Pyx_TraceLine(556,0,__PYX_ERR(0, 556, __pyx_L1_error))
     __Pyx_INCREF(__pyx_v_invalid_y);
     __pyx_t_3 = __pyx_v_invalid_y;
     __pyx_t_9 = __Pyx_PyObject_GetItem(__pyx_v_x_perturbations, __pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 556, __pyx_L1_error)
@@ -10497,7 +9882,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         #    Keep track of the points where the perturbation direction was
  *         #    reversed.
  */
-    __Pyx_TraceLine(557,0,__PYX_ERR(0, 557, __pyx_L1_error))
     __Pyx_INCREF(__pyx_v_invalid_y);
     __pyx_t_3 = __pyx_v_invalid_y;
     __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_v_y_perturbations, __pyx_t_3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 557, __pyx_L1_error)
@@ -10525,7 +9909,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         #    See if there were any points where we cannot reverse the direction
  *         #    of the perturbation to get the perturbed point within the valid
  */
-  __Pyx_TraceLine(560,0,__PYX_ERR(0, 560, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 560, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_9);
   __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_logical_xor); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 560, __pyx_L1_error)
@@ -10586,7 +9969,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             source_x + x_perturbations < src_proj.x_limits[0]-eps,
  *             source_x + x_perturbations > src_proj.x_limits[1]+eps)
  */
-  __Pyx_TraceLine(564,0,__PYX_ERR(0, 564, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 564, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_10);
   __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_logical_or); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 564, __pyx_L1_error)
@@ -10600,7 +9982,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             source_x + x_perturbations > src_proj.x_limits[1]+eps)
  *         if problem_points.any():
  */
-  __Pyx_TraceLine(565,0,__PYX_ERR(0, 565, __pyx_L1_error))
   __pyx_t_10 = PyNumber_Add(__pyx_v_source_x, __pyx_v_x_perturbations); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 565, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_10);
   __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_proj, __pyx_n_s_x_limits); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 565, __pyx_L1_error)
@@ -10625,7 +10006,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         if problem_points.any():
  *             warnings.warn('Some vectors at source domain corners '
  */
-  __Pyx_TraceLine(566,0,__PYX_ERR(0, 566, __pyx_L1_error))
   __pyx_t_5 = PyNumber_Add(__pyx_v_source_x, __pyx_v_x_perturbations); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 566, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_src_proj, __pyx_n_s_x_limits); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 566, __pyx_L1_error)
@@ -10701,7 +10081,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             warnings.warn('Some vectors at source domain corners '
  *                           'may not have been transformed correctly')
  */
-  __Pyx_TraceLine(567,0,__PYX_ERR(0, 567, __pyx_L1_error))
   __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_problem_points, __pyx_n_s_any); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 567, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
   __pyx_t_5 = NULL;
@@ -10730,7 +10109,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                           'may not have been transformed correctly')
  *         # 4: Transform this set of points to the projection coordinates and
  */
-    __Pyx_TraceLine(568,0,__PYX_ERR(0, 568, __pyx_L1_error))
     __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 568, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_4);
     __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 568, __pyx_L1_error)
@@ -10746,7 +10124,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
         __Pyx_DECREF_SET(__pyx_t_5, function);
       }
     }
-    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_s_Some_vectors_at_source_domain_co) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_s_Some_vectors_at_source_domain_co);
+    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_kp_u_Some_vectors_at_source_domain_co) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_u_Some_vectors_at_source_domain_co);
     __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
     if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 568, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_3);
@@ -10769,7 +10147,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                                          source_x + x_perturbations,
  *                                          source_y + y_perturbations)
  */
-  __Pyx_TraceLine(574,0,__PYX_ERR(0, 574, __pyx_L1_error))
   __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transform_points); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 574, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
 
@@ -10780,7 +10157,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                                          source_y + y_perturbations)
  *         target_x_perturbed = proj_xyz[..., 0]
  */
-  __Pyx_TraceLine(575,0,__PYX_ERR(0, 575, __pyx_L1_error))
   __pyx_t_4 = PyNumber_Add(__pyx_v_source_x, __pyx_v_x_perturbations); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 575, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
 
@@ -10791,7 +10167,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         target_x_perturbed = proj_xyz[..., 0]
  *         target_y_perturbed = proj_xyz[..., 1]
  */
-  __Pyx_TraceLine(576,0,__PYX_ERR(0, 576, __pyx_L1_error))
   __pyx_t_10 = PyNumber_Add(__pyx_v_source_y, __pyx_v_y_perturbations); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 576, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_10);
   __pyx_t_9 = NULL;
@@ -10856,8 +10231,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         target_y_perturbed = proj_xyz[..., 1]
  *         projected_angles = np.arctan2(target_y_perturbed - target_y,
  */
-  __Pyx_TraceLine(577,0,__PYX_ERR(0, 577, __pyx_L1_error))
-  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__41); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 577, __pyx_L1_error)
+  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__26); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 577, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_v_target_x_perturbed = __pyx_t_3;
   __pyx_t_3 = 0;
@@ -10869,8 +10243,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         projected_angles = np.arctan2(target_y_perturbed - target_y,
  *                                       target_x_perturbed - target_x)
  */
-  __Pyx_TraceLine(578,0,__PYX_ERR(0, 578, __pyx_L1_error))
-  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__42); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 578, __pyx_L1_error)
+  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_proj_xyz, __pyx_tuple__27); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 578, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_v_target_y_perturbed = __pyx_t_3;
   __pyx_t_3 = 0;
@@ -10882,7 +10255,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *                                       target_x_perturbed - target_x)
  *         if reversed_vectors.any():
  */
-  __Pyx_TraceLine(579,0,__PYX_ERR(0, 579, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 579, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_arctan2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 579, __pyx_L1_error)
@@ -10898,7 +10270,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         if reversed_vectors.any():
  *             projected_angles[reversed_vectors] += np.pi
  */
-  __Pyx_TraceLine(580,0,__PYX_ERR(0, 580, __pyx_L1_error))
   __pyx_t_10 = PyNumber_Subtract(__pyx_v_target_x_perturbed, __pyx_v_target_x); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 580, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_10);
   __pyx_t_4 = NULL;
@@ -10960,7 +10331,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *             projected_angles[reversed_vectors] += np.pi
  *         # 5: Form the projected vector components, preserving the magnitude
  */
-  __Pyx_TraceLine(581,0,__PYX_ERR(0, 581, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_reversed_vectors, __pyx_n_s_any); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 581, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_9 = NULL;
@@ -10989,7 +10359,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         # 5: Form the projected vector components, preserving the magnitude
  *         #    of the original vectors.
  */
-    __Pyx_TraceLine(582,0,__PYX_ERR(0, 582, __pyx_L1_error))
     __Pyx_INCREF(__pyx_v_reversed_vectors);
     __pyx_t_3 = __pyx_v_reversed_vectors;
     __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_projected_angles, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 582, __pyx_L1_error)
@@ -11023,7 +10392,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         projected_v = vector_magnitudes * np.sin(projected_angles)
  *         return projected_u, projected_v
  */
-  __Pyx_TraceLine(585,0,__PYX_ERR(0, 585, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 585, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_9);
   __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_cos); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 585, __pyx_L1_error)
@@ -11057,7 +10425,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         return projected_u, projected_v
  * 
  */
-  __Pyx_TraceLine(586,0,__PYX_ERR(0, 586, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 586, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sin); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 586, __pyx_L1_error)
@@ -11091,7 +10458,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  * 
  */
-  __Pyx_TraceLine(587,0,__PYX_ERR(0, 587, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 587, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_9);
@@ -11145,7 +10511,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_XDECREF(__pyx_v_projected_u);
   __Pyx_XDECREF(__pyx_v_projected_v);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -11173,22 +10538,16 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 
 static PyObject *__pyx_pf_7cartopy_4_crs_3CRS_10proj4_init___get__(struct __pyx_obj_7cartopy_4_crs_CRS *__pyx_v_self) {
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__get__", 0);
-  __Pyx_TraceCall("__get__", __pyx_f[1], 29, 0, __PYX_ERR(1, 29, __pyx_L1_error));
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(__pyx_v_self->proj4_init);
   __pyx_r = __pyx_v_self->proj4_init;
   goto __pyx_L0;
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_AddTraceback("cartopy._crs.CRS.proj4_init.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = NULL;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -11208,6 +10567,9 @@ static PyMethodDef __pyx_mdef_7cartopy_4
 static PyObject *__pyx_pw_7cartopy_4_crs_8Geodetic_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
   PyObject *__pyx_v_self = 0;
   PyObject *__pyx_v_globe = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
@@ -11271,7 +10633,6 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 static PyObject *__pyx_pf_7cartopy_4_crs_8Geodetic___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_globe) {
   PyObject *__pyx_v_proj4_params = NULL;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   int __pyx_t_2;
@@ -11279,9 +10640,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   PyObject *__pyx_t_4 = NULL;
   PyObject *__pyx_t_5 = NULL;
   int __pyx_t_6;
-  __Pyx_TraceFrameInit(__pyx_codeobj__43)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__init__", 0);
-  __Pyx_TraceCall("__init__", __pyx_f[0], 596, 0, __PYX_ERR(0, 596, __pyx_L1_error));
   __Pyx_INCREF(__pyx_v_globe);
 
   /* "cartopy/_crs.pyx":604
@@ -11291,12 +10653,11 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         globe = globe or Globe(datum='WGS84')
  *         super(Geodetic, self).__init__(proj4_params, globe)
  */
-  __Pyx_TraceLine(604,0,__PYX_ERR(0, 604, __pyx_L1_error))
   __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 604, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
-  __Pyx_INCREF(__pyx_tuple__44);
-  __Pyx_GIVEREF(__pyx_tuple__44);
-  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_tuple__44);
+  __Pyx_INCREF(__pyx_tuple__28);
+  __Pyx_GIVEREF(__pyx_tuple__28);
+  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_tuple__28);
   __pyx_v_proj4_params = ((PyObject*)__pyx_t_1);
   __pyx_t_1 = 0;
 
@@ -11307,7 +10668,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         super(Geodetic, self).__init__(proj4_params, globe)
  * 
  */
-  __Pyx_TraceLine(605,0,__PYX_ERR(0, 605, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_globe); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 605, __pyx_L1_error)
   if (!__pyx_t_2) {
   } else {
@@ -11319,7 +10679,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 605, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
-  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_datum, __pyx_n_s_WGS84) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
+  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_datum, __pyx_n_u_WGS84) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
   __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 605, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
@@ -11338,7 +10698,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  * 
  *     # XXX Implement fwd such as Basemap's Geod. Would be used in the tissot example.
  */
-  __Pyx_TraceLine(606,0,__PYX_ERR(0, 606, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_Geodetic); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 606, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 606, __pyx_L1_error)
@@ -11424,7 +10783,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_XDECREF(__pyx_v_proj4_params);
   __Pyx_XDECREF(__pyx_v_globe);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
@@ -11444,6 +10802,9 @@ static PyMethodDef __pyx_mdef_7cartopy_4
 static PyObject *__pyx_pw_7cartopy_4_crs_10Geocentric_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
   PyObject *__pyx_v_self = 0;
   PyObject *__pyx_v_globe = 0;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   PyObject *__pyx_r = 0;
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
@@ -11507,7 +10868,6 @@ static PyObject *__pyx_pw_7cartopy_4_crs
 static PyObject *__pyx_pf_7cartopy_4_crs_10Geocentric___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_globe) {
   PyObject *__pyx_v_proj4_params = NULL;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   int __pyx_t_2;
@@ -11515,9 +10875,10 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   PyObject *__pyx_t_4 = NULL;
   PyObject *__pyx_t_5 = NULL;
   int __pyx_t_6;
-  __Pyx_TraceFrameInit(__pyx_codeobj__45)
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__init__", 0);
-  __Pyx_TraceCall("__init__", __pyx_f[0], 618, 0, __PYX_ERR(0, 618, __pyx_L1_error));
   __Pyx_INCREF(__pyx_v_globe);
 
   /* "cartopy/_crs.pyx":626
@@ -11527,12 +10888,11 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         globe = globe or Globe(datum='WGS84')
  *         super(Geocentric, self).__init__(proj4_params, globe)
  */
-  __Pyx_TraceLine(626,0,__PYX_ERR(0, 626, __pyx_L1_error))
   __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
-  __Pyx_INCREF(__pyx_tuple__46);
-  __Pyx_GIVEREF(__pyx_tuple__46);
-  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_tuple__46);
+  __Pyx_INCREF(__pyx_tuple__29);
+  __Pyx_GIVEREF(__pyx_tuple__29);
+  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_tuple__29);
   __pyx_v_proj4_params = ((PyObject*)__pyx_t_1);
   __pyx_t_1 = 0;
 
@@ -11542,7 +10902,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         globe = globe or Globe(datum='WGS84')             # <<<<<<<<<<<<<<
  *         super(Geocentric, self).__init__(proj4_params, globe)
  */
-  __Pyx_TraceLine(627,0,__PYX_ERR(0, 627, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_globe); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 627, __pyx_L1_error)
   if (!__pyx_t_2) {
   } else {
@@ -11554,7 +10913,7 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_GOTREF(__pyx_t_3);
   __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 627, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_4);
-  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_datum, __pyx_n_s_WGS84) < 0) __PYX_ERR(0, 627, __pyx_L1_error)
+  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_datum, __pyx_n_u_WGS84) < 0) __PYX_ERR(0, 627, __pyx_L1_error)
   __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 627, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
@@ -11571,7 +10930,6 @@ static PyObject *__pyx_pf_7cartopy_4_crs
  *         globe = globe or Globe(datum='WGS84')
  *         super(Geocentric, self).__init__(proj4_params, globe)             # <<<<<<<<<<<<<<
  */
-  __Pyx_TraceLine(628,0,__PYX_ERR(0, 628, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_Geocentric); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 628, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 628, __pyx_L1_error)
@@ -11657,2069 +11015,335 @@ static PyObject *__pyx_pf_7cartopy_4_crs
   __Pyx_XDECREF(__pyx_v_proj4_params);
   __Pyx_XDECREF(__pyx_v_globe);
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":258
- *         # experimental exception made for __getbuffer__ and __releasebuffer__
- *         # -- the details of this may change.
- *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
- *             # This implementation of getbuffer is geared towards Cython
- *             # requirements, and does not yet fulfill the PEP.
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":735
+ * ctypedef npy_cdouble     complex_t
+ * 
+ * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(1, <void*>a)
+ * 
  */
 
-/* Python wrapper */
-static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
-static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
-  int __pyx_r;
-  __Pyx_RefNannyDeclarations
-  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
-  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));
-
-  /* function exit code */
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
-
-static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
-  int __pyx_v_i;
-  int __pyx_v_ndim;
-  int __pyx_v_endian_detector;
-  int __pyx_v_little_endian;
-  int __pyx_v_t;
-  char *__pyx_v_f;
-  PyArray_Descr *__pyx_v_descr = 0;
-  int __pyx_v_offset;
-  int __pyx_r;
-  __Pyx_TraceDeclarations
+static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
+  PyObject *__pyx_r = NULL;
   __Pyx_RefNannyDeclarations
-  int __pyx_t_1;
-  int __pyx_t_2;
-  PyObject *__pyx_t_3 = NULL;
-  int __pyx_t_4;
-  int __pyx_t_5;
-  int __pyx_t_6;
-  PyArray_Descr *__pyx_t_7;
-  PyObject *__pyx_t_8 = NULL;
-  char *__pyx_t_9;
-  if (__pyx_v_info == NULL) {
-    PyErr_SetString(PyExc_BufferError, "PyObject_GetBuffer: view==NULL argument is obsolete");
-    return -1;
-  }
-  __Pyx_RefNannySetupContext("__getbuffer__", 0);
-  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
-  __Pyx_GIVEREF(__pyx_v_info->obj);
-  __Pyx_TraceCall("__getbuffer__", __pyx_f[2], 258, 0, __PYX_ERR(2, 258, __pyx_L1_error));
+  PyObject *__pyx_t_1 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
+  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":265
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":736
  * 
- *             cdef int i, ndim
- *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
- *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
+ * cdef inline object PyArray_MultiIterNew1(a):
+ *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
  * 
+ * cdef inline object PyArray_MultiIterNew2(a, b):
  */
-  __Pyx_TraceLine(265,0,__PYX_ERR(2, 265, __pyx_L1_error))
-  __pyx_v_endian_detector = 1;
+  __Pyx_XDECREF(__pyx_r);
+  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 736, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_1);
+  __pyx_r = __pyx_t_1;
+  __pyx_t_1 = 0;
+  goto __pyx_L0;
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":266
- *             cdef int i, ndim
- *             cdef int endian_detector = 1
- *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":735
+ * ctypedef npy_cdouble     complex_t
+ * 
+ * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(1, <void*>a)
  * 
- *             ndim = PyArray_NDIM(self)
  */
-  __Pyx_TraceLine(266,0,__PYX_ERR(2, 266, __pyx_L1_error))
-  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":268
- *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
+  /* function exit code */
+  __pyx_L1_error:;
+  __Pyx_XDECREF(__pyx_t_1);
+  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
+  __pyx_r = 0;
+  __pyx_L0:;
+  __Pyx_XGIVEREF(__pyx_r);
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
+
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":738
+ *     return PyArray_MultiIterNew(1, <void*>a)
  * 
- *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
+ * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
  * 
- *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
  */
-  __Pyx_TraceLine(268,0,__PYX_ERR(2, 268, __pyx_L1_error))
-  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":270
- *             ndim = PyArray_NDIM(self)
- * 
- *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not C contiguous")
- */
-  __Pyx_TraceLine(270,0,__PYX_ERR(2, 270, __pyx_L1_error))
-  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
-  if (__pyx_t_2) {
-  } else {
-    __pyx_t_1 = __pyx_t_2;
-    goto __pyx_L4_bool_binop_done;
-  }
+static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
+  PyObject *__pyx_r = NULL;
+  __Pyx_RefNannyDeclarations
+  PyObject *__pyx_t_1 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
+  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":271
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":739
  * 
- *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
- *                 raise ValueError(u"ndarray is not C contiguous")
+ * cdef inline object PyArray_MultiIterNew2(a, b):
+ *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
  * 
+ * cdef inline object PyArray_MultiIterNew3(a, b, c):
  */
-  __Pyx_TraceLine(271,0,__PYX_ERR(2, 271, __pyx_L1_error))
-  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_ARRAY_C_CONTIGUOUS) != 0)) != 0);
-  __pyx_t_1 = __pyx_t_2;
-  __pyx_L4_bool_binop_done:;
+  __Pyx_XDECREF(__pyx_r);
+  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 739, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_1);
+  __pyx_r = __pyx_t_1;
+  __pyx_t_1 = 0;
+  goto __pyx_L0;
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":270
- *             ndim = PyArray_NDIM(self)
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":738
+ *     return PyArray_MultiIterNew(1, <void*>a)
  * 
- *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not C contiguous")
- */
-  __Pyx_TraceLine(270,0,__PYX_ERR(2, 270, __pyx_L1_error))
-  if (unlikely(__pyx_t_1)) {
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":272
- *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
+ * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
  * 
- *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
  */
-    __Pyx_TraceLine(272,0,__PYX_ERR(2, 272, __pyx_L1_error))
-    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 272, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_3);
-    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
-    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-    __PYX_ERR(2, 272, __pyx_L1_error)
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":270
- *             ndim = PyArray_NDIM(self)
- * 
- *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not C contiguous")
- */
-  }
+  /* function exit code */
+  __pyx_L1_error:;
+  __Pyx_XDECREF(__pyx_t_1);
+  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
+  __pyx_r = 0;
+  __pyx_L0:;
+  __Pyx_XGIVEREF(__pyx_r);
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":274
- *                 raise ValueError(u"ndarray is not C contiguous")
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":741
+ *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
+ * 
+ * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
  * 
- *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not Fortran contiguous")
  */
-  __Pyx_TraceLine(274,0,__PYX_ERR(2, 274, __pyx_L1_error))
-  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
-  if (__pyx_t_2) {
-  } else {
-    __pyx_t_1 = __pyx_t_2;
-    goto __pyx_L7_bool_binop_done;
-  }
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":275
+static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
+  PyObject *__pyx_r = NULL;
+  __Pyx_RefNannyDeclarations
+  PyObject *__pyx_t_1 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
+  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":742
  * 
- *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
- *                 raise ValueError(u"ndarray is not Fortran contiguous")
+ * cdef inline object PyArray_MultiIterNew3(a, b, c):
+ *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
  * 
+ * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
  */
-  __Pyx_TraceLine(275,0,__PYX_ERR(2, 275, __pyx_L1_error))
-  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_ARRAY_F_CONTIGUOUS) != 0)) != 0);
-  __pyx_t_1 = __pyx_t_2;
-  __pyx_L7_bool_binop_done:;
+  __Pyx_XDECREF(__pyx_r);
+  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 742, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_1);
+  __pyx_r = __pyx_t_1;
+  __pyx_t_1 = 0;
+  goto __pyx_L0;
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":274
- *                 raise ValueError(u"ndarray is not C contiguous")
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":741
+ *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
  * 
- *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not Fortran contiguous")
- */
-  __Pyx_TraceLine(274,0,__PYX_ERR(2, 274, __pyx_L1_error))
-  if (unlikely(__pyx_t_1)) {
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":276
- *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
+ * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
  * 
- *             info.buf = PyArray_DATA(self)
  */
-    __Pyx_TraceLine(276,0,__PYX_ERR(2, 276, __pyx_L1_error))
-    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 276, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_3);
-    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
-    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-    __PYX_ERR(2, 276, __pyx_L1_error)
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":274
- *                 raise ValueError(u"ndarray is not C contiguous")
- * 
- *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not Fortran contiguous")
- */
-  }
+  /* function exit code */
+  __pyx_L1_error:;
+  __Pyx_XDECREF(__pyx_t_1);
+  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
+  __pyx_r = 0;
+  __pyx_L0:;
+  __Pyx_XGIVEREF(__pyx_r);
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":278
- *                 raise ValueError(u"ndarray is not Fortran contiguous")
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":744
+ *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
  * 
- *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
- *             info.ndim = ndim
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
- */
-  __Pyx_TraceLine(278,0,__PYX_ERR(2, 278, __pyx_L1_error))
-  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":279
+ * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
  * 
- *             info.buf = PyArray_DATA(self)
- *             info.ndim = ndim             # <<<<<<<<<<<<<<
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
- *                 # Allocate new buffer for strides and shape info.
- */
-  __Pyx_TraceLine(279,0,__PYX_ERR(2, 279, __pyx_L1_error))
-  __pyx_v_info->ndim = __pyx_v_ndim;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":280
- *             info.buf = PyArray_DATA(self)
- *             info.ndim = ndim
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
- *                 # Allocate new buffer for strides and shape info.
- *                 # This is allocated as one block, strides first.
  */
-  __Pyx_TraceLine(280,0,__PYX_ERR(2, 280, __pyx_L1_error))
-  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
-  if (__pyx_t_1) {
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":283
- *                 # Allocate new buffer for strides and shape info.
- *                 # This is allocated as one block, strides first.
- *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)             # <<<<<<<<<<<<<<
- *                 info.shape = info.strides + ndim
- *                 for i in range(ndim):
- */
-    __Pyx_TraceLine(283,0,__PYX_ERR(2, 283, __pyx_L1_error))
-    __pyx_v_info->strides = ((Py_ssize_t *)PyObject_Malloc((((sizeof(Py_ssize_t)) * 2) * ((size_t)__pyx_v_ndim))));
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":284
- *                 # This is allocated as one block, strides first.
- *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
- *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
- *                 for i in range(ndim):
- *                     info.strides[i] = PyArray_STRIDES(self)[i]
- */
-    __Pyx_TraceLine(284,0,__PYX_ERR(2, 284, __pyx_L1_error))
-    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":285
- *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
- *                 info.shape = info.strides + ndim
- *                 for i in range(ndim):             # <<<<<<<<<<<<<<
- *                     info.strides[i] = PyArray_STRIDES(self)[i]
- *                     info.shape[i] = PyArray_DIMS(self)[i]
- */
-    __Pyx_TraceLine(285,0,__PYX_ERR(2, 285, __pyx_L1_error))
-    __pyx_t_4 = __pyx_v_ndim;
-    __pyx_t_5 = __pyx_t_4;
-    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
-      __pyx_v_i = __pyx_t_6;
+static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
+  PyObject *__pyx_r = NULL;
+  __Pyx_RefNannyDeclarations
+  PyObject *__pyx_t_1 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
+  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":286
- *                 info.shape = info.strides + ndim
- *                 for i in range(ndim):
- *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
- *                     info.shape[i] = PyArray_DIMS(self)[i]
- *             else:
- */
-      __Pyx_TraceLine(286,0,__PYX_ERR(2, 286, __pyx_L1_error))
-      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":287
- *                 for i in range(ndim):
- *                     info.strides[i] = PyArray_STRIDES(self)[i]
- *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
- *             else:
- *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
- */
-      __Pyx_TraceLine(287,0,__PYX_ERR(2, 287, __pyx_L1_error))
-      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
-    }
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":280
- *             info.buf = PyArray_DATA(self)
- *             info.ndim = ndim
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
- *                 # Allocate new buffer for strides and shape info.
- *                 # This is allocated as one block, strides first.
- */
-    goto __pyx_L9;
-  }
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":289
- *                     info.shape[i] = PyArray_DIMS(self)[i]
- *             else:
- *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
- *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
- *             info.suboffsets = NULL
- */
-  __Pyx_TraceLine(289,0,__PYX_ERR(2, 289, __pyx_L1_error))
-  /*else*/ {
-    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":290
- *             else:
- *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
- *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
- *             info.suboffsets = NULL
- *             info.itemsize = PyArray_ITEMSIZE(self)
- */
-    __Pyx_TraceLine(290,0,__PYX_ERR(2, 290, __pyx_L1_error))
-    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
-  }
-  __pyx_L9:;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":291
- *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
- *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
- *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
- *             info.itemsize = PyArray_ITEMSIZE(self)
- *             info.readonly = not PyArray_ISWRITEABLE(self)
- */
-  __Pyx_TraceLine(291,0,__PYX_ERR(2, 291, __pyx_L1_error))
-  __pyx_v_info->suboffsets = NULL;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":292
- *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
- *             info.suboffsets = NULL
- *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
- *             info.readonly = not PyArray_ISWRITEABLE(self)
- * 
- */
-  __Pyx_TraceLine(292,0,__PYX_ERR(2, 292, __pyx_L1_error))
-  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":293
- *             info.suboffsets = NULL
- *             info.itemsize = PyArray_ITEMSIZE(self)
- *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
- * 
- *             cdef int t
- */
-  __Pyx_TraceLine(293,0,__PYX_ERR(2, 293, __pyx_L1_error))
-  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":296
- * 
- *             cdef int t
- *             cdef char* f = NULL             # <<<<<<<<<<<<<<
- *             cdef dtype descr = <dtype>PyArray_DESCR(self)
- *             cdef int offset
- */
-  __Pyx_TraceLine(296,0,__PYX_ERR(2, 296, __pyx_L1_error))
-  __pyx_v_f = NULL;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":297
- *             cdef int t
- *             cdef char* f = NULL
- *             cdef dtype descr = <dtype>PyArray_DESCR(self)             # <<<<<<<<<<<<<<
- *             cdef int offset
- * 
- */
-  __Pyx_TraceLine(297,0,__PYX_ERR(2, 297, __pyx_L1_error))
-  __pyx_t_7 = PyArray_DESCR(__pyx_v_self);
-  __pyx_t_3 = ((PyObject *)__pyx_t_7);
-  __Pyx_INCREF(__pyx_t_3);
-  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
-  __pyx_t_3 = 0;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":300
- *             cdef int offset
- * 
- *             info.obj = self             # <<<<<<<<<<<<<<
- * 
- *             if not PyDataType_HASFIELDS(descr):
- */
-  __Pyx_TraceLine(300,0,__PYX_ERR(2, 300, __pyx_L1_error))
-  __Pyx_INCREF(((PyObject *)__pyx_v_self));
-  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
-  __Pyx_GOTREF(__pyx_v_info->obj);
-  __Pyx_DECREF(__pyx_v_info->obj);
-  __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":302
- *             info.obj = self
- * 
- *             if not PyDataType_HASFIELDS(descr):             # <<<<<<<<<<<<<<
- *                 t = descr.type_num
- *                 if ((descr.byteorder == c'>' and little_endian) or
- */
-  __Pyx_TraceLine(302,0,__PYX_ERR(2, 302, __pyx_L1_error))
-  __pyx_t_1 = ((!(PyDataType_HASFIELDS(__pyx_v_descr) != 0)) != 0);
-  if (__pyx_t_1) {
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":303
- * 
- *             if not PyDataType_HASFIELDS(descr):
- *                 t = descr.type_num             # <<<<<<<<<<<<<<
- *                 if ((descr.byteorder == c'>' and little_endian) or
- *                     (descr.byteorder == c'<' and not little_endian)):
- */
-    __Pyx_TraceLine(303,0,__PYX_ERR(2, 303, __pyx_L1_error))
-    __pyx_t_4 = __pyx_v_descr->type_num;
-    __pyx_v_t = __pyx_t_4;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":304
- *             if not PyDataType_HASFIELDS(descr):
- *                 t = descr.type_num
- *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
- *                     (descr.byteorder == c'<' and not little_endian)):
- *                     raise ValueError(u"Non-native byte order not supported")
- */
-    __Pyx_TraceLine(304,0,__PYX_ERR(2, 304, __pyx_L1_error))
-    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
-    if (!__pyx_t_2) {
-      goto __pyx_L15_next_or;
-    } else {
-    }
-    __pyx_t_2 = (__pyx_v_little_endian != 0);
-    if (!__pyx_t_2) {
-    } else {
-      __pyx_t_1 = __pyx_t_2;
-      goto __pyx_L14_bool_binop_done;
-    }
-    __pyx_L15_next_or:;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":305
- *                 t = descr.type_num
- *                 if ((descr.byteorder == c'>' and little_endian) or
- *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
- *                     raise ValueError(u"Non-native byte order not supported")
- *                 if   t == NPY_BYTE:        f = "b"
- */
-    __Pyx_TraceLine(305,0,__PYX_ERR(2, 305, __pyx_L1_error))
-    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
-    if (__pyx_t_2) {
-    } else {
-      __pyx_t_1 = __pyx_t_2;
-      goto __pyx_L14_bool_binop_done;
-    }
-    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
-    __pyx_t_1 = __pyx_t_2;
-    __pyx_L14_bool_binop_done:;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":304
- *             if not PyDataType_HASFIELDS(descr):
- *                 t = descr.type_num
- *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
- *                     (descr.byteorder == c'<' and not little_endian)):
- *                     raise ValueError(u"Non-native byte order not supported")
- */
-    __Pyx_TraceLine(304,0,__PYX_ERR(2, 304, __pyx_L1_error))
-    if (unlikely(__pyx_t_1)) {
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":306
- *                 if ((descr.byteorder == c'>' and little_endian) or
- *                     (descr.byteorder == c'<' and not little_endian)):
- *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
- *                 if   t == NPY_BYTE:        f = "b"
- *                 elif t == NPY_UBYTE:       f = "B"
- */
-      __Pyx_TraceLine(306,0,__PYX_ERR(2, 306, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 306, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __PYX_ERR(2, 306, __pyx_L1_error)
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":304
- *             if not PyDataType_HASFIELDS(descr):
- *                 t = descr.type_num
- *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
- *                     (descr.byteorder == c'<' and not little_endian)):
- *                     raise ValueError(u"Non-native byte order not supported")
- */
-    }
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":307
- *                     (descr.byteorder == c'<' and not little_endian)):
- *                     raise ValueError(u"Non-native byte order not supported")
- *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_UBYTE:       f = "B"
- *                 elif t == NPY_SHORT:       f = "h"
- */
-    __Pyx_TraceLine(307,0,__PYX_ERR(2, 307, __pyx_L1_error))
-    switch (__pyx_v_t) {
-      case NPY_BYTE:
-      __pyx_v_f = ((char *)"b");
-      break;
-      case NPY_UBYTE:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":308
- *                     raise ValueError(u"Non-native byte order not supported")
- *                 if   t == NPY_BYTE:        f = "b"
- *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_SHORT:       f = "h"
- *                 elif t == NPY_USHORT:      f = "H"
- */
-      __Pyx_TraceLine(308,0,__PYX_ERR(2, 308, __pyx_L1_error))
-      __pyx_v_f = ((char *)"B");
-      break;
-      case NPY_SHORT:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":309
- *                 if   t == NPY_BYTE:        f = "b"
- *                 elif t == NPY_UBYTE:       f = "B"
- *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_USHORT:      f = "H"
- *                 elif t == NPY_INT:         f = "i"
- */
-      __Pyx_TraceLine(309,0,__PYX_ERR(2, 309, __pyx_L1_error))
-      __pyx_v_f = ((char *)"h");
-      break;
-      case NPY_USHORT:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":310
- *                 elif t == NPY_UBYTE:       f = "B"
- *                 elif t == NPY_SHORT:       f = "h"
- *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_INT:         f = "i"
- *                 elif t == NPY_UINT:        f = "I"
- */
-      __Pyx_TraceLine(310,0,__PYX_ERR(2, 310, __pyx_L1_error))
-      __pyx_v_f = ((char *)"H");
-      break;
-      case NPY_INT:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":311
- *                 elif t == NPY_SHORT:       f = "h"
- *                 elif t == NPY_USHORT:      f = "H"
- *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_UINT:        f = "I"
- *                 elif t == NPY_LONG:        f = "l"
- */
-      __Pyx_TraceLine(311,0,__PYX_ERR(2, 311, __pyx_L1_error))
-      __pyx_v_f = ((char *)"i");
-      break;
-      case NPY_UINT:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":312
- *                 elif t == NPY_USHORT:      f = "H"
- *                 elif t == NPY_INT:         f = "i"
- *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_LONG:        f = "l"
- *                 elif t == NPY_ULONG:       f = "L"
- */
-      __Pyx_TraceLine(312,0,__PYX_ERR(2, 312, __pyx_L1_error))
-      __pyx_v_f = ((char *)"I");
-      break;
-      case NPY_LONG:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":313
- *                 elif t == NPY_INT:         f = "i"
- *                 elif t == NPY_UINT:        f = "I"
- *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_ULONG:       f = "L"
- *                 elif t == NPY_LONGLONG:    f = "q"
- */
-      __Pyx_TraceLine(313,0,__PYX_ERR(2, 313, __pyx_L1_error))
-      __pyx_v_f = ((char *)"l");
-      break;
-      case NPY_ULONG:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":314
- *                 elif t == NPY_UINT:        f = "I"
- *                 elif t == NPY_LONG:        f = "l"
- *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_LONGLONG:    f = "q"
- *                 elif t == NPY_ULONGLONG:   f = "Q"
- */
-      __Pyx_TraceLine(314,0,__PYX_ERR(2, 314, __pyx_L1_error))
-      __pyx_v_f = ((char *)"L");
-      break;
-      case NPY_LONGLONG:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":315
- *                 elif t == NPY_LONG:        f = "l"
- *                 elif t == NPY_ULONG:       f = "L"
- *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_ULONGLONG:   f = "Q"
- *                 elif t == NPY_FLOAT:       f = "f"
- */
-      __Pyx_TraceLine(315,0,__PYX_ERR(2, 315, __pyx_L1_error))
-      __pyx_v_f = ((char *)"q");
-      break;
-      case NPY_ULONGLONG:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":316
- *                 elif t == NPY_ULONG:       f = "L"
- *                 elif t == NPY_LONGLONG:    f = "q"
- *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_FLOAT:       f = "f"
- *                 elif t == NPY_DOUBLE:      f = "d"
- */
-      __Pyx_TraceLine(316,0,__PYX_ERR(2, 316, __pyx_L1_error))
-      __pyx_v_f = ((char *)"Q");
-      break;
-      case NPY_FLOAT:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":317
- *                 elif t == NPY_LONGLONG:    f = "q"
- *                 elif t == NPY_ULONGLONG:   f = "Q"
- *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_DOUBLE:      f = "d"
- *                 elif t == NPY_LONGDOUBLE:  f = "g"
- */
-      __Pyx_TraceLine(317,0,__PYX_ERR(2, 317, __pyx_L1_error))
-      __pyx_v_f = ((char *)"f");
-      break;
-      case NPY_DOUBLE:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":318
- *                 elif t == NPY_ULONGLONG:   f = "Q"
- *                 elif t == NPY_FLOAT:       f = "f"
- *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_LONGDOUBLE:  f = "g"
- *                 elif t == NPY_CFLOAT:      f = "Zf"
- */
-      __Pyx_TraceLine(318,0,__PYX_ERR(2, 318, __pyx_L1_error))
-      __pyx_v_f = ((char *)"d");
-      break;
-      case NPY_LONGDOUBLE:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":319
- *                 elif t == NPY_FLOAT:       f = "f"
- *                 elif t == NPY_DOUBLE:      f = "d"
- *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_CFLOAT:      f = "Zf"
- *                 elif t == NPY_CDOUBLE:     f = "Zd"
- */
-      __Pyx_TraceLine(319,0,__PYX_ERR(2, 319, __pyx_L1_error))
-      __pyx_v_f = ((char *)"g");
-      break;
-      case NPY_CFLOAT:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":320
- *                 elif t == NPY_DOUBLE:      f = "d"
- *                 elif t == NPY_LONGDOUBLE:  f = "g"
- *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_CDOUBLE:     f = "Zd"
- *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
- */
-      __Pyx_TraceLine(320,0,__PYX_ERR(2, 320, __pyx_L1_error))
-      __pyx_v_f = ((char *)"Zf");
-      break;
-      case NPY_CDOUBLE:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":321
- *                 elif t == NPY_LONGDOUBLE:  f = "g"
- *                 elif t == NPY_CFLOAT:      f = "Zf"
- *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
- *                 elif t == NPY_OBJECT:      f = "O"
- */
-      __Pyx_TraceLine(321,0,__PYX_ERR(2, 321, __pyx_L1_error))
-      __pyx_v_f = ((char *)"Zd");
-      break;
-      case NPY_CLONGDOUBLE:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":322
- *                 elif t == NPY_CFLOAT:      f = "Zf"
- *                 elif t == NPY_CDOUBLE:     f = "Zd"
- *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
- *                 elif t == NPY_OBJECT:      f = "O"
- *                 else:
- */
-      __Pyx_TraceLine(322,0,__PYX_ERR(2, 322, __pyx_L1_error))
-      __pyx_v_f = ((char *)"Zg");
-      break;
-      case NPY_OBJECT:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":323
- *                 elif t == NPY_CDOUBLE:     f = "Zd"
- *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
- *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
- *                 else:
- *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
- */
-      __Pyx_TraceLine(323,0,__PYX_ERR(2, 323, __pyx_L1_error))
-      __pyx_v_f = ((char *)"O");
-      break;
-      default:
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":325
- *                 elif t == NPY_OBJECT:      f = "O"
- *                 else:
- *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
- *                 info.format = f
- *                 return
- */
-      __Pyx_TraceLine(325,0,__PYX_ERR(2, 325, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 325, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_8 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 325, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_8);
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 325, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
-      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __PYX_ERR(2, 325, __pyx_L1_error)
-      break;
-    }
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":326
- *                 else:
- *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
- *                 info.format = f             # <<<<<<<<<<<<<<
- *                 return
- *             else:
- */
-    __Pyx_TraceLine(326,0,__PYX_ERR(2, 326, __pyx_L1_error))
-    __pyx_v_info->format = __pyx_v_f;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":327
- *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
- *                 info.format = f
- *                 return             # <<<<<<<<<<<<<<
- *             else:
- *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
- */
-    __Pyx_TraceLine(327,0,__PYX_ERR(2, 327, __pyx_L1_error))
-    __pyx_r = 0;
-    goto __pyx_L0;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":302
- *             info.obj = self
- * 
- *             if not PyDataType_HASFIELDS(descr):             # <<<<<<<<<<<<<<
- *                 t = descr.type_num
- *                 if ((descr.byteorder == c'>' and little_endian) or
- */
-  }
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":329
- *                 return
- *             else:
- *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
- *                 info.format[0] = c'^' # Native data types, manual alignment
- *                 offset = 0
- */
-  __Pyx_TraceLine(329,0,__PYX_ERR(2, 329, __pyx_L1_error))
-  /*else*/ {
-    __pyx_v_info->format = ((char *)PyObject_Malloc(0xFF));
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":330
- *             else:
- *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
- *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
- *                 offset = 0
- *                 f = _util_dtypestring(descr, info.format + 1,
- */
-    __Pyx_TraceLine(330,0,__PYX_ERR(2, 330, __pyx_L1_error))
-    (__pyx_v_info->format[0]) = '^';
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":331
- *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
- *                 info.format[0] = c'^' # Native data types, manual alignment
- *                 offset = 0             # <<<<<<<<<<<<<<
- *                 f = _util_dtypestring(descr, info.format + 1,
- *                                       info.format + _buffer_format_string_len,
- */
-    __Pyx_TraceLine(331,0,__PYX_ERR(2, 331, __pyx_L1_error))
-    __pyx_v_offset = 0;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":332
- *                 info.format[0] = c'^' # Native data types, manual alignment
- *                 offset = 0
- *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
- *                                       info.format + _buffer_format_string_len,
- *                                       &offset)
- */
-    __Pyx_TraceLine(332,0,__PYX_ERR(2, 332, __pyx_L1_error))
-    __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_9 == ((char *)NULL))) __PYX_ERR(2, 332, __pyx_L1_error)
-    __pyx_v_f = __pyx_t_9;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":335
- *                                       info.format + _buffer_format_string_len,
- *                                       &offset)
- *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
- * 
- *         def __releasebuffer__(ndarray self, Py_buffer* info):
- */
-    __Pyx_TraceLine(335,0,__PYX_ERR(2, 335, __pyx_L1_error))
-    (__pyx_v_f[0]) = '\x00';
-  }
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":258
- *         # experimental exception made for __getbuffer__ and __releasebuffer__
- *         # -- the details of this may change.
- *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
- *             # This implementation of getbuffer is geared towards Cython
- *             # requirements, and does not yet fulfill the PEP.
- */
-
-  /* function exit code */
-  __pyx_r = 0;
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_XDECREF(__pyx_t_3);
-  __Pyx_XDECREF(__pyx_t_8);
-  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = -1;
-  if (__pyx_v_info->obj != NULL) {
-    __Pyx_GOTREF(__pyx_v_info->obj);
-    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
-  }
-  goto __pyx_L2;
-  __pyx_L0:;
-  if (__pyx_v_info->obj == Py_None) {
-    __Pyx_GOTREF(__pyx_v_info->obj);
-    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
-  }
-  __pyx_L2:;
-  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
-  __Pyx_TraceReturn(Py_None, 0);
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
-
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":337
- *                 f[0] = c'\0' # Terminate format string
- * 
- *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
- *             if PyArray_HASFIELDS(self):
- *                 PyObject_Free(info.format)
- */
-
-/* Python wrapper */
-static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
-static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
-  __Pyx_RefNannyDeclarations
-  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
-  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));
-
-  /* function exit code */
-  __Pyx_RefNannyFinishContext();
-}
-
-static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
-  __Pyx_TraceDeclarations
-  __Pyx_RefNannyDeclarations
-  int __pyx_t_1;
-  __Pyx_RefNannySetupContext("__releasebuffer__", 0);
-  __Pyx_TraceCall("__releasebuffer__", __pyx_f[2], 337, 0, __PYX_ERR(2, 337, __pyx_L1_error));
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":338
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":745
  * 
- *         def __releasebuffer__(ndarray self, Py_buffer* info):
- *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
- *                 PyObject_Free(info.format)
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
- */
-  __Pyx_TraceLine(338,0,__PYX_ERR(2, 338, __pyx_L1_error))
-  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
-  if (__pyx_t_1) {
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":339
- *         def __releasebuffer__(ndarray self, Py_buffer* info):
- *             if PyArray_HASFIELDS(self):
- *                 PyObject_Free(info.format)             # <<<<<<<<<<<<<<
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
- *                 PyObject_Free(info.strides)
- */
-    __Pyx_TraceLine(339,0,__PYX_ERR(2, 339, __pyx_L1_error))
-    PyObject_Free(__pyx_v_info->format);
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":338
- * 
- *         def __releasebuffer__(ndarray self, Py_buffer* info):
- *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
- *                 PyObject_Free(info.format)
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
- */
-  }
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":340
- *             if PyArray_HASFIELDS(self):
- *                 PyObject_Free(info.format)
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
- *                 PyObject_Free(info.strides)
- *                 # info.shape was stored after info.strides in the same block
- */
-  __Pyx_TraceLine(340,0,__PYX_ERR(2, 340, __pyx_L1_error))
-  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
-  if (__pyx_t_1) {
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":341
- *                 PyObject_Free(info.format)
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
- *                 PyObject_Free(info.strides)             # <<<<<<<<<<<<<<
- *                 # info.shape was stored after info.strides in the same block
- * 
- */
-    __Pyx_TraceLine(341,0,__PYX_ERR(2, 341, __pyx_L1_error))
-    PyObject_Free(__pyx_v_info->strides);
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":340
- *             if PyArray_HASFIELDS(self):
- *                 PyObject_Free(info.format)
- *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
- *                 PyObject_Free(info.strides)
- *                 # info.shape was stored after info.strides in the same block
- */
-  }
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":337
- *                 f[0] = c'\0' # Terminate format string
- * 
- *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
- *             if PyArray_HASFIELDS(self):
- *                 PyObject_Free(info.format)
- */
-
-  /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("numpy.ndarray.__releasebuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
-  __Pyx_RefNannyFinishContext();
-}
-
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":821
- * ctypedef npy_cdouble     complex_t
- * 
- * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(1, <void*>a)
- * 
- */
-
-static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
-  PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
-  __Pyx_RefNannyDeclarations
-  PyObject *__pyx_t_1 = NULL;
-  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);
-  __Pyx_TraceCall("PyArray_MultiIterNew1", __pyx_f[2], 821, 0, __PYX_ERR(2, 821, __pyx_L1_error));
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":822
- * 
- * cdef inline object PyArray_MultiIterNew1(a):
- *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
- * 
- * cdef inline object PyArray_MultiIterNew2(a, b):
- */
-  __Pyx_TraceLine(822,0,__PYX_ERR(2, 822, __pyx_L1_error))
-  __Pyx_XDECREF(__pyx_r);
-  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 822, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  __pyx_r = __pyx_t_1;
-  __pyx_t_1 = 0;
-  goto __pyx_L0;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":821
- * ctypedef npy_cdouble     complex_t
- * 
- * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(1, <void*>a)
- * 
- */
-
-  /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_XDECREF(__pyx_t_1);
-  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = 0;
-  __pyx_L0:;
-  __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
-
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":824
- *     return PyArray_MultiIterNew(1, <void*>a)
- * 
- * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
- * 
- */
-
-static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
-  PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
-  __Pyx_RefNannyDeclarations
-  PyObject *__pyx_t_1 = NULL;
-  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);
-  __Pyx_TraceCall("PyArray_MultiIterNew2", __pyx_f[2], 824, 0, __PYX_ERR(2, 824, __pyx_L1_error));
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":825
- * 
- * cdef inline object PyArray_MultiIterNew2(a, b):
- *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
+ * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
+ *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
  * 
- * cdef inline object PyArray_MultiIterNew3(a, b, c):
+ * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
  */
-  __Pyx_TraceLine(825,0,__PYX_ERR(2, 825, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
-  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 825, __pyx_L1_error)
+  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 745, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_r = __pyx_t_1;
   __pyx_t_1 = 0;
   goto __pyx_L0;
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":824
- *     return PyArray_MultiIterNew(1, <void*>a)
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":744
+ *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
  * 
- * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
+ * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
  * 
  */
 
   /* function exit code */
   __pyx_L1_error:;
   __Pyx_XDECREF(__pyx_t_1);
-  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
+  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = 0;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
-}
-
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":827
- *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
- * 
- * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
- * 
- */
-
-static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
-  PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
-  __Pyx_RefNannyDeclarations
-  PyObject *__pyx_t_1 = NULL;
-  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);
-  __Pyx_TraceCall("PyArray_MultiIterNew3", __pyx_f[2], 827, 0, __PYX_ERR(2, 827, __pyx_L1_error));
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":828
- * 
- * cdef inline object PyArray_MultiIterNew3(a, b, c):
- *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
- * 
- * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
- */
-  __Pyx_TraceLine(828,0,__PYX_ERR(2, 828, __pyx_L1_error))
-  __Pyx_XDECREF(__pyx_r);
-  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 828, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  __pyx_r = __pyx_t_1;
-  __pyx_t_1 = 0;
-  goto __pyx_L0;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":827
- *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
- * 
- * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
- * 
- */
-
-  /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_XDECREF(__pyx_t_1);
-  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = 0;
-  __pyx_L0:;
-  __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
-
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":830
- *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
- * 
- * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
- * 
- */
-
-static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
-  PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
-  __Pyx_RefNannyDeclarations
-  PyObject *__pyx_t_1 = NULL;
-  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);
-  __Pyx_TraceCall("PyArray_MultiIterNew4", __pyx_f[2], 830, 0, __PYX_ERR(2, 830, __pyx_L1_error));
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":831
- * 
- * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
- *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
- * 
- * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
- */
-  __Pyx_TraceLine(831,0,__PYX_ERR(2, 831, __pyx_L1_error))
-  __Pyx_XDECREF(__pyx_r);
-  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 831, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  __pyx_r = __pyx_t_1;
-  __pyx_t_1 = 0;
-  goto __pyx_L0;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":830
- *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
- * 
- * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
- * 
- */
-
-  /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_XDECREF(__pyx_t_1);
-  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = 0;
-  __pyx_L0:;
-  __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
-
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":833
- *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
- * 
- * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
- * 
- */
-
-static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
-  PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
-  __Pyx_RefNannyDeclarations
-  PyObject *__pyx_t_1 = NULL;
-  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);
-  __Pyx_TraceCall("PyArray_MultiIterNew5", __pyx_f[2], 833, 0, __PYX_ERR(2, 833, __pyx_L1_error));
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":834
- * 
- * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
- *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
- * 
- * cdef inline tuple PyDataType_SHAPE(dtype d):
- */
-  __Pyx_TraceLine(834,0,__PYX_ERR(2, 834, __pyx_L1_error))
-  __Pyx_XDECREF(__pyx_r);
-  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 834, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  __pyx_r = __pyx_t_1;
-  __pyx_t_1 = 0;
-  goto __pyx_L0;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":833
- *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
- * 
- * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
- * 
- */
-
-  /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_XDECREF(__pyx_t_1);
-  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = 0;
-  __pyx_L0:;
-  __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
-
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":836
- *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
- * 
- * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
- *     if PyDataType_HASSUBARRAY(d):
- *         return <tuple>d.subarray.shape
- */
-
-static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
-  PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
-  __Pyx_RefNannyDeclarations
-  int __pyx_t_1;
-  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);
-  __Pyx_TraceCall("PyDataType_SHAPE", __pyx_f[2], 836, 0, __PYX_ERR(2, 836, __pyx_L1_error));
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":837
- * 
- * cdef inline tuple PyDataType_SHAPE(dtype d):
- *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
- *         return <tuple>d.subarray.shape
- *     else:
- */
-  __Pyx_TraceLine(837,0,__PYX_ERR(2, 837, __pyx_L1_error))
-  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
-  if (__pyx_t_1) {
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":838
- * cdef inline tuple PyDataType_SHAPE(dtype d):
- *     if PyDataType_HASSUBARRAY(d):
- *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
- *     else:
- *         return ()
- */
-    __Pyx_TraceLine(838,0,__PYX_ERR(2, 838, __pyx_L1_error))
-    __Pyx_XDECREF(__pyx_r);
-    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
-    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
-    goto __pyx_L0;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":837
- * 
- * cdef inline tuple PyDataType_SHAPE(dtype d):
- *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
- *         return <tuple>d.subarray.shape
- *     else:
- */
-  }
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":840
- *         return <tuple>d.subarray.shape
- *     else:
- *         return ()             # <<<<<<<<<<<<<<
- * 
- * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
- */
-  __Pyx_TraceLine(840,0,__PYX_ERR(2, 840, __pyx_L1_error))
-  /*else*/ {
-    __Pyx_XDECREF(__pyx_r);
-    __Pyx_INCREF(__pyx_empty_tuple);
-    __pyx_r = __pyx_empty_tuple;
-    goto __pyx_L0;
-  }
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":836
- *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
- * 
- * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
- *     if PyDataType_HASSUBARRAY(d):
- *         return <tuple>d.subarray.shape
- */
-
-  /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_AddTraceback("numpy.PyDataType_SHAPE", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = 0;
-  __pyx_L0:;
-  __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
-  __Pyx_RefNannyFinishContext();
-  return __pyx_r;
-}
-
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":842
- *         return ()
- * 
- * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
- *     # Recursive utility function used in __getbuffer__ to get format
- *     # string. The new location in the format string is returned.
- */
-
-static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
-  PyArray_Descr *__pyx_v_child = 0;
-  int __pyx_v_endian_detector;
-  int __pyx_v_little_endian;
-  PyObject *__pyx_v_fields = 0;
-  PyObject *__pyx_v_childname = NULL;
-  PyObject *__pyx_v_new_offset = NULL;
-  PyObject *__pyx_v_t = NULL;
-  char *__pyx_r;
-  __Pyx_TraceDeclarations
-  __Pyx_RefNannyDeclarations
-  PyObject *__pyx_t_1 = NULL;
-  Py_ssize_t __pyx_t_2;
-  PyObject *__pyx_t_3 = NULL;
-  PyObject *__pyx_t_4 = NULL;
-  int __pyx_t_5;
-  int __pyx_t_6;
-  int __pyx_t_7;
-  long __pyx_t_8;
-  char *__pyx_t_9;
-  __Pyx_RefNannySetupContext("_util_dtypestring", 0);
-  __Pyx_TraceCall("_util_dtypestring", __pyx_f[2], 842, 0, __PYX_ERR(2, 842, __pyx_L1_error));
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":847
- * 
- *     cdef dtype child
- *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
- *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
- *     cdef tuple fields
- */
-  __Pyx_TraceLine(847,0,__PYX_ERR(2, 847, __pyx_L1_error))
-  __pyx_v_endian_detector = 1;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":848
- *     cdef dtype child
- *     cdef int endian_detector = 1
- *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
- *     cdef tuple fields
- * 
- */
-  __Pyx_TraceLine(848,0,__PYX_ERR(2, 848, __pyx_L1_error))
-  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":851
- *     cdef tuple fields
- * 
- *     for childname in descr.names:             # <<<<<<<<<<<<<<
- *         fields = descr.fields[childname]
- *         child, new_offset = fields
- */
-  __Pyx_TraceLine(851,0,__PYX_ERR(2, 851, __pyx_L1_error))
-  if (unlikely(__pyx_v_descr->names == Py_None)) {
-    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
-    __PYX_ERR(2, 851, __pyx_L1_error)
-  }
-  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
-  for (;;) {
-    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
-    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 851, __pyx_L1_error)
-    #else
-    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 851, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_3);
-    #endif
-    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
-    __pyx_t_3 = 0;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":852
- * 
- *     for childname in descr.names:
- *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
- *         child, new_offset = fields
- * 
- */
-    __Pyx_TraceLine(852,0,__PYX_ERR(2, 852, __pyx_L1_error))
-    if (unlikely(__pyx_v_descr->fields == Py_None)) {
-      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
-      __PYX_ERR(2, 852, __pyx_L1_error)
-    }
-    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 852, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_3);
-    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(2, 852, __pyx_L1_error)
-    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
-    __pyx_t_3 = 0;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":853
- *     for childname in descr.names:
- *         fields = descr.fields[childname]
- *         child, new_offset = fields             # <<<<<<<<<<<<<<
- * 
- *         if (end - f) - <int>(new_offset - offset[0]) < 15:
- */
-    __Pyx_TraceLine(853,0,__PYX_ERR(2, 853, __pyx_L1_error))
-    if (likely(__pyx_v_fields != Py_None)) {
-      PyObject* sequence = __pyx_v_fields;
-      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
-      if (unlikely(size != 2)) {
-        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
-        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
-        __PYX_ERR(2, 853, __pyx_L1_error)
-      }
-      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
-      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
-      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
-      __Pyx_INCREF(__pyx_t_3);
-      __Pyx_INCREF(__pyx_t_4);
-      #else
-      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 853, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 853, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      #endif
-    } else {
-      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(2, 853, __pyx_L1_error)
-    }
-    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) __PYX_ERR(2, 853, __pyx_L1_error)
-    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
-    __pyx_t_3 = 0;
-    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
-    __pyx_t_4 = 0;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":855
- *         child, new_offset = fields
- * 
- *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
- *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
- * 
- */
-    __Pyx_TraceLine(855,0,__PYX_ERR(2, 855, __pyx_L1_error))
-    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 855, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_4);
-    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 855, __pyx_L1_error)
-    __Pyx_GOTREF(__pyx_t_3);
-    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 855, __pyx_L1_error)
-    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
-    if (unlikely(__pyx_t_6)) {
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":856
- * 
- *         if (end - f) - <int>(new_offset - offset[0]) < 15:
- *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
- * 
- *         if ((child.byteorder == c'>' and little_endian) or
- */
-      __Pyx_TraceLine(856,0,__PYX_ERR(2, 856, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 856, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __PYX_ERR(2, 856, __pyx_L1_error)
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":855
- *         child, new_offset = fields
- * 
- *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
- *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
- * 
- */
-    }
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":858
- *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
- * 
- *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
- *             (child.byteorder == c'<' and not little_endian)):
- *             raise ValueError(u"Non-native byte order not supported")
- */
-    __Pyx_TraceLine(858,0,__PYX_ERR(2, 858, __pyx_L1_error))
-    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
-    if (!__pyx_t_7) {
-      goto __pyx_L8_next_or;
-    } else {
-    }
-    __pyx_t_7 = (__pyx_v_little_endian != 0);
-    if (!__pyx_t_7) {
-    } else {
-      __pyx_t_6 = __pyx_t_7;
-      goto __pyx_L7_bool_binop_done;
-    }
-    __pyx_L8_next_or:;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":859
- * 
- *         if ((child.byteorder == c'>' and little_endian) or
- *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
- *             raise ValueError(u"Non-native byte order not supported")
- *             # One could encode it in the format string and have Cython
- */
-    __Pyx_TraceLine(859,0,__PYX_ERR(2, 859, __pyx_L1_error))
-    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
-    if (__pyx_t_7) {
-    } else {
-      __pyx_t_6 = __pyx_t_7;
-      goto __pyx_L7_bool_binop_done;
-    }
-    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
-    __pyx_t_6 = __pyx_t_7;
-    __pyx_L7_bool_binop_done:;
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":858
- *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
- * 
- *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
- *             (child.byteorder == c'<' and not little_endian)):
- *             raise ValueError(u"Non-native byte order not supported")
- */
-    __Pyx_TraceLine(858,0,__PYX_ERR(2, 858, __pyx_L1_error))
-    if (unlikely(__pyx_t_6)) {
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":860
- *         if ((child.byteorder == c'>' and little_endian) or
- *             (child.byteorder == c'<' and not little_endian)):
- *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
- *             # One could encode it in the format string and have Cython
- *             # complain instead, BUT: < and > in format strings also imply
- */
-      __Pyx_TraceLine(860,0,__PYX_ERR(2, 860, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 860, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __PYX_ERR(2, 860, __pyx_L1_error)
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":858
- *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
- * 
- *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
- *             (child.byteorder == c'<' and not little_endian)):
- *             raise ValueError(u"Non-native byte order not supported")
- */
-    }
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":870
- * 
- *         # Output padding bytes
- *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
- *             f[0] = 120 # "x"; pad byte
- *             f += 1
- */
-    __Pyx_TraceLine(870,0,__PYX_ERR(2, 870, __pyx_L1_error))
-    while (1) {
-      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 870, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 870, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 870, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      if (!__pyx_t_6) break;
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":871
- *         # Output padding bytes
- *         while offset[0] < new_offset:
- *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
- *             f += 1
- *             offset[0] += 1
- */
-      __Pyx_TraceLine(871,0,__PYX_ERR(2, 871, __pyx_L1_error))
-      (__pyx_v_f[0]) = 0x78;
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":872
- *         while offset[0] < new_offset:
- *             f[0] = 120 # "x"; pad byte
- *             f += 1             # <<<<<<<<<<<<<<
- *             offset[0] += 1
- * 
- */
-      __Pyx_TraceLine(872,0,__PYX_ERR(2, 872, __pyx_L1_error))
-      __pyx_v_f = (__pyx_v_f + 1);
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":873
- *             f[0] = 120 # "x"; pad byte
- *             f += 1
- *             offset[0] += 1             # <<<<<<<<<<<<<<
- * 
- *         offset[0] += child.itemsize
- */
-      __Pyx_TraceLine(873,0,__PYX_ERR(2, 873, __pyx_L1_error))
-      __pyx_t_8 = 0;
-      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
-    }
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":875
- *             offset[0] += 1
- * 
- *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
- * 
- *         if not PyDataType_HASFIELDS(child):
- */
-    __Pyx_TraceLine(875,0,__PYX_ERR(2, 875, __pyx_L1_error))
-    __pyx_t_8 = 0;
-    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);
-
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":877
- *         offset[0] += child.itemsize
- * 
- *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
- *             t = child.type_num
- *             if end - f < 5:
- */
-    __Pyx_TraceLine(877,0,__PYX_ERR(2, 877, __pyx_L1_error))
-    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
-    if (__pyx_t_6) {
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":878
- * 
- *         if not PyDataType_HASFIELDS(child):
- *             t = child.type_num             # <<<<<<<<<<<<<<
- *             if end - f < 5:
- *                 raise RuntimeError(u"Format string allocated too short.")
- */
-      __Pyx_TraceLine(878,0,__PYX_ERR(2, 878, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 878, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
-      __pyx_t_4 = 0;
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":879
- *         if not PyDataType_HASFIELDS(child):
- *             t = child.type_num
- *             if end - f < 5:             # <<<<<<<<<<<<<<
- *                 raise RuntimeError(u"Format string allocated too short.")
- * 
- */
-      __Pyx_TraceLine(879,0,__PYX_ERR(2, 879, __pyx_L1_error))
-      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
-      if (unlikely(__pyx_t_6)) {
-
-        /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":880
- *             t = child.type_num
- *             if end - f < 5:
- *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
- * 
- *             # Until ticket #99 is fixed, use integers to avoid warnings
- */
-        __Pyx_TraceLine(880,0,__PYX_ERR(2, 880, __pyx_L1_error))
-        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__51, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 880, __pyx_L1_error)
-        __Pyx_GOTREF(__pyx_t_4);
-        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
-        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-        __PYX_ERR(2, 880, __pyx_L1_error)
-
-        /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":879
- *         if not PyDataType_HASFIELDS(child):
- *             t = child.type_num
- *             if end - f < 5:             # <<<<<<<<<<<<<<
- *                 raise RuntimeError(u"Format string allocated too short.")
- * 
- */
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":883
- * 
- *             # Until ticket #99 is fixed, use integers to avoid warnings
- *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
- *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
- *             elif t == NPY_SHORT:       f[0] = 104 #"h"
- */
-      __Pyx_TraceLine(883,0,__PYX_ERR(2, 883, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 883, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 883, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 883, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 98;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":884
- *             # Until ticket #99 is fixed, use integers to avoid warnings
- *             if   t == NPY_BYTE:        f[0] =  98 #"b"
- *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
- *             elif t == NPY_SHORT:       f[0] = 104 #"h"
- *             elif t == NPY_USHORT:      f[0] =  72 #"H"
- */
-      __Pyx_TraceLine(884,0,__PYX_ERR(2, 884, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 884, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 884, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 884, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 66;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":885
- *             if   t == NPY_BYTE:        f[0] =  98 #"b"
- *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
- *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
- *             elif t == NPY_USHORT:      f[0] =  72 #"H"
- *             elif t == NPY_INT:         f[0] = 105 #"i"
- */
-      __Pyx_TraceLine(885,0,__PYX_ERR(2, 885, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 885, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 885, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 885, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 0x68;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":886
- *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
- *             elif t == NPY_SHORT:       f[0] = 104 #"h"
- *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
- *             elif t == NPY_INT:         f[0] = 105 #"i"
- *             elif t == NPY_UINT:        f[0] =  73 #"I"
- */
-      __Pyx_TraceLine(886,0,__PYX_ERR(2, 886, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 886, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 886, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 886, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 72;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":887
- *             elif t == NPY_SHORT:       f[0] = 104 #"h"
- *             elif t == NPY_USHORT:      f[0] =  72 #"H"
- *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
- *             elif t == NPY_UINT:        f[0] =  73 #"I"
- *             elif t == NPY_LONG:        f[0] = 108 #"l"
- */
-      __Pyx_TraceLine(887,0,__PYX_ERR(2, 887, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 887, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 887, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 887, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 0x69;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":888
- *             elif t == NPY_USHORT:      f[0] =  72 #"H"
- *             elif t == NPY_INT:         f[0] = 105 #"i"
- *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
- *             elif t == NPY_LONG:        f[0] = 108 #"l"
- *             elif t == NPY_ULONG:       f[0] = 76  #"L"
- */
-      __Pyx_TraceLine(888,0,__PYX_ERR(2, 888, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 888, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 888, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 888, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 73;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":889
- *             elif t == NPY_INT:         f[0] = 105 #"i"
- *             elif t == NPY_UINT:        f[0] =  73 #"I"
- *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
- *             elif t == NPY_ULONG:       f[0] = 76  #"L"
- *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
- */
-      __Pyx_TraceLine(889,0,__PYX_ERR(2, 889, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 889, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 889, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 889, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 0x6C;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":890
- *             elif t == NPY_UINT:        f[0] =  73 #"I"
- *             elif t == NPY_LONG:        f[0] = 108 #"l"
- *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
- *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
- *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
- */
-      __Pyx_TraceLine(890,0,__PYX_ERR(2, 890, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 890, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 890, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 890, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 76;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":891
- *             elif t == NPY_LONG:        f[0] = 108 #"l"
- *             elif t == NPY_ULONG:       f[0] = 76  #"L"
- *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
- *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
- *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
- */
-      __Pyx_TraceLine(891,0,__PYX_ERR(2, 891, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 891, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 891, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 891, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 0x71;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":892
- *             elif t == NPY_ULONG:       f[0] = 76  #"L"
- *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
- *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
- *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
- *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
- */
-      __Pyx_TraceLine(892,0,__PYX_ERR(2, 892, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 892, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 892, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 892, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 81;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":893
- *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
- *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
- *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
- *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
- *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
- */
-      __Pyx_TraceLine(893,0,__PYX_ERR(2, 893, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 893, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 893, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 893, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 0x66;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":894
- *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
- *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
- *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
- *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
- *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
- */
-      __Pyx_TraceLine(894,0,__PYX_ERR(2, 894, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 894, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 894, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 894, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 0x64;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":895
- *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
- *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
- *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
- *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
- *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
- */
-      __Pyx_TraceLine(895,0,__PYX_ERR(2, 895, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 895, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 895, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 895, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 0x67;
-        goto __pyx_L15;
-      }
-
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":896
- *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
- *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
- *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
- *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
- *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
- */
-      __Pyx_TraceLine(896,0,__PYX_ERR(2, 896, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 896, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 896, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 896, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 90;
-        (__pyx_v_f[1]) = 0x66;
-        __pyx_v_f = (__pyx_v_f + 1);
-        goto __pyx_L15;
-      }
+}
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":897
- *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
- *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
- *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
- *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
- *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":747
+ *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
+ * 
+ * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
+ * 
  */
-      __Pyx_TraceLine(897,0,__PYX_ERR(2, 897, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 897, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 897, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 897, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 90;
-        (__pyx_v_f[1]) = 0x64;
-        __pyx_v_f = (__pyx_v_f + 1);
-        goto __pyx_L15;
-      }
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":898
- *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
- *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
- *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
- *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
- *             else:
- */
-      __Pyx_TraceLine(898,0,__PYX_ERR(2, 898, __pyx_L1_error))
-      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 898, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_3);
-      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 898, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 898, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      if (__pyx_t_6) {
-        (__pyx_v_f[0]) = 90;
-        (__pyx_v_f[1]) = 0x67;
-        __pyx_v_f = (__pyx_v_f + 1);
-        goto __pyx_L15;
-      }
+static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
+  PyObject *__pyx_r = NULL;
+  __Pyx_RefNannyDeclarations
+  PyObject *__pyx_t_1 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
+  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":899
- *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
- *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
- *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
- *             else:
- *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":748
+ * 
+ * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
+ *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
+ * 
+ * cdef inline tuple PyDataType_SHAPE(dtype d):
  */
-      __Pyx_TraceLine(899,0,__PYX_ERR(2, 899, __pyx_L1_error))
-      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 899, __pyx_L1_error)
-      __Pyx_GOTREF(__pyx_t_4);
-      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 899, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 899, __pyx_L1_error)
-      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-      if (likely(__pyx_t_6)) {
-        (__pyx_v_f[0]) = 79;
-        goto __pyx_L15;
-      }
+  __Pyx_XDECREF(__pyx_r);
+  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 748, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_1);
+  __pyx_r = __pyx_t_1;
+  __pyx_t_1 = 0;
+  goto __pyx_L0;
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":901
- *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
- *             else:
- *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
- *             f += 1
- *         else:
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":747
+ *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
+ * 
+ * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
+ *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
+ * 
  */
-      __Pyx_TraceLine(901,0,__PYX_ERR(2, 901, __pyx_L1_error))
-      /*else*/ {
-        __pyx_t_3 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 901, __pyx_L1_error)
-        __Pyx_GOTREF(__pyx_t_3);
-        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 901, __pyx_L1_error)
-        __Pyx_GOTREF(__pyx_t_4);
-        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
-        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
-        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
-        __PYX_ERR(2, 901, __pyx_L1_error)
-      }
-      __pyx_L15:;
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":902
- *             else:
- *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
- *             f += 1             # <<<<<<<<<<<<<<
- *         else:
- *             # Cython ignores struct boundary information ("T{...}"),
- */
-      __Pyx_TraceLine(902,0,__PYX_ERR(2, 902, __pyx_L1_error))
-      __pyx_v_f = (__pyx_v_f + 1);
+  /* function exit code */
+  __pyx_L1_error:;
+  __Pyx_XDECREF(__pyx_t_1);
+  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
+  __pyx_r = 0;
+  __pyx_L0:;
+  __Pyx_XGIVEREF(__pyx_r);
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":877
- *         offset[0] += child.itemsize
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":750
+ *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
  * 
- *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
- *             t = child.type_num
- *             if end - f < 5:
+ * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
+ *     if PyDataType_HASSUBARRAY(d):
+ *         return <tuple>d.subarray.shape
  */
-      goto __pyx_L13;
-    }
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":906
- *             # Cython ignores struct boundary information ("T{...}"),
- *             # so don't output it
- *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
- *     return f
+static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
+  PyObject *__pyx_r = NULL;
+  __Pyx_RefNannyDeclarations
+  int __pyx_t_1;
+  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":751
  * 
+ * cdef inline tuple PyDataType_SHAPE(dtype d):
+ *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
+ *         return <tuple>d.subarray.shape
+ *     else:
  */
-    __Pyx_TraceLine(906,0,__PYX_ERR(2, 906, __pyx_L1_error))
-    /*else*/ {
-      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == ((char *)NULL))) __PYX_ERR(2, 906, __pyx_L1_error)
-      __pyx_v_f = __pyx_t_9;
-    }
-    __pyx_L13:;
+  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
+  if (__pyx_t_1) {
+
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":752
+ * cdef inline tuple PyDataType_SHAPE(dtype d):
+ *     if PyDataType_HASSUBARRAY(d):
+ *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
+ *     else:
+ *         return ()
+ */
+    __Pyx_XDECREF(__pyx_r);
+    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
+    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
+    goto __pyx_L0;
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":851
- *     cdef tuple fields
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":751
  * 
- *     for childname in descr.names:             # <<<<<<<<<<<<<<
- *         fields = descr.fields[childname]
- *         child, new_offset = fields
+ * cdef inline tuple PyDataType_SHAPE(dtype d):
+ *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
+ *         return <tuple>d.subarray.shape
+ *     else:
  */
-    __Pyx_TraceLine(851,0,__PYX_ERR(2, 851, __pyx_L1_error))
   }
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":907
- *             # so don't output it
- *             f = _util_dtypestring(child, f, end, offset)
- *     return f             # <<<<<<<<<<<<<<
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":754
+ *         return <tuple>d.subarray.shape
+ *     else:
+ *         return ()             # <<<<<<<<<<<<<<
  * 
  * 
  */
-  __Pyx_TraceLine(907,0,__PYX_ERR(2, 907, __pyx_L1_error))
-  __pyx_r = __pyx_v_f;
-  goto __pyx_L0;
+  /*else*/ {
+    __Pyx_XDECREF(__pyx_r);
+    __Pyx_INCREF(__pyx_empty_tuple);
+    __pyx_r = __pyx_empty_tuple;
+    goto __pyx_L0;
+  }
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":842
- *         return ()
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":750
+ *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
  * 
- * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
- *     # Recursive utility function used in __getbuffer__ to get format
- *     # string. The new location in the format string is returned.
+ * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
+ *     if PyDataType_HASSUBARRAY(d):
+ *         return <tuple>d.subarray.shape
  */
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_XDECREF(__pyx_t_1);
-  __Pyx_XDECREF(__pyx_t_3);
-  __Pyx_XDECREF(__pyx_t_4);
-  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = NULL;
   __pyx_L0:;
-  __Pyx_XDECREF((PyObject *)__pyx_v_child);
-  __Pyx_XDECREF(__pyx_v_fields);
-  __Pyx_XDECREF(__pyx_v_childname);
-  __Pyx_XDECREF(__pyx_v_new_offset);
-  __Pyx_XDECREF(__pyx_v_t);
-  __Pyx_TraceReturn(Py_None, 0);
+  __Pyx_XGIVEREF(__pyx_r);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1022
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":929
  *     int _import_umath() except -1
  * 
  * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
@@ -13728,32 +11352,28 @@ static CYTHON_INLINE char *__pyx_f_5nump
  */
 
 static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   __Pyx_RefNannySetupContext("set_array_base", 0);
-  __Pyx_TraceCall("set_array_base", __pyx_f[2], 1022, 0, __PYX_ERR(2, 1022, __pyx_L1_error));
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1023
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":930
  * 
  * cdef inline void set_array_base(ndarray arr, object base):
  *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
  *     PyArray_SetBaseObject(arr, base)
  * 
  */
-  __Pyx_TraceLine(1023,0,__PYX_ERR(2, 1023, __pyx_L1_error))
   Py_INCREF(__pyx_v_base);
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1024
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":931
  * cdef inline void set_array_base(ndarray arr, object base):
  *     Py_INCREF(base) # important to do this before stealing the reference below!
  *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
  * 
  * cdef inline object get_array_base(ndarray arr):
  */
-  __Pyx_TraceLine(1024,0,__PYX_ERR(2, 1024, __pyx_L1_error))
   (void)(PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base));
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1022
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":929
  *     int _import_umath() except -1
  * 
  * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
@@ -13762,15 +11382,10 @@ static CYTHON_INLINE void __pyx_f_5numpy
  */
 
   /* function exit code */
-  goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_WriteUnraisable("numpy.set_array_base", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
-  __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
 }
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1026
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":933
  *     PyArray_SetBaseObject(arr, base)
  * 
  * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
@@ -13781,46 +11396,41 @@ static CYTHON_INLINE void __pyx_f_5numpy
 static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
   PyObject *__pyx_v_base;
   PyObject *__pyx_r = NULL;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   int __pyx_t_1;
   __Pyx_RefNannySetupContext("get_array_base", 0);
-  __Pyx_TraceCall("get_array_base", __pyx_f[2], 1026, 0, __PYX_ERR(2, 1026, __pyx_L1_error));
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1027
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":934
  * 
  * cdef inline object get_array_base(ndarray arr):
  *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
  *     if base is NULL:
  *         return None
  */
-  __Pyx_TraceLine(1027,0,__PYX_ERR(2, 1027, __pyx_L1_error))
   __pyx_v_base = PyArray_BASE(__pyx_v_arr);
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1028
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":935
  * cdef inline object get_array_base(ndarray arr):
  *     base = PyArray_BASE(arr)
  *     if base is NULL:             # <<<<<<<<<<<<<<
  *         return None
  *     return <object>base
  */
-  __Pyx_TraceLine(1028,0,__PYX_ERR(2, 1028, __pyx_L1_error))
   __pyx_t_1 = ((__pyx_v_base == NULL) != 0);
   if (__pyx_t_1) {
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1029
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":936
  *     base = PyArray_BASE(arr)
  *     if base is NULL:
  *         return None             # <<<<<<<<<<<<<<
  *     return <object>base
  * 
  */
-    __Pyx_TraceLine(1029,0,__PYX_ERR(2, 1029, __pyx_L1_error))
     __Pyx_XDECREF(__pyx_r);
     __pyx_r = Py_None; __Pyx_INCREF(Py_None);
     goto __pyx_L0;
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1028
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":935
  * cdef inline object get_array_base(ndarray arr):
  *     base = PyArray_BASE(arr)
  *     if base is NULL:             # <<<<<<<<<<<<<<
@@ -13829,20 +11439,19 @@ static CYTHON_INLINE PyObject *__pyx_f_5
  */
   }
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1030
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":937
  *     if base is NULL:
  *         return None
  *     return <object>base             # <<<<<<<<<<<<<<
  * 
  * # Versions of the import_* functions which are more suitable for
  */
-  __Pyx_TraceLine(1030,0,__PYX_ERR(2, 1030, __pyx_L1_error))
   __Pyx_XDECREF(__pyx_r);
   __Pyx_INCREF(((PyObject *)__pyx_v_base));
   __pyx_r = ((PyObject *)__pyx_v_base);
   goto __pyx_L0;
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1026
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":933
  *     PyArray_SetBaseObject(arr, base)
  * 
  * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
@@ -13851,27 +11460,22 @@ static CYTHON_INLINE PyObject *__pyx_f_5
  */
 
   /* function exit code */
-  __pyx_L1_error:;
-  __Pyx_AddTraceback("numpy.get_array_base", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = 0;
   __pyx_L0:;
   __Pyx_XGIVEREF(__pyx_r);
-  __Pyx_TraceReturn(__pyx_r, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1034
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":941
  * # Versions of the import_* functions which are more suitable for
  * # Cython code.
  * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
  *     try:
- *         _import_array()
+ *         __pyx_import_array()
  */
 
 static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
   int __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
@@ -13881,17 +11485,18 @@ static CYTHON_INLINE int __pyx_f_5numpy_
   PyObject *__pyx_t_6 = NULL;
   PyObject *__pyx_t_7 = NULL;
   PyObject *__pyx_t_8 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("import_array", 0);
-  __Pyx_TraceCall("import_array", __pyx_f[2], 1034, 0, __PYX_ERR(2, 1034, __pyx_L1_error));
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1035
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":942
  * # Cython code.
  * cdef inline int import_array() except -1:
  *     try:             # <<<<<<<<<<<<<<
- *         _import_array()
+ *         __pyx_import_array()
  *     except Exception:
  */
-  __Pyx_TraceLine(1035,0,__PYX_ERR(2, 1035, __pyx_L1_error))
   {
     __Pyx_PyThreadState_declare
     __Pyx_PyThreadState_assign
@@ -13901,21 +11506,20 @@ static CYTHON_INLINE int __pyx_f_5numpy_
     __Pyx_XGOTREF(__pyx_t_3);
     /*try:*/ {
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1036
+      /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":943
  * cdef inline int import_array() except -1:
  *     try:
- *         _import_array()             # <<<<<<<<<<<<<<
+ *         __pyx_import_array()             # <<<<<<<<<<<<<<
  *     except Exception:
  *         raise ImportError("numpy.core.multiarray failed to import")
  */
-      __Pyx_TraceLine(1036,0,__PYX_ERR(2, 1036, __pyx_L3_error))
-      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1036, __pyx_L3_error)
+      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 943, __pyx_L3_error)
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1035
+      /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":942
  * # Cython code.
  * cdef inline int import_array() except -1:
  *     try:             # <<<<<<<<<<<<<<
- *         _import_array()
+ *         __pyx_import_array()
  *     except Exception:
  */
     }
@@ -13925,44 +11529,42 @@ static CYTHON_INLINE int __pyx_f_5numpy_
     goto __pyx_L8_try_end;
     __pyx_L3_error:;
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1037
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":944
  *     try:
- *         _import_array()
+ *         __pyx_import_array()
  *     except Exception:             # <<<<<<<<<<<<<<
  *         raise ImportError("numpy.core.multiarray failed to import")
  * 
  */
-    __Pyx_TraceLine(1037,0,__PYX_ERR(2, 1037, __pyx_L5_except_error))
     __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
     if (__pyx_t_4) {
       __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
-      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1037, __pyx_L5_except_error)
+      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 944, __pyx_L5_except_error)
       __Pyx_GOTREF(__pyx_t_5);
       __Pyx_GOTREF(__pyx_t_6);
       __Pyx_GOTREF(__pyx_t_7);
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1038
- *         _import_array()
+      /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":945
+ *         __pyx_import_array()
  *     except Exception:
  *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
  * 
  * cdef inline int import_umath() except -1:
  */
-      __Pyx_TraceLine(1038,0,__PYX_ERR(2, 1038, __pyx_L5_except_error))
-      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__52, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1038, __pyx_L5_except_error)
+      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 945, __pyx_L5_except_error)
       __Pyx_GOTREF(__pyx_t_8);
       __Pyx_Raise(__pyx_t_8, 0, 0, 0);
       __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
-      __PYX_ERR(2, 1038, __pyx_L5_except_error)
+      __PYX_ERR(1, 945, __pyx_L5_except_error)
     }
     goto __pyx_L5_except_error;
     __pyx_L5_except_error:;
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1035
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":942
  * # Cython code.
  * cdef inline int import_array() except -1:
  *     try:             # <<<<<<<<<<<<<<
- *         _import_array()
+ *         __pyx_import_array()
  *     except Exception:
  */
     __Pyx_XGIVEREF(__pyx_t_1);
@@ -13973,12 +11575,12 @@ static CYTHON_INLINE int __pyx_f_5numpy_
     __pyx_L8_try_end:;
   }
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1034
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":941
  * # Versions of the import_* functions which are more suitable for
  * # Cython code.
  * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
  *     try:
- *         _import_array()
+ *         __pyx_import_array()
  */
 
   /* function exit code */
@@ -13992,12 +11594,11 @@ static CYTHON_INLINE int __pyx_f_5numpy_
   __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = -1;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1040
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":947
  *         raise ImportError("numpy.core.multiarray failed to import")
  * 
  * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
@@ -14007,7 +11608,6 @@ static CYTHON_INLINE int __pyx_f_5numpy_
 
 static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
   int __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
@@ -14017,17 +11617,18 @@ static CYTHON_INLINE int __pyx_f_5numpy_
   PyObject *__pyx_t_6 = NULL;
   PyObject *__pyx_t_7 = NULL;
   PyObject *__pyx_t_8 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("import_umath", 0);
-  __Pyx_TraceCall("import_umath", __pyx_f[2], 1040, 0, __PYX_ERR(2, 1040, __pyx_L1_error));
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1041
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":948
  * 
  * cdef inline int import_umath() except -1:
  *     try:             # <<<<<<<<<<<<<<
  *         _import_umath()
  *     except Exception:
  */
-  __Pyx_TraceLine(1041,0,__PYX_ERR(2, 1041, __pyx_L1_error))
   {
     __Pyx_PyThreadState_declare
     __Pyx_PyThreadState_assign
@@ -14037,17 +11638,16 @@ static CYTHON_INLINE int __pyx_f_5numpy_
     __Pyx_XGOTREF(__pyx_t_3);
     /*try:*/ {
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1042
+      /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":949
  * cdef inline int import_umath() except -1:
  *     try:
  *         _import_umath()             # <<<<<<<<<<<<<<
  *     except Exception:
  *         raise ImportError("numpy.core.umath failed to import")
  */
-      __Pyx_TraceLine(1042,0,__PYX_ERR(2, 1042, __pyx_L3_error))
-      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1042, __pyx_L3_error)
+      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 949, __pyx_L3_error)
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1041
+      /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":948
  * 
  * cdef inline int import_umath() except -1:
  *     try:             # <<<<<<<<<<<<<<
@@ -14061,40 +11661,38 @@ static CYTHON_INLINE int __pyx_f_5numpy_
     goto __pyx_L8_try_end;
     __pyx_L3_error:;
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1043
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":950
  *     try:
  *         _import_umath()
  *     except Exception:             # <<<<<<<<<<<<<<
  *         raise ImportError("numpy.core.umath failed to import")
  * 
  */
-    __Pyx_TraceLine(1043,0,__PYX_ERR(2, 1043, __pyx_L5_except_error))
     __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
     if (__pyx_t_4) {
       __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
-      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1043, __pyx_L5_except_error)
+      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 950, __pyx_L5_except_error)
       __Pyx_GOTREF(__pyx_t_5);
       __Pyx_GOTREF(__pyx_t_6);
       __Pyx_GOTREF(__pyx_t_7);
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1044
+      /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":951
  *         _import_umath()
  *     except Exception:
  *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
  * 
  * cdef inline int import_ufunc() except -1:
  */
-      __Pyx_TraceLine(1044,0,__PYX_ERR(2, 1044, __pyx_L5_except_error))
-      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__53, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1044, __pyx_L5_except_error)
+      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 951, __pyx_L5_except_error)
       __Pyx_GOTREF(__pyx_t_8);
       __Pyx_Raise(__pyx_t_8, 0, 0, 0);
       __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
-      __PYX_ERR(2, 1044, __pyx_L5_except_error)
+      __PYX_ERR(1, 951, __pyx_L5_except_error)
     }
     goto __pyx_L5_except_error;
     __pyx_L5_except_error:;
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1041
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":948
  * 
  * cdef inline int import_umath() except -1:
  *     try:             # <<<<<<<<<<<<<<
@@ -14109,7 +11707,7 @@ static CYTHON_INLINE int __pyx_f_5numpy_
     __pyx_L8_try_end:;
   }
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1040
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":947
  *         raise ImportError("numpy.core.multiarray failed to import")
  * 
  * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
@@ -14128,12 +11726,11 @@ static CYTHON_INLINE int __pyx_f_5numpy_
   __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
   __pyx_r = -1;
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
   __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
 
-/* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1046
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":953
  *         raise ImportError("numpy.core.umath failed to import")
  * 
  * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
@@ -14143,7 +11740,6 @@ static CYTHON_INLINE int __pyx_f_5numpy_
 
 static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
   int __pyx_r;
-  __Pyx_TraceDeclarations
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
@@ -14153,17 +11749,18 @@ static CYTHON_INLINE int __pyx_f_5numpy_
   PyObject *__pyx_t_6 = NULL;
   PyObject *__pyx_t_7 = NULL;
   PyObject *__pyx_t_8 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("import_ufunc", 0);
-  __Pyx_TraceCall("import_ufunc", __pyx_f[2], 1046, 0, __PYX_ERR(2, 1046, __pyx_L1_error));
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1047
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":954
  * 
  * cdef inline int import_ufunc() except -1:
  *     try:             # <<<<<<<<<<<<<<
  *         _import_umath()
  *     except Exception:
  */
-  __Pyx_TraceLine(1047,0,__PYX_ERR(2, 1047, __pyx_L1_error))
   {
     __Pyx_PyThreadState_declare
     __Pyx_PyThreadState_assign
@@ -14173,96 +11770,269 @@ static CYTHON_INLINE int __pyx_f_5numpy_
     __Pyx_XGOTREF(__pyx_t_3);
     /*try:*/ {
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1048
- * cdef inline int import_ufunc() except -1:
- *     try:
- *         _import_umath()             # <<<<<<<<<<<<<<
- *     except Exception:
- *         raise ImportError("numpy.core.umath failed to import")
+      /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":955
+ * cdef inline int import_ufunc() except -1:
+ *     try:
+ *         _import_umath()             # <<<<<<<<<<<<<<
+ *     except Exception:
+ *         raise ImportError("numpy.core.umath failed to import")
+ */
+      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 955, __pyx_L3_error)
+
+      /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":954
+ * 
+ * cdef inline int import_ufunc() except -1:
+ *     try:             # <<<<<<<<<<<<<<
+ *         _import_umath()
+ *     except Exception:
+ */
+    }
+    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
+    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
+    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
+    goto __pyx_L8_try_end;
+    __pyx_L3_error:;
+
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":956
+ *     try:
+ *         _import_umath()
+ *     except Exception:             # <<<<<<<<<<<<<<
+ *         raise ImportError("numpy.core.umath failed to import")
+ * 
+ */
+    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
+    if (__pyx_t_4) {
+      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
+      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 956, __pyx_L5_except_error)
+      __Pyx_GOTREF(__pyx_t_5);
+      __Pyx_GOTREF(__pyx_t_6);
+      __Pyx_GOTREF(__pyx_t_7);
+
+      /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":957
+ *         _import_umath()
+ *     except Exception:
+ *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
+ * 
+ * cdef extern from *:
+ */
+      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 957, __pyx_L5_except_error)
+      __Pyx_GOTREF(__pyx_t_8);
+      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
+      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
+      __PYX_ERR(1, 957, __pyx_L5_except_error)
+    }
+    goto __pyx_L5_except_error;
+    __pyx_L5_except_error:;
+
+    /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":954
+ * 
+ * cdef inline int import_ufunc() except -1:
+ *     try:             # <<<<<<<<<<<<<<
+ *         _import_umath()
+ *     except Exception:
+ */
+    __Pyx_XGIVEREF(__pyx_t_1);
+    __Pyx_XGIVEREF(__pyx_t_2);
+    __Pyx_XGIVEREF(__pyx_t_3);
+    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
+    goto __pyx_L1_error;
+    __pyx_L8_try_end:;
+  }
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":953
+ *         raise ImportError("numpy.core.umath failed to import")
+ * 
+ * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
+ *     try:
+ *         _import_umath()
+ */
+
+  /* function exit code */
+  __pyx_r = 0;
+  goto __pyx_L0;
+  __pyx_L1_error:;
+  __Pyx_XDECREF(__pyx_t_5);
+  __Pyx_XDECREF(__pyx_t_6);
+  __Pyx_XDECREF(__pyx_t_7);
+  __Pyx_XDECREF(__pyx_t_8);
+  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
+  __pyx_r = -1;
+  __pyx_L0:;
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
+
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":967
+ * 
+ * 
+ * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
+ *     """
+ *     Cython equivalent of `isinstance(obj, np.timedelta64)`
+ */
+
+static CYTHON_INLINE int __pyx_f_5numpy_is_timedelta64_object(PyObject *__pyx_v_obj) {
+  int __pyx_r;
+  __Pyx_RefNannyDeclarations
+  __Pyx_RefNannySetupContext("is_timedelta64_object", 0);
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":979
+ *     bool
+ *     """
+ *     return PyObject_TypeCheck(obj, &PyTimedeltaArrType_Type)             # <<<<<<<<<<<<<<
+ * 
+ * 
+ */
+  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyTimedeltaArrType_Type));
+  goto __pyx_L0;
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":967
+ * 
+ * 
+ * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
+ *     """
+ *     Cython equivalent of `isinstance(obj, np.timedelta64)`
+ */
+
+  /* function exit code */
+  __pyx_L0:;
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
+
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":982
+ * 
+ * 
+ * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
+ *     """
+ *     Cython equivalent of `isinstance(obj, np.datetime64)`
+ */
+
+static CYTHON_INLINE int __pyx_f_5numpy_is_datetime64_object(PyObject *__pyx_v_obj) {
+  int __pyx_r;
+  __Pyx_RefNannyDeclarations
+  __Pyx_RefNannySetupContext("is_datetime64_object", 0);
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":994
+ *     bool
+ *     """
+ *     return PyObject_TypeCheck(obj, &PyDatetimeArrType_Type)             # <<<<<<<<<<<<<<
+ * 
+ * 
+ */
+  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyDatetimeArrType_Type));
+  goto __pyx_L0;
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":982
+ * 
+ * 
+ * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
+ *     """
+ *     Cython equivalent of `isinstance(obj, np.datetime64)`
+ */
+
+  /* function exit code */
+  __pyx_L0:;
+  __Pyx_RefNannyFinishContext();
+  return __pyx_r;
+}
+
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":997
+ * 
+ * 
+ * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
+ *     """
+ *     returns the int64 value underlying scalar numpy datetime64 object
  */
-      __Pyx_TraceLine(1048,0,__PYX_ERR(2, 1048, __pyx_L3_error))
-      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1048, __pyx_L3_error)
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1047
+static CYTHON_INLINE npy_datetime __pyx_f_5numpy_get_datetime64_value(PyObject *__pyx_v_obj) {
+  npy_datetime __pyx_r;
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":1004
+ *     also needed.  That can be found using `get_datetime64_unit`.
+ *     """
+ *     return (<PyDatetimeScalarObject*>obj).obval             # <<<<<<<<<<<<<<
+ * 
  * 
- * cdef inline int import_ufunc() except -1:
- *     try:             # <<<<<<<<<<<<<<
- *         _import_umath()
- *     except Exception:
  */
-    }
-    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
-    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
-    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
-    goto __pyx_L8_try_end;
-    __pyx_L3_error:;
+  __pyx_r = ((PyDatetimeScalarObject *)__pyx_v_obj)->obval;
+  goto __pyx_L0;
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1049
- *     try:
- *         _import_umath()
- *     except Exception:             # <<<<<<<<<<<<<<
- *         raise ImportError("numpy.core.umath failed to import")
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":997
+ * 
+ * 
+ * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
+ *     """
+ *     returns the int64 value underlying scalar numpy datetime64 object
  */
-    __Pyx_TraceLine(1049,0,__PYX_ERR(2, 1049, __pyx_L5_except_error))
-    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
-    if (__pyx_t_4) {
-      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
-      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1049, __pyx_L5_except_error)
-      __Pyx_GOTREF(__pyx_t_5);
-      __Pyx_GOTREF(__pyx_t_6);
-      __Pyx_GOTREF(__pyx_t_7);
 
-      /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1050
- *         _import_umath()
- *     except Exception:
- *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
+  /* function exit code */
+  __pyx_L0:;
+  return __pyx_r;
+}
+
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":1007
+ * 
+ * 
+ * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
+ *     """
+ *     returns the int64 value underlying scalar numpy timedelta64 object
  */
-      __Pyx_TraceLine(1050,0,__PYX_ERR(2, 1050, __pyx_L5_except_error))
-      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__53, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1050, __pyx_L5_except_error)
-      __Pyx_GOTREF(__pyx_t_8);
-      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
-      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
-      __PYX_ERR(2, 1050, __pyx_L5_except_error)
-    }
-    goto __pyx_L5_except_error;
-    __pyx_L5_except_error:;
 
-    /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1047
+static CYTHON_INLINE npy_timedelta __pyx_f_5numpy_get_timedelta64_value(PyObject *__pyx_v_obj) {
+  npy_timedelta __pyx_r;
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":1011
+ *     returns the int64 value underlying scalar numpy timedelta64 object
+ *     """
+ *     return (<PyTimedeltaScalarObject*>obj).obval             # <<<<<<<<<<<<<<
+ * 
  * 
- * cdef inline int import_ufunc() except -1:
- *     try:             # <<<<<<<<<<<<<<
- *         _import_umath()
- *     except Exception:
  */
-    __Pyx_XGIVEREF(__pyx_t_1);
-    __Pyx_XGIVEREF(__pyx_t_2);
-    __Pyx_XGIVEREF(__pyx_t_3);
-    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
-    goto __pyx_L1_error;
-    __pyx_L8_try_end:;
-  }
+  __pyx_r = ((PyTimedeltaScalarObject *)__pyx_v_obj)->obval;
+  goto __pyx_L0;
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1046
- *         raise ImportError("numpy.core.umath failed to import")
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":1007
  * 
- * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
- *     try:
- *         _import_umath()
+ * 
+ * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
+ *     """
+ *     returns the int64 value underlying scalar numpy timedelta64 object
  */
 
   /* function exit code */
-  __pyx_r = 0;
+  __pyx_L0:;
+  return __pyx_r;
+}
+
+/* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":1014
+ * 
+ * 
+ * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
+ *     """
+ *     returns the unit part of the dtype for a numpy datetime64 object.
+ */
+
+static CYTHON_INLINE NPY_DATETIMEUNIT __pyx_f_5numpy_get_datetime64_unit(PyObject *__pyx_v_obj) {
+  NPY_DATETIMEUNIT __pyx_r;
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":1018
+ *     returns the unit part of the dtype for a numpy datetime64 object.
+ *     """
+ *     return <NPY_DATETIMEUNIT>(<PyDatetimeScalarObject*>obj).obmeta.base             # <<<<<<<<<<<<<<
+ */
+  __pyx_r = ((NPY_DATETIMEUNIT)((PyDatetimeScalarObject *)__pyx_v_obj)->obmeta.base);
   goto __pyx_L0;
-  __pyx_L1_error:;
-  __Pyx_XDECREF(__pyx_t_5);
-  __Pyx_XDECREF(__pyx_t_6);
-  __Pyx_XDECREF(__pyx_t_7);
-  __Pyx_XDECREF(__pyx_t_8);
-  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
-  __pyx_r = -1;
+
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":1014
+ * 
+ * 
+ * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
+ *     """
+ *     returns the unit part of the dtype for a numpy datetime64 object.
+ */
+
+  /* function exit code */
   __pyx_L0:;
-  __Pyx_TraceReturn(Py_None, 0);
-  __Pyx_RefNannyFinishContext();
   return __pyx_r;
 }
 static struct __pyx_vtabstruct_7cartopy_4_crs_CRS __pyx_vtable_7cartopy_4_crs_CRS;
@@ -14298,9 +12068,9 @@ static void __pyx_tp_dealloc_7cartopy_4_
   {
     PyObject *etype, *eval, *etb;
     PyErr_Fetch(&etype, &eval, &etb);
-    ++Py_REFCNT(o);
+    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
     __pyx_pw_7cartopy_4_crs_3CRS_3__dealloc__(o);
-    --Py_REFCNT(o);
+    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
     PyErr_Restore(etype, eval, etb);
   }
   Py_CLEAR(p->proj4_init);
@@ -14347,6 +12117,7 @@ static PyMethodDef __pyx_methods_7cartop
   {"_as_mpl_transform", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cartopy_4_crs_3CRS_17_as_mpl_transform, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cartopy_4_crs_3CRS_16_as_mpl_transform},
   {"as_geocentric", (PyCFunction)__pyx_pw_7cartopy_4_crs_3CRS_19as_geocentric, METH_NOARGS, __pyx_doc_7cartopy_4_crs_3CRS_18as_geocentric},
   {"as_geodetic", (PyCFunction)__pyx_pw_7cartopy_4_crs_3CRS_21as_geodetic, METH_NOARGS, __pyx_doc_7cartopy_4_crs_3CRS_20as_geodetic},
+  {"is_geodetic", (PyCFunction)__pyx_pw_7cartopy_4_crs_3CRS_23is_geodetic, METH_NOARGS, __pyx_doc_7cartopy_4_crs_3CRS_22is_geodetic},
   {"transform_point", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cartopy_4_crs_3CRS_25transform_point, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cartopy_4_crs_3CRS_24transform_point},
   {"transform_points", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cartopy_4_crs_3CRS_27transform_points, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cartopy_4_crs_3CRS_26transform_points},
   {"transform_vectors", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cartopy_4_crs_3CRS_29transform_vectors, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cartopy_4_crs_3CRS_28transform_vectors},
@@ -15038,28 +12809,15 @@ static struct PyModuleDef __pyx_modulede
 #endif
 
 static __Pyx_StringTabEntry __pyx_string_tab[] = {
-  {&__pyx_kp_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 0},
-  {&__pyx_kp_s_16, __pyx_k_16, sizeof(__pyx_k_16), 0, 0, 1, 0},
-  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
-  {&__pyx_kp_s_Axes_should_be_an_instance_of_Ge, __pyx_k_Axes_should_be_an_instance_of_Ge, sizeof(__pyx_k_Axes_should_be_an_instance_of_Ge), 0, 0, 1, 0},
+  {&__pyx_kp_u_, __pyx_k_, sizeof(__pyx_k_), 0, 1, 0, 0},
+  {&__pyx_kp_u_16, __pyx_k_16, sizeof(__pyx_k_16), 0, 1, 0, 0},
+  {&__pyx_kp_u_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 1, 0, 0},
+  {&__pyx_kp_u_Axes_should_be_an_instance_of_Ge, __pyx_k_Axes_should_be_an_instance_of_Ge, sizeof(__pyx_k_Axes_should_be_an_instance_of_Ge), 0, 1, 0, 0},
   {&__pyx_n_s_CRS, __pyx_k_CRS, sizeof(__pyx_k_CRS), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS___getstate, __pyx_k_CRS___getstate, sizeof(__pyx_k_CRS___getstate), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS___reduce, __pyx_k_CRS___reduce, sizeof(__pyx_k_CRS___reduce), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS___setstate, __pyx_k_CRS___setstate, sizeof(__pyx_k_CRS___setstate), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS__as_mpl_transform, __pyx_k_CRS__as_mpl_transform, sizeof(__pyx_k_CRS__as_mpl_transform), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS_as_geocentric, __pyx_k_CRS_as_geocentric, sizeof(__pyx_k_CRS_as_geocentric), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS_as_geodetic, __pyx_k_CRS_as_geodetic, sizeof(__pyx_k_CRS_as_geodetic), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS_is_geodetic, __pyx_k_CRS_is_geodetic, sizeof(__pyx_k_CRS_is_geodetic), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS_state, __pyx_k_CRS_state, sizeof(__pyx_k_CRS_state), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS_transform_point, __pyx_k_CRS_transform_point, sizeof(__pyx_k_CRS_transform_point), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS_transform_points, __pyx_k_CRS_transform_points, sizeof(__pyx_k_CRS_transform_points), 0, 0, 1, 1},
-  {&__pyx_n_s_CRS_transform_vectors, __pyx_k_CRS_transform_vectors, sizeof(__pyx_k_CRS_transform_vectors), 0, 0, 1, 1},
   {&__pyx_kp_s_Define_a_Geocentric_coordinate, __pyx_k_Define_a_Geocentric_coordinate, sizeof(__pyx_k_Define_a_Geocentric_coordinate), 0, 0, 1, 0},
   {&__pyx_kp_s_Define_a_latitude_longitude_coo, __pyx_k_Define_a_latitude_longitude_coo, sizeof(__pyx_k_Define_a_latitude_longitude_coo), 0, 0, 1, 0},
   {&__pyx_kp_s_Define_an_ellipsoid_and_optiona, __pyx_k_Define_an_ellipsoid_and_optiona, sizeof(__pyx_k_Define_an_ellipsoid_and_optiona), 0, 0, 1, 0},
-  {&__pyx_kp_s_Error_from_proj, __pyx_k_Error_from_proj, sizeof(__pyx_k_Error_from_proj), 0, 0, 1, 0},
-  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
-  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
+  {&__pyx_kp_u_Error_from_proj, __pyx_k_Error_from_proj, sizeof(__pyx_k_Error_from_proj), 0, 1, 0, 0},
   {&__pyx_n_s_GeoAxes, __pyx_k_GeoAxes, sizeof(__pyx_k_GeoAxes), 0, 0, 1, 1},
   {&__pyx_n_s_Geocentric, __pyx_k_Geocentric, sizeof(__pyx_k_Geocentric), 0, 0, 1, 1},
   {&__pyx_n_s_Geocentric___init, __pyx_k_Geocentric___init, sizeof(__pyx_k_Geocentric___init), 0, 0, 1, 1},
@@ -15071,7 +12829,6 @@ static __Pyx_StringTabEntry __pyx_string
   {&__pyx_n_s_Globe_to_proj4_params_locals_gen, __pyx_k_Globe_to_proj4_params_locals_gen, sizeof(__pyx_k_Globe_to_proj4_params_locals_gen), 0, 0, 1, 1},
   {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
   {&__pyx_n_s_InterProjectionTransform, __pyx_k_InterProjectionTransform, sizeof(__pyx_k_InterProjectionTransform), 0, 0, 1, 1},
-  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
   {&__pyx_n_s_NotImplemented, __pyx_k_NotImplemented, sizeof(__pyx_k_NotImplemented), 0, 0, 1, 1},
   {&__pyx_n_s_OrderedDict, __pyx_k_OrderedDict, sizeof(__pyx_k_OrderedDict), 0, 0, 1, 1},
   {&__pyx_n_s_PROJ4_RELEASE, __pyx_k_PROJ4_RELEASE, sizeof(__pyx_k_PROJ4_RELEASE), 0, 0, 1, 1},
@@ -15080,28 +12837,25 @@ static __Pyx_StringTabEntry __pyx_string
   {&__pyx_n_s_Proj4Error, __pyx_k_Proj4Error, sizeof(__pyx_k_Proj4Error), 0, 0, 1, 1},
   {&__pyx_n_s_Proj4Error___init, __pyx_k_Proj4Error___init, sizeof(__pyx_k_Proj4Error___init), 0, 0, 1, 1},
   {&__pyx_kp_s_Raised_when_there_has_been_an_e, __pyx_k_Raised_when_there_has_been_an_e, sizeof(__pyx_k_Raised_when_there_has_been_an_e), 0, 0, 1, 0},
-  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
-  {&__pyx_kp_s_Some_vectors_at_source_domain_co, __pyx_k_Some_vectors_at_source_domain_co, sizeof(__pyx_k_Some_vectors_at_source_domain_co), 0, 0, 1, 0},
-  {&__pyx_kp_s_The_projection_does_not_handle_e, __pyx_k_The_projection_does_not_handle_e, sizeof(__pyx_k_The_projection_does_not_handle_e), 0, 0, 1, 0},
+  {&__pyx_kp_u_Some_vectors_at_source_domain_co, __pyx_k_Some_vectors_at_source_domain_co, sizeof(__pyx_k_Some_vectors_at_source_domain_co), 0, 1, 0, 0},
+  {&__pyx_kp_u_The_projection_does_not_handle_e, __pyx_k_The_projection_does_not_handle_e, sizeof(__pyx_k_The_projection_does_not_handle_e), 0, 1, 0, 0},
   {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
-  {&__pyx_n_s_WGS84, __pyx_k_WGS84, sizeof(__pyx_k_WGS84), 0, 0, 1, 1},
+  {&__pyx_n_u_WGS84, __pyx_k_WGS84, sizeof(__pyx_k_WGS84), 0, 1, 0, 1},
   {&__pyx_n_s_WGS84_SEMIMAJOR_AXIS, __pyx_k_WGS84_SEMIMAJOR_AXIS, sizeof(__pyx_k_WGS84_SEMIMAJOR_AXIS), 0, 0, 1, 1},
   {&__pyx_n_s_WGS84_SEMIMINOR_AXIS, __pyx_k_WGS84_SEMIMINOR_AXIS, sizeof(__pyx_k_WGS84_SEMIMINOR_AXIS), 0, 0, 1, 1},
-  {&__pyx_kp_s__11, __pyx_k__11, sizeof(__pyx_k__11), 0, 0, 1, 0},
-  {&__pyx_kp_s__12, __pyx_k__12, sizeof(__pyx_k__12), 0, 0, 1, 0},
-  {&__pyx_kp_s__13, __pyx_k__13, sizeof(__pyx_k__13), 0, 0, 1, 0},
-  {&__pyx_n_s__21, __pyx_k__21, sizeof(__pyx_k__21), 0, 0, 1, 1},
-  {&__pyx_kp_s__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 0, 1, 0},
-  {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
+  {&__pyx_n_s__12, __pyx_k__12, sizeof(__pyx_k__12), 0, 0, 1, 1},
+  {&__pyx_kp_u__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 1, 0, 0},
+  {&__pyx_kp_u__6, __pyx_k__6, sizeof(__pyx_k__6), 0, 1, 0, 0},
+  {&__pyx_kp_u__7, __pyx_k__7, sizeof(__pyx_k__7), 0, 1, 0, 0},
+  {&__pyx_kp_u__8, __pyx_k__8, sizeof(__pyx_k__8), 0, 1, 0, 0},
+  {&__pyx_n_u_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 1, 0, 1},
   {&__pyx_n_s_any, __pyx_k_any, sizeof(__pyx_k_any), 0, 0, 1, 1},
   {&__pyx_n_s_arctan2, __pyx_k_arctan2, sizeof(__pyx_k_arctan2), 0, 0, 1, 1},
   {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
   {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
-  {&__pyx_n_s_as_geocentric, __pyx_k_as_geocentric, sizeof(__pyx_k_as_geocentric), 0, 0, 1, 1},
-  {&__pyx_n_s_as_geodetic, __pyx_k_as_geodetic, sizeof(__pyx_k_as_geodetic), 0, 0, 1, 1},
-  {&__pyx_n_s_as_mpl_transform, __pyx_k_as_mpl_transform, sizeof(__pyx_k_as_mpl_transform), 0, 0, 1, 1},
   {&__pyx_n_s_axes, __pyx_k_axes, sizeof(__pyx_k_axes), 0, 0, 1, 1},
   {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
+  {&__pyx_n_u_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 1, 0, 1},
   {&__pyx_n_s_cartopy__crs, __pyx_k_cartopy__crs, sizeof(__pyx_k_cartopy__crs), 0, 0, 1, 1},
   {&__pyx_n_s_cartopy_mpl_geoaxes, __pyx_k_cartopy_mpl_geoaxes, sizeof(__pyx_k_cartopy_mpl_geoaxes), 0, 0, 1, 1},
   {&__pyx_n_s_class, __pyx_k_class, sizeof(__pyx_k_class), 0, 0, 1, 1},
@@ -15110,96 +12864,82 @@ static __Pyx_StringTabEntry __pyx_string
   {&__pyx_n_s_collections, __pyx_k_collections, sizeof(__pyx_k_collections), 0, 0, 1, 1},
   {&__pyx_n_s_copy, __pyx_k_copy, sizeof(__pyx_k_copy), 0, 0, 1, 1},
   {&__pyx_n_s_cos, __pyx_k_cos, sizeof(__pyx_k_cos), 0, 0, 1, 1},
-  {&__pyx_n_s_cx, __pyx_k_cx, sizeof(__pyx_k_cx), 0, 0, 1, 1},
-  {&__pyx_n_s_cy, __pyx_k_cy, sizeof(__pyx_k_cy), 0, 0, 1, 1},
-  {&__pyx_kp_s_d_d_d, __pyx_k_d_d_d, sizeof(__pyx_k_d_d_d), 0, 0, 1, 0},
+  {&__pyx_kp_s_crs_pyx, __pyx_k_crs_pyx, sizeof(__pyx_k_crs_pyx), 0, 0, 1, 0},
+  {&__pyx_kp_u_d_d_d, __pyx_k_d_d_d, sizeof(__pyx_k_d_d_d), 0, 1, 0, 0},
   {&__pyx_n_s_datum, __pyx_k_datum, sizeof(__pyx_k_datum), 0, 0, 1, 1},
+  {&__pyx_n_u_datum, __pyx_k_datum, sizeof(__pyx_k_datum), 0, 1, 0, 1},
   {&__pyx_n_s_decode, __pyx_k_decode, sizeof(__pyx_k_decode), 0, 0, 1, 1},
   {&__pyx_n_s_deg2rad, __pyx_k_deg2rad, sizeof(__pyx_k_deg2rad), 0, 0, 1, 1},
-  {&__pyx_n_s_delta, __pyx_k_delta, sizeof(__pyx_k_delta), 0, 0, 1, 1},
   {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
   {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
   {&__pyx_n_s_double, __pyx_k_double, sizeof(__pyx_k_double), 0, 0, 1, 1},
   {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
   {&__pyx_n_s_ellipse, __pyx_k_ellipse, sizeof(__pyx_k_ellipse), 0, 0, 1, 1},
-  {&__pyx_n_s_ellps, __pyx_k_ellps, sizeof(__pyx_k_ellps), 0, 0, 1, 1},
+  {&__pyx_n_u_ellps, __pyx_k_ellps, sizeof(__pyx_k_ellps), 0, 1, 0, 1},
   {&__pyx_n_s_empty, __pyx_k_empty, sizeof(__pyx_k_empty), 0, 0, 1, 1},
-  {&__pyx_n_s_eps, __pyx_k_eps, sizeof(__pyx_k_eps), 0, 0, 1, 1},
-  {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
-  {&__pyx_n_s_factor, __pyx_k_factor, sizeof(__pyx_k_factor), 0, 0, 1, 1},
+  {&__pyx_n_u_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 1, 0, 1},
   {&__pyx_n_s_flatten, __pyx_k_flatten, sizeof(__pyx_k_flatten), 0, 0, 1, 1},
   {&__pyx_n_s_flattening, __pyx_k_flattening, sizeof(__pyx_k_flattening), 0, 0, 1, 1},
   {&__pyx_n_s_float32, __pyx_k_float32, sizeof(__pyx_k_float32), 0, 0, 1, 1},
   {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
   {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
-  {&__pyx_n_s_geoaxes, __pyx_k_geoaxes, sizeof(__pyx_k_geoaxes), 0, 0, 1, 1},
-  {&__pyx_n_s_geocent, __pyx_k_geocent, sizeof(__pyx_k_geocent), 0, 0, 1, 1},
+  {&__pyx_n_u_geocent, __pyx_k_geocent, sizeof(__pyx_k_geocent), 0, 1, 0, 1},
   {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
   {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
   {&__pyx_n_s_globe, __pyx_k_globe, sizeof(__pyx_k_globe), 0, 0, 1, 1},
+  {&__pyx_n_u_globe, __pyx_k_globe, sizeof(__pyx_k_globe), 0, 1, 0, 1},
   {&__pyx_n_s_group, __pyx_k_group, sizeof(__pyx_k_group), 0, 0, 1, 1},
   {&__pyx_n_s_handles_ellipses, __pyx_k_handles_ellipses, sizeof(__pyx_k_handles_ellipses), 0, 0, 1, 1},
   {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
   {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
-  {&__pyx_n_s_invalid_x, __pyx_k_invalid_x, sizeof(__pyx_k_invalid_x), 0, 0, 1, 1},
-  {&__pyx_n_s_invalid_y, __pyx_k_invalid_y, sizeof(__pyx_k_invalid_y), 0, 0, 1, 1},
   {&__pyx_n_s_inverse_flattening, __pyx_k_inverse_flattening, sizeof(__pyx_k_inverse_flattening), 0, 0, 1, 1},
   {&__pyx_n_s_is_geodetic, __pyx_k_is_geodetic, sizeof(__pyx_k_is_geodetic), 0, 0, 1, 1},
   {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
-  {&__pyx_n_s_join, __pyx_k_join, sizeof(__pyx_k_join), 0, 0, 1, 1},
-  {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
-  {&__pyx_n_s_latlon, __pyx_k_latlon, sizeof(__pyx_k_latlon), 0, 0, 1, 1},
-  {&__pyx_n_s_latlong, __pyx_k_latlong, sizeof(__pyx_k_latlong), 0, 0, 1, 1},
-  {&__pyx_kp_s_lib_cartopy__crs_pyx, __pyx_k_lib_cartopy__crs_pyx, sizeof(__pyx_k_lib_cartopy__crs_pyx), 0, 0, 1, 0},
+  {&__pyx_n_u_latlon, __pyx_k_latlon, sizeof(__pyx_k_latlon), 0, 1, 0, 1},
+  {&__pyx_n_u_latlong, __pyx_k_latlong, sizeof(__pyx_k_latlong), 0, 1, 0, 1},
   {&__pyx_n_s_logical_or, __pyx_k_logical_or, sizeof(__pyx_k_logical_or), 0, 0, 1, 1},
   {&__pyx_n_s_logical_xor, __pyx_k_logical_xor, sizeof(__pyx_k_logical_xor), 0, 0, 1, 1},
-  {&__pyx_n_s_longlat, __pyx_k_longlat, sizeof(__pyx_k_longlat), 0, 0, 1, 1},
+  {&__pyx_n_u_longlat, __pyx_k_longlat, sizeof(__pyx_k_longlat), 0, 1, 0, 1},
   {&__pyx_n_s_lonlat, __pyx_k_lonlat, sizeof(__pyx_k_lonlat), 0, 0, 1, 1},
+  {&__pyx_n_u_lonlat, __pyx_k_lonlat, sizeof(__pyx_k_lonlat), 0, 1, 0, 1},
   {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
   {&__pyx_n_s_match, __pyx_k_match, sizeof(__pyx_k_match), 0, 0, 1, 1},
   {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
   {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
   {&__pyx_n_s_msg, __pyx_k_msg, sizeof(__pyx_k_msg), 0, 0, 1, 1},
   {&__pyx_n_s_nadgrids, __pyx_k_nadgrids, sizeof(__pyx_k_nadgrids), 0, 0, 1, 1},
+  {&__pyx_n_u_nadgrids, __pyx_k_nadgrids, sizeof(__pyx_k_nadgrids), 0, 1, 0, 1},
   {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
   {&__pyx_n_s_nan, __pyx_k_nan, sizeof(__pyx_k_nan), 0, 0, 1, 1},
-  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
-  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
+  {&__pyx_n_u_nan, __pyx_k_nan, sizeof(__pyx_k_nan), 0, 1, 0, 1},
   {&__pyx_n_s_ndim, __pyx_k_ndim, sizeof(__pyx_k_ndim), 0, 0, 1, 1},
-  {&__pyx_kp_s_no_defs, __pyx_k_no_defs, sizeof(__pyx_k_no_defs), 0, 0, 1, 0},
+  {&__pyx_kp_u_no_defs, __pyx_k_no_defs, sizeof(__pyx_k_no_defs), 0, 1, 0, 0},
   {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
   {&__pyx_n_s_npts, __pyx_k_npts, sizeof(__pyx_k_npts), 0, 0, 1, 1},
   {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
-  {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
-  {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
-  {&__pyx_n_s_o_proj, __pyx_k_o_proj, sizeof(__pyx_k_o_proj), 0, 0, 1, 1},
-  {&__pyx_n_s_ob_tran, __pyx_k_ob_tran, sizeof(__pyx_k_ob_tran), 0, 0, 1, 1},
+  {&__pyx_kp_u_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 1, 0, 0},
+  {&__pyx_kp_u_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 1, 0, 0},
+  {&__pyx_n_u_o_proj, __pyx_k_o_proj, sizeof(__pyx_k_o_proj), 0, 1, 0, 1},
+  {&__pyx_n_u_ob_tran, __pyx_k_ob_tran, sizeof(__pyx_k_ob_tran), 0, 1, 0, 1},
   {&__pyx_n_s_object, __pyx_k_object, sizeof(__pyx_k_object), 0, 0, 1, 1},
   {&__pyx_n_s_offset, __pyx_k_offset, sizeof(__pyx_k_offset), 0, 0, 1, 1},
   {&__pyx_n_s_pi, __pyx_k_pi, sizeof(__pyx_k_pi), 0, 0, 1, 1},
   {&__pyx_n_s_pop, __pyx_k_pop, sizeof(__pyx_k_pop), 0, 0, 1, 1},
   {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
-  {&__pyx_n_s_problem_points, __pyx_k_problem_points, sizeof(__pyx_k_problem_points), 0, 0, 1, 1},
-  {&__pyx_n_s_proj, __pyx_k_proj, sizeof(__pyx_k_proj), 0, 0, 1, 1},
-  {&__pyx_n_s_proj4, __pyx_k_proj4, sizeof(__pyx_k_proj4), 0, 0, 1, 1},
+  {&__pyx_n_u_proj, __pyx_k_proj, sizeof(__pyx_k_proj), 0, 1, 0, 1},
+  {&__pyx_n_u_proj4, __pyx_k_proj4, sizeof(__pyx_k_proj4), 0, 1, 0, 1},
   {&__pyx_n_s_proj4_init, __pyx_k_proj4_init, sizeof(__pyx_k_proj4_init), 0, 0, 1, 1},
+  {&__pyx_n_u_proj4_init, __pyx_k_proj4_init, sizeof(__pyx_k_proj4_init), 0, 1, 0, 1},
   {&__pyx_n_s_proj4_params, __pyx_k_proj4_params, sizeof(__pyx_k_proj4_params), 0, 0, 1, 1},
-  {&__pyx_n_s_proj_xyz, __pyx_k_proj_xyz, sizeof(__pyx_k_proj_xyz), 0, 0, 1, 1},
-  {&__pyx_n_s_projected_angles, __pyx_k_projected_angles, sizeof(__pyx_k_projected_angles), 0, 0, 1, 1},
-  {&__pyx_n_s_projected_u, __pyx_k_projected_u, sizeof(__pyx_k_projected_u), 0, 0, 1, 1},
-  {&__pyx_n_s_projected_v, __pyx_k_projected_v, sizeof(__pyx_k_projected_v), 0, 0, 1, 1},
+  {&__pyx_n_u_proj4_params, __pyx_k_proj4_params, sizeof(__pyx_k_proj4_params), 0, 1, 0, 1},
   {&__pyx_n_s_projection, __pyx_k_projection, sizeof(__pyx_k_projection), 0, 0, 1, 1},
   {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
   {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
   {&__pyx_n_s_rad2deg, __pyx_k_rad2deg, sizeof(__pyx_k_rad2deg), 0, 0, 1, 1},
   {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
   {&__pyx_n_s_re, __pyx_k_re, sizeof(__pyx_k_re), 0, 0, 1, 1},
-  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
   {&__pyx_n_s_reshape, __pyx_k_reshape, sizeof(__pyx_k_reshape), 0, 0, 1, 1},
-  {&__pyx_n_s_result, __pyx_k_result, sizeof(__pyx_k_result), 0, 0, 1, 1},
-  {&__pyx_n_s_result_shape, __pyx_k_result_shape, sizeof(__pyx_k_result_shape), 0, 0, 1, 1},
-  {&__pyx_n_s_reversed_vectors, __pyx_k_reversed_vectors, sizeof(__pyx_k_reversed_vectors), 0, 0, 1, 1},
-  {&__pyx_n_s_rf, __pyx_k_rf, sizeof(__pyx_k_rf), 0, 0, 1, 1},
+  {&__pyx_n_u_rf, __pyx_k_rf, sizeof(__pyx_k_rf), 0, 1, 0, 1},
   {&__pyx_n_s_safe_pj_transform, __pyx_k_safe_pj_transform, sizeof(__pyx_k_safe_pj_transform), 0, 0, 1, 1},
   {&__pyx_n_s_safe_pj_transform_611, __pyx_k_safe_pj_transform_611, sizeof(__pyx_k_safe_pj_transform_611), 0, 0, 1, 1},
   {&__pyx_n_s_safe_pj_transform_pre_611, __pyx_k_safe_pj_transform_pre_611, sizeof(__pyx_k_safe_pj_transform_pre_611), 0, 0, 1, 1},
@@ -15208,54 +12948,40 @@ static __Pyx_StringTabEntry __pyx_string
   {&__pyx_n_s_semimajor_axis, __pyx_k_semimajor_axis, sizeof(__pyx_k_semimajor_axis), 0, 0, 1, 1},
   {&__pyx_n_s_semiminor_axis, __pyx_k_semiminor_axis, sizeof(__pyx_k_semiminor_axis), 0, 0, 1, 1},
   {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
-  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
   {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
   {&__pyx_n_s_sin, __pyx_k_sin, sizeof(__pyx_k_sin), 0, 0, 1, 1},
   {&__pyx_n_s_six, __pyx_k_six, sizeof(__pyx_k_six), 0, 0, 1, 1},
-  {&__pyx_n_s_source_x, __pyx_k_source_x, sizeof(__pyx_k_source_x), 0, 0, 1, 1},
-  {&__pyx_n_s_source_y, __pyx_k_source_y, sizeof(__pyx_k_source_y), 0, 0, 1, 1},
   {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
   {&__pyx_n_s_src_crs, __pyx_k_src_crs, sizeof(__pyx_k_src_crs), 0, 0, 1, 1},
   {&__pyx_n_s_src_proj, __pyx_k_src_proj, sizeof(__pyx_k_src_proj), 0, 0, 1, 1},
-  {&__pyx_n_s_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
   {&__pyx_n_s_status, __pyx_k_status, sizeof(__pyx_k_status), 0, 0, 1, 1},
   {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
-  {&__pyx_n_s_target_x, __pyx_k_target_x, sizeof(__pyx_k_target_x), 0, 0, 1, 1},
-  {&__pyx_n_s_target_x_perturbed, __pyx_k_target_x_perturbed, sizeof(__pyx_k_target_x_perturbed), 0, 0, 1, 1},
-  {&__pyx_n_s_target_y, __pyx_k_target_y, sizeof(__pyx_k_target_y), 0, 0, 1, 1},
-  {&__pyx_n_s_target_y_perturbed, __pyx_k_target_y_perturbed, sizeof(__pyx_k_target_y_perturbed), 0, 0, 1, 1},
   {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
   {&__pyx_n_s_tgt_crs, __pyx_k_tgt_crs, sizeof(__pyx_k_tgt_crs), 0, 0, 1, 1},
   {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
-  {&__pyx_n_s_to_meter, __pyx_k_to_meter, sizeof(__pyx_k_to_meter), 0, 0, 1, 1},
+  {&__pyx_n_u_to_meter, __pyx_k_to_meter, sizeof(__pyx_k_to_meter), 0, 1, 0, 1},
   {&__pyx_n_s_to_proj4_params, __pyx_k_to_proj4_params, sizeof(__pyx_k_to_proj4_params), 0, 0, 1, 1},
   {&__pyx_n_s_towgs84, __pyx_k_towgs84, sizeof(__pyx_k_towgs84), 0, 0, 1, 1},
+  {&__pyx_n_u_towgs84, __pyx_k_towgs84, sizeof(__pyx_k_towgs84), 0, 1, 0, 1},
   {&__pyx_n_s_transData, __pyx_k_transData, sizeof(__pyx_k_transData), 0, 0, 1, 1},
-  {&__pyx_n_s_transform_point, __pyx_k_transform_point, sizeof(__pyx_k_transform_point), 0, 0, 1, 1},
   {&__pyx_n_s_transform_points, __pyx_k_transform_points, sizeof(__pyx_k_transform_points), 0, 0, 1, 1},
   {&__pyx_n_s_transform_points_locals_genexpr, __pyx_k_transform_points_locals_genexpr, sizeof(__pyx_k_transform_points_locals_genexpr), 0, 0, 1, 1},
-  {&__pyx_n_s_transform_vectors, __pyx_k_transform_vectors, sizeof(__pyx_k_transform_vectors), 0, 0, 1, 1},
   {&__pyx_n_s_trap, __pyx_k_trap, sizeof(__pyx_k_trap), 0, 0, 1, 1},
   {&__pyx_n_s_u, __pyx_k_u, sizeof(__pyx_k_u), 0, 0, 1, 1},
-  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
   {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
   {&__pyx_n_s_v, __pyx_k_v, sizeof(__pyx_k_v), 0, 0, 1, 1},
-  {&__pyx_n_s_vector_angles, __pyx_k_vector_angles, sizeof(__pyx_k_vector_angles), 0, 0, 1, 1},
-  {&__pyx_n_s_vector_magnitudes, __pyx_k_vector_magnitudes, sizeof(__pyx_k_vector_magnitudes), 0, 0, 1, 1},
   {&__pyx_n_s_warn, __pyx_k_warn, sizeof(__pyx_k_warn), 0, 0, 1, 1},
   {&__pyx_n_s_warnings, __pyx_k_warnings, sizeof(__pyx_k_warnings), 0, 0, 1, 1},
   {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
-  {&__pyx_kp_s_x_and_y_arrays_must_be_1_or_2_di, __pyx_k_x_and_y_arrays_must_be_1_or_2_di, sizeof(__pyx_k_x_and_y_arrays_must_be_1_or_2_di), 0, 0, 1, 0},
-  {&__pyx_kp_s_x_and_y_arrays_must_have_the_sam, __pyx_k_x_and_y_arrays_must_have_the_sam, sizeof(__pyx_k_x_and_y_arrays_must_have_the_sam), 0, 0, 1, 0},
+  {&__pyx_kp_u_x_and_y_arrays_must_be_1_or_2_di, __pyx_k_x_and_y_arrays_must_be_1_or_2_di, sizeof(__pyx_k_x_and_y_arrays_must_be_1_or_2_di), 0, 1, 0, 0},
+  {&__pyx_kp_u_x_and_y_arrays_must_have_the_sam, __pyx_k_x_and_y_arrays_must_have_the_sam, sizeof(__pyx_k_x_and_y_arrays_must_have_the_sam), 0, 1, 0, 0},
   {&__pyx_n_s_x_limits, __pyx_k_x_limits, sizeof(__pyx_k_x_limits), 0, 0, 1, 1},
-  {&__pyx_n_s_x_perturbations, __pyx_k_x_perturbations, sizeof(__pyx_k_x_perturbations), 0, 0, 1, 1},
-  {&__pyx_kp_s_x_y_and_z_arrays_must_be_1_or_2, __pyx_k_x_y_and_z_arrays_must_be_1_or_2, sizeof(__pyx_k_x_y_and_z_arrays_must_be_1_or_2), 0, 0, 1, 0},
-  {&__pyx_kp_s_x_y_and_z_arrays_must_have_the_s, __pyx_k_x_y_and_z_arrays_must_have_the_s, sizeof(__pyx_k_x_y_and_z_arrays_must_have_the_s), 0, 0, 1, 0},
-  {&__pyx_kp_s_x_y_u_and_v_arrays_must_be_the_s, __pyx_k_x_y_u_and_v_arrays_must_be_the_s, sizeof(__pyx_k_x_y_u_and_v_arrays_must_be_the_s), 0, 0, 1, 0},
-  {&__pyx_kp_s_x_y_u_and_v_must_be_1_or_2_dimen, __pyx_k_x_y_u_and_v_must_be_1_or_2_dimen, sizeof(__pyx_k_x_y_u_and_v_must_be_1_or_2_dimen), 0, 0, 1, 0},
+  {&__pyx_kp_u_x_y_and_z_arrays_must_be_1_or_2, __pyx_k_x_y_and_z_arrays_must_be_1_or_2, sizeof(__pyx_k_x_y_and_z_arrays_must_be_1_or_2), 0, 1, 0, 0},
+  {&__pyx_kp_u_x_y_and_z_arrays_must_have_the_s, __pyx_k_x_y_and_z_arrays_must_have_the_s, sizeof(__pyx_k_x_y_and_z_arrays_must_have_the_s), 0, 1, 0, 0},
+  {&__pyx_kp_u_x_y_u_and_v_arrays_must_be_the_s, __pyx_k_x_y_u_and_v_arrays_must_be_the_s, sizeof(__pyx_k_x_y_u_and_v_arrays_must_be_the_s), 0, 1, 0, 0},
+  {&__pyx_kp_u_x_y_u_and_v_must_be_1_or_2_dimen, __pyx_k_x_y_u_and_v_must_be_1_or_2_dimen, sizeof(__pyx_k_x_y_u_and_v_must_be_1_or_2_dimen), 0, 1, 0, 0},
   {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
   {&__pyx_n_s_y_limits, __pyx_k_y_limits, sizeof(__pyx_k_y_limits), 0, 0, 1, 1},
-  {&__pyx_n_s_y_perturbations, __pyx_k_y_perturbations, sizeof(__pyx_k_y_perturbations), 0, 0, 1, 1},
   {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
   {0, 0, 0, 0, 0, 0, 0}
 };
@@ -15265,8 +12991,7 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
   __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 308, __pyx_L1_error)
   __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 414, __pyx_L1_error)
   __pyx_builtin_super = __Pyx_GetBuiltinName(__pyx_n_s_super); if (!__pyx_builtin_super) __PYX_ERR(0, 606, __pyx_L1_error)
-  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(2, 856, __pyx_L1_error)
-  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(2, 1038, __pyx_L1_error)
+  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(1, 945, __pyx_L1_error)
   return 0;
   __pyx_L1_error:;
   return -1;
@@ -15283,9 +13008,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  * 
  *     if (src_crs.proj4_params.get('proj', '') == 'ob_tran' and
  */
-  __pyx_tuple__4 = PyTuple_Pack(4, __pyx_n_s_latlon, __pyx_n_s_latlong, __pyx_n_s_lonlat, __pyx_n_s_longlat); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 76, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__4);
-  __Pyx_GIVEREF(__pyx_tuple__4);
+  __pyx_tuple__2 = PyTuple_Pack(4, __pyx_n_u_latlon, __pyx_n_u_latlong, __pyx_n_u_lonlat, __pyx_n_u_longlat); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 76, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__2);
+  __Pyx_GIVEREF(__pyx_tuple__2);
 
   /* "cartopy/_crs.pyx":78
  *     lonlat = ('latlon', 'latlong', 'lonlat', 'longlat')
@@ -15294,9 +13019,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *             src_crs.proj4_params.get('o_proj', '') in lonlat and
  *             'to_meter' in src_crs.proj4_params):
  */
-  __pyx_tuple__6 = PyTuple_Pack(2, __pyx_n_s_proj, __pyx_kp_s__5); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 78, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__6);
-  __Pyx_GIVEREF(__pyx_tuple__6);
+  __pyx_tuple__4 = PyTuple_Pack(2, __pyx_n_u_proj, __pyx_kp_u__3); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 78, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__4);
+  __Pyx_GIVEREF(__pyx_tuple__4);
 
   /* "cartopy/_crs.pyx":79
  * 
@@ -15305,9 +13030,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *             'to_meter' in src_crs.proj4_params):
  *        x *= src_crs.proj4_params['to_meter']
  */
-  __pyx_tuple__7 = PyTuple_Pack(2, __pyx_n_s_o_proj, __pyx_kp_s__5); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 79, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__7);
-  __Pyx_GIVEREF(__pyx_tuple__7);
+  __pyx_tuple__5 = PyTuple_Pack(2, __pyx_n_u_o_proj, __pyx_kp_u__3); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 79, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__5);
+  __Pyx_GIVEREF(__pyx_tuple__5);
 
   /* "cartopy/_crs.pyx":275
  *         # Remove the proj4 instance and the proj4_init string, which can
@@ -15316,9 +13041,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         state.pop('proj4_init', None)
  *         state['proj4_params'] = self.proj4_params
  */
-  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_n_s_proj4, Py_None); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 275, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__16);
-  __Pyx_GIVEREF(__pyx_tuple__16);
+  __pyx_tuple__9 = PyTuple_Pack(2, __pyx_n_u_proj4, Py_None); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 275, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__9);
+  __Pyx_GIVEREF(__pyx_tuple__9);
 
   /* "cartopy/_crs.pyx":276
  *         # be re-created (in __setstate__) from the other arguments.
@@ -15327,9 +13052,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         state['proj4_params'] = self.proj4_params
  *         return state
  */
-  __pyx_tuple__17 = PyTuple_Pack(2, __pyx_n_s_proj4_init, Py_None); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 276, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__17);
-  __Pyx_GIVEREF(__pyx_tuple__17);
+  __pyx_tuple__10 = PyTuple_Pack(2, __pyx_n_u_proj4_init, Py_None); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 276, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__10);
+  __Pyx_GIVEREF(__pyx_tuple__10);
 
   /* "cartopy/_crs.pyx":287
  *         """
@@ -15338,9 +13063,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         # Put everything else directly into the dict of the instance.
  *         self.__dict__.update(state)
  */
-  __pyx_tuple__19 = PyTuple_Pack(2, __pyx_n_s_proj4_params, __pyx_n_s_globe); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 287, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__19);
-  __Pyx_GIVEREF(__pyx_tuple__19);
+  __pyx_tuple__11 = PyTuple_Pack(2, __pyx_n_u_proj4_params, __pyx_n_u_globe); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 287, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__11);
+  __Pyx_GIVEREF(__pyx_tuple__11);
 
   /* "cartopy/_crs.pyx":414
  *         cdef np.ndarray[np.double_t, ndim=2] result
@@ -15349,9 +13074,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  * 
  *         if z is None:
  */
-  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 414, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__27);
-  __Pyx_GIVEREF(__pyx_tuple__27);
+  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 414, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__13);
+  __Pyx_GIVEREF(__pyx_tuple__13);
 
   /* "cartopy/_crs.pyx":418
  *         if z is None:
@@ -15360,9 +13085,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *             elif x.ndim != 1 or y.ndim != 1:
  *                 x, y = x.flatten(), y.flatten()
  */
-  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_s_x_and_y_arrays_must_be_1_or_2_di); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 418, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__28);
-  __Pyx_GIVEREF(__pyx_tuple__28);
+  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_u_x_and_y_arrays_must_be_1_or_2_di); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 418, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__14);
+  __Pyx_GIVEREF(__pyx_tuple__14);
 
   /* "cartopy/_crs.pyx":423
  * 
@@ -15371,9 +13096,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         else:
  *             if x.ndim > 2 or y.ndim > 2 or z.ndim > 2:
  */
-  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_s_x_and_y_arrays_must_have_the_sam); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 423, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__29);
-  __Pyx_GIVEREF(__pyx_tuple__29);
+  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_u_x_and_y_arrays_must_have_the_sam); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 423, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__15);
+  __Pyx_GIVEREF(__pyx_tuple__15);
 
   /* "cartopy/_crs.pyx":426
  *         else:
@@ -15382,9 +13107,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *                                  'dimensional')
  *             elif x.ndim != 1 or y.ndim != 1 or z.ndim != 1:
  */
-  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_s_x_y_and_z_arrays_must_be_1_or_2); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 426, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__30);
-  __Pyx_GIVEREF(__pyx_tuple__30);
+  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_u_x_y_and_z_arrays_must_be_1_or_2); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 426, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__16);
+  __Pyx_GIVEREF(__pyx_tuple__16);
 
   /* "cartopy/_crs.pyx":432
  * 
@@ -15393,9 +13118,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *                                  'length')
  * 
  */
-  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_kp_s_x_y_and_z_arrays_must_have_the_s); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(0, 432, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__31);
-  __Pyx_GIVEREF(__pyx_tuple__31);
+  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_u_x_y_and_z_arrays_must_have_the_s); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 432, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__17);
+  __Pyx_GIVEREF(__pyx_tuple__17);
 
   /* "cartopy/_crs.pyx":439
  *         result = np.empty([npts, 3], dtype=np.double)
@@ -15404,12 +13129,12 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *             result[:, 1] = np.deg2rad(y)
  *         else:
  */
-  __pyx_slice__32 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__32)) __PYX_ERR(0, 439, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_slice__32);
-  __Pyx_GIVEREF(__pyx_slice__32);
-  __pyx_tuple__33 = PyTuple_Pack(2, __pyx_slice__32, __pyx_int_0); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(0, 439, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__33);
-  __Pyx_GIVEREF(__pyx_tuple__33);
+  __pyx_slice__18 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__18)) __PYX_ERR(0, 439, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_slice__18);
+  __Pyx_GIVEREF(__pyx_slice__18);
+  __pyx_tuple__19 = PyTuple_Pack(2, __pyx_slice__18, __pyx_int_0); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 439, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__19);
+  __Pyx_GIVEREF(__pyx_tuple__19);
 
   /* "cartopy/_crs.pyx":440
  *         if src_crs.is_geodetic():
@@ -15418,9 +13143,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         else:
  *             result[:, 0] = x
  */
-  __pyx_tuple__34 = PyTuple_Pack(2, __pyx_slice__32, __pyx_int_1); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 440, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__34);
-  __Pyx_GIVEREF(__pyx_tuple__34);
+  __pyx_tuple__20 = PyTuple_Pack(2, __pyx_slice__18, __pyx_int_1); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 440, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__20);
+  __Pyx_GIVEREF(__pyx_tuple__20);
 
   /* "cartopy/_crs.pyx":447
  *         # transformed in-place
@@ -15429,9 +13154,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         else:
  *             result[:, 2] = z
  */
-  __pyx_tuple__35 = PyTuple_Pack(2, __pyx_slice__32, __pyx_int_2); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(0, 447, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__35);
-  __Pyx_GIVEREF(__pyx_tuple__35);
+  __pyx_tuple__21 = PyTuple_Pack(2, __pyx_slice__18, __pyx_int_2); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 447, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__21);
+  __Pyx_GIVEREF(__pyx_tuple__21);
 
   /* "cartopy/_crs.pyx":459
  * 
@@ -15440,12 +13165,12 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         #if status:
  *         #    raise Proj4Error()
  */
-  __pyx_slice__36 = PySlice_New(Py_None, __pyx_int_2, Py_None); if (unlikely(!__pyx_slice__36)) __PYX_ERR(0, 459, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_slice__36);
-  __Pyx_GIVEREF(__pyx_slice__36);
-  __pyx_tuple__37 = PyTuple_Pack(2, __pyx_slice__32, __pyx_slice__36); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 459, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__37);
-  __Pyx_GIVEREF(__pyx_tuple__37);
+  __pyx_slice__22 = PySlice_New(Py_None, __pyx_int_2, Py_None); if (unlikely(!__pyx_slice__22)) __PYX_ERR(0, 459, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_slice__22);
+  __Pyx_GIVEREF(__pyx_slice__22);
+  __pyx_tuple__23 = PyTuple_Pack(2, __pyx_slice__18, __pyx_slice__22); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 459, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__23);
+  __Pyx_GIVEREF(__pyx_tuple__23);
 
   /* "cartopy/_crs.pyx":509
  *         """
@@ -15454,9 +13179,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         if x.ndim not in (1, 2):
  *             raise ValueError('x, y, u and v must be 1 or 2 dimensional')
  */
-  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_kp_s_x_y_u_and_v_arrays_must_be_the_s); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 509, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__39);
-  __Pyx_GIVEREF(__pyx_tuple__39);
+  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_u_x_y_u_and_v_arrays_must_be_the_s); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 509, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__24);
+  __Pyx_GIVEREF(__pyx_tuple__24);
 
   /* "cartopy/_crs.pyx":511
  *             raise ValueError('x, y, u and v arrays must be the same shape')
@@ -15465,9 +13190,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         # Transform the coordinates to the target projection.
  *         proj_xyz = self.transform_points(src_proj, x, y)
  */
-  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_kp_s_x_y_u_and_v_must_be_1_or_2_dimen); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 511, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__40);
-  __Pyx_GIVEREF(__pyx_tuple__40);
+  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_u_x_y_u_and_v_must_be_1_or_2_dimen); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 511, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__25);
+  __Pyx_GIVEREF(__pyx_tuple__25);
 
   /* "cartopy/_crs.pyx":514
  *         # Transform the coordinates to the target projection.
@@ -15476,12 +13201,12 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         # Rotate the input vectors to the projection.
  *         #
  */
-  __pyx_tuple__41 = PyTuple_Pack(2, Py_Ellipsis, __pyx_int_0); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 514, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__41);
-  __Pyx_GIVEREF(__pyx_tuple__41);
-  __pyx_tuple__42 = PyTuple_Pack(2, Py_Ellipsis, __pyx_int_1); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 514, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__42);
-  __Pyx_GIVEREF(__pyx_tuple__42);
+  __pyx_tuple__26 = PyTuple_Pack(2, Py_Ellipsis, __pyx_int_0); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 514, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__26);
+  __Pyx_GIVEREF(__pyx_tuple__26);
+  __pyx_tuple__27 = PyTuple_Pack(2, Py_Ellipsis, __pyx_int_1); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 514, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__27);
+  __Pyx_GIVEREF(__pyx_tuple__27);
 
   /* "cartopy/_crs.pyx":604
  * 
@@ -15490,9 +13215,9 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         globe = globe or Globe(datum='WGS84')
  *         super(Geodetic, self).__init__(proj4_params, globe)
  */
-  __pyx_tuple__44 = PyTuple_Pack(2, __pyx_n_s_proj, __pyx_n_s_lonlat); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 604, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__44);
-  __Pyx_GIVEREF(__pyx_tuple__44);
+  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_n_u_proj, __pyx_n_u_lonlat); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 604, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__28);
+  __Pyx_GIVEREF(__pyx_tuple__28);
 
   /* "cartopy/_crs.pyx":626
  * 
@@ -15501,86 +13226,31 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         globe = globe or Globe(datum='WGS84')
  *         super(Geocentric, self).__init__(proj4_params, globe)
  */
-  __pyx_tuple__46 = PyTuple_Pack(2, __pyx_n_s_proj, __pyx_n_s_geocent); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(0, 626, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__46);
-  __Pyx_GIVEREF(__pyx_tuple__46);
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":272
- *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_C_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
- * 
- *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
- */
-  __pyx_tuple__47 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(2, 272, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__47);
-  __Pyx_GIVEREF(__pyx_tuple__47);
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":276
- *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
- *                 and not PyArray_CHKFLAGS(self, NPY_ARRAY_F_CONTIGUOUS)):
- *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
- * 
- *             info.buf = PyArray_DATA(self)
- */
-  __pyx_tuple__48 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(2, 276, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__48);
-  __Pyx_GIVEREF(__pyx_tuple__48);
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":306
- *                 if ((descr.byteorder == c'>' and little_endian) or
- *                     (descr.byteorder == c'<' and not little_endian)):
- *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
- *                 if   t == NPY_BYTE:        f = "b"
- *                 elif t == NPY_UBYTE:       f = "B"
- */
-  __pyx_tuple__49 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(2, 306, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__49);
-  __Pyx_GIVEREF(__pyx_tuple__49);
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":856
- * 
- *         if (end - f) - <int>(new_offset - offset[0]) < 15:
- *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
- * 
- *         if ((child.byteorder == c'>' and little_endian) or
- */
-  __pyx_tuple__50 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(2, 856, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__50);
-  __Pyx_GIVEREF(__pyx_tuple__50);
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":880
- *             t = child.type_num
- *             if end - f < 5:
- *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
- * 
- *             # Until ticket #99 is fixed, use integers to avoid warnings
- */
-  __pyx_tuple__51 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(2, 880, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__51);
-  __Pyx_GIVEREF(__pyx_tuple__51);
+  __pyx_tuple__29 = PyTuple_Pack(2, __pyx_n_u_proj, __pyx_n_u_geocent); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 626, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__29);
+  __Pyx_GIVEREF(__pyx_tuple__29);
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1038
- *         _import_array()
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":945
+ *         __pyx_import_array()
  *     except Exception:
  *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
  * 
  * cdef inline int import_umath() except -1:
  */
-  __pyx_tuple__52 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(2, 1038, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__52);
-  __Pyx_GIVEREF(__pyx_tuple__52);
+  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(1, 945, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__30);
+  __Pyx_GIVEREF(__pyx_tuple__30);
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1044
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":951
  *         _import_umath()
  *     except Exception:
  *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
  * 
  * cdef inline int import_ufunc() except -1:
  */
-  __pyx_tuple__53 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(2, 1044, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__53);
-  __Pyx_GIVEREF(__pyx_tuple__53);
+  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(1, 951, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__31);
+  __Pyx_GIVEREF(__pyx_tuple__31);
 
   /* "cartopy/_crs.pyx":56
  * 
@@ -15589,10 +13259,10 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         cdef int status
  *         status = deref(pj_get_errno_ref())
  */
-  __pyx_tuple__54 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_status, __pyx_n_s_msg); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(0, 56, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__54);
-  __Pyx_GIVEREF(__pyx_tuple__54);
-  __pyx_codeobj__2 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_init, 56, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__2)) __PYX_ERR(0, 56, __pyx_L1_error)
+  __pyx_tuple__32 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_status, __pyx_n_s_msg); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 56, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__32);
+  __Pyx_GIVEREF(__pyx_tuple__32);
+  __pyx_codeobj__33 = (PyObject*)__Pyx_PyCode_New(1, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_crs_pyx, __pyx_n_s_init, 56, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__33)) __PYX_ERR(0, 56, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":64
  * 
@@ -15601,10 +13271,10 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *                            int npts, int offset,
  *                            np.ndarray[np.double_t] x not None,
  */
-  __pyx_tuple__55 = PyTuple_Pack(9, __pyx_n_s_src_crs, __pyx_n_s_tgt_crs, __pyx_n_s_npts, __pyx_n_s_offset, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_z, __pyx_n_s_status, __pyx_n_s_lonlat); if (unlikely(!__pyx_tuple__55)) __PYX_ERR(0, 64, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__55);
-  __Pyx_GIVEREF(__pyx_tuple__55);
-  __pyx_codeobj__3 = (PyObject*)__Pyx_PyCode_New(7, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__55, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_safe_pj_transform_611, 64, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__3)) __PYX_ERR(0, 64, __pyx_L1_error)
+  __pyx_tuple__34 = PyTuple_Pack(9, __pyx_n_s_src_crs, __pyx_n_s_tgt_crs, __pyx_n_s_npts, __pyx_n_s_offset, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_z, __pyx_n_s_status, __pyx_n_s_lonlat); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 64, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__34);
+  __Pyx_GIVEREF(__pyx_tuple__34);
+  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(7, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_crs_pyx, __pyx_n_s_safe_pj_transform_611, 64, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(0, 64, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":100
  * 
@@ -15613,10 +13283,10 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *                                int npts, int offset,
  *                                np.ndarray[np.double_t] x not None,
  */
-  __pyx_tuple__56 = PyTuple_Pack(7, __pyx_n_s_src_crs, __pyx_n_s_tgt_crs, __pyx_n_s_npts, __pyx_n_s_offset, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_z); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(0, 100, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__56);
-  __Pyx_GIVEREF(__pyx_tuple__56);
-  __pyx_codeobj__8 = (PyObject*)__Pyx_PyCode_New(7, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_safe_pj_transform_pre_611, 100, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__8)) __PYX_ERR(0, 100, __pyx_L1_error)
+  __pyx_tuple__36 = PyTuple_Pack(7, __pyx_n_s_src_crs, __pyx_n_s_tgt_crs, __pyx_n_s_npts, __pyx_n_s_offset, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_z); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 100, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__36);
+  __Pyx_GIVEREF(__pyx_tuple__36);
+  __pyx_codeobj__37 = (PyObject*)__Pyx_PyCode_New(7, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__36, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_crs_pyx, __pyx_n_s_safe_pj_transform_pre_611, 100, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__37)) __PYX_ERR(0, 100, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":113
  * 
@@ -15625,170 +13295,50 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *     _safe_pj_transform = _safe_pj_transform_611
  * else:
  */
-  __pyx_tuple__57 = PyTuple_Pack(3, __pyx_int_6, __pyx_int_1, __pyx_int_1); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(0, 113, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__57);
-  __Pyx_GIVEREF(__pyx_tuple__57);
-  __pyx_tuple__58 = PyTuple_Pack(3, __pyx_int_6, __pyx_int_3, __pyx_int_0); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 113, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__58);
-  __Pyx_GIVEREF(__pyx_tuple__58);
-
-  /* "cartopy/_crs.pyx":119
- * 
- * 
- * class Globe(object):             # <<<<<<<<<<<<<<
- *     """
- *     Define an ellipsoid and, optionally, how to relate it to the real world.
- */
-  __pyx_tuple__59 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(0, 119, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__59);
-  __Pyx_GIVEREF(__pyx_tuple__59);
-
-  /* "cartopy/_crs.pyx":124
- * 
- *     """
- *     def __init__(self, datum=None, ellipse='WGS84',             # <<<<<<<<<<<<<<
- *                  semimajor_axis=None, semiminor_axis=None,
- *                  flattening=None, inverse_flattening=None,
- */
-  __pyx_tuple__60 = PyTuple_Pack(9, __pyx_n_s_self, __pyx_n_s_datum, __pyx_n_s_ellipse, __pyx_n_s_semimajor_axis, __pyx_n_s_semiminor_axis, __pyx_n_s_flattening, __pyx_n_s_inverse_flattening, __pyx_n_s_towgs84, __pyx_n_s_nadgrids); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 124, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__60);
-  __Pyx_GIVEREF(__pyx_tuple__60);
-  __pyx_codeobj__9 = (PyObject*)__Pyx_PyCode_New(9, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_init, 124, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__9)) __PYX_ERR(0, 124, __pyx_L1_error)
-  __pyx_tuple__61 = PyTuple_Pack(8, ((PyObject *)Py_None), ((PyObject*)__pyx_n_s_WGS84), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(0, 124, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__61);
-  __Pyx_GIVEREF(__pyx_tuple__61);
-
-  /* "cartopy/_crs.pyx":158
- *         self.nadgrids = nadgrids
- * 
- *     def to_proj4_params(self):             # <<<<<<<<<<<<<<
- *         """
- *         Create an OrderedDict of key value pairs which represents this globe
- */
-  __pyx_tuple__62 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_proj4_params, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 158, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__62);
-  __Pyx_GIVEREF(__pyx_tuple__62);
-  __pyx_codeobj__10 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_to_proj4_params, 158, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__10)) __PYX_ERR(0, 158, __pyx_L1_error)
-
-  /* "cartopy/_crs.pyx":255
- *         return hash(self.proj4_init)
- * 
- *     def __reduce__(self):             # <<<<<<<<<<<<<<
- *         """
- *         Implement the __reduce__ API so that unpickling produces a stateless
- */
-  __pyx_tuple__63 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(0, 255, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__63);
-  __Pyx_GIVEREF(__pyx_tuple__63);
-  __pyx_codeobj__14 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_reduce, 255, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__14)) __PYX_ERR(0, 255, __pyx_L1_error)
-
-  /* "cartopy/_crs.pyx":267
- *         return self.__class__, (), self.__getstate__()
- * 
- *     def __getstate__(self):             # <<<<<<<<<<<<<<
- *         """Return the full state of this instance for reconstruction
- *         in ``__setstate__``.
- */
-  __pyx_tuple__64 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_state); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(0, 267, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__64);
-  __Pyx_GIVEREF(__pyx_tuple__64);
-  __pyx_codeobj__15 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__64, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_getstate, 267, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__15)) __PYX_ERR(0, 267, __pyx_L1_error)
-
-  /* "cartopy/_crs.pyx":280
- *         return state
- * 
- *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
- *         """
- *         Take the dictionary created by ``__getstate__`` and passes it
- */
-  __pyx_tuple__65 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_state, __pyx_n_s_CRS_state, __pyx_n_s_key); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(0, 280, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__65);
-  __Pyx_GIVEREF(__pyx_tuple__65);
-  __pyx_codeobj__18 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__65, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_setstate, 280, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__18)) __PYX_ERR(0, 280, __pyx_L1_error)
-
-  /* "cartopy/_crs.pyx":298
- *     #def _geod(self): # to return the pyproj.Geod
- * 
- *     def _as_mpl_transform(self, axes=None):             # <<<<<<<<<<<<<<
- *         """
- *         Cast this CRS instance into a :class:`matplotlib.axes.Axes` using
- */
-  __pyx_tuple__66 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_axes, __pyx_n_s_geoaxes); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(0, 298, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__66);
-  __Pyx_GIVEREF(__pyx_tuple__66);
-  __pyx_codeobj__20 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__66, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_as_mpl_transform, 298, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__20)) __PYX_ERR(0, 298, __pyx_L1_error)
-
-  /* "cartopy/_crs.pyx":315
- *             return dict(self.proj4_params)
- * 
- *     def as_geocentric(self):             # <<<<<<<<<<<<<<
- *         """
- *         Return a new Geocentric CRS with the same ellipse/datum as this
- */
-  __pyx_tuple__67 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__67)) __PYX_ERR(0, 315, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__67);
-  __Pyx_GIVEREF(__pyx_tuple__67);
-  __pyx_codeobj__22 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__67, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_as_geocentric, 315, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__22)) __PYX_ERR(0, 315, __pyx_L1_error)
-
-  /* "cartopy/_crs.pyx":323
- *         return Geocentric(self.globe)
- * 
- *     def as_geodetic(self):             # <<<<<<<<<<<<<<
- *         """
- *         Return a new Geodetic CRS with the same ellipse/datum as this
- */
-  __pyx_tuple__68 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(0, 323, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__68);
-  __Pyx_GIVEREF(__pyx_tuple__68);
-  __pyx_codeobj__23 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_as_geodetic, 323, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__23)) __PYX_ERR(0, 323, __pyx_L1_error)
-
-  /* "cartopy/_crs.pyx":331
- *         return Geodetic(self.globe)
- * 
- *     cpdef is_geodetic(self):             # <<<<<<<<<<<<<<
- *         return bool(pj_is_latlong(self.proj4))
- * 
- */
-  __pyx_tuple__69 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 331, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__69);
-  __Pyx_GIVEREF(__pyx_tuple__69);
-  __pyx_codeobj__24 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__69, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_is_geodetic, 331, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__24)) __PYX_ERR(0, 331, __pyx_L1_error)
+  __pyx_tuple__38 = PyTuple_Pack(3, __pyx_int_6, __pyx_int_1, __pyx_int_1); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 113, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__38);
+  __Pyx_GIVEREF(__pyx_tuple__38);
+  __pyx_tuple__39 = PyTuple_Pack(3, __pyx_int_6, __pyx_int_3, __pyx_int_0); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 113, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__39);
+  __Pyx_GIVEREF(__pyx_tuple__39);
 
-  /* "cartopy/_crs.pyx":334
- *         return bool(pj_is_latlong(self.proj4))
+  /* "cartopy/_crs.pyx":119
  * 
- *     def transform_point(self, double x, double y, CRS src_crs not None, trap=True):             # <<<<<<<<<<<<<<
- *         """
- *         transform_point(x, y, src_crs)
+ * 
+ * class Globe(object):             # <<<<<<<<<<<<<<
+ *     """
+ *     Define an ellipsoid and, optionally, how to relate it to the real world.
  */
-  __pyx_tuple__70 = PyTuple_Pack(8, __pyx_n_s_self, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_src_crs, __pyx_n_s_trap, __pyx_n_s_cx, __pyx_n_s_cy, __pyx_n_s_status); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 334, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__70);
-  __Pyx_GIVEREF(__pyx_tuple__70);
-  __pyx_codeobj__25 = (PyObject*)__Pyx_PyCode_New(5, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_transform_point, 334, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__25)) __PYX_ERR(0, 334, __pyx_L1_error)
+  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 119, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__40);
+  __Pyx_GIVEREF(__pyx_tuple__40);
 
-  /* "cartopy/_crs.pyx":381
- *         return (cx[0], cy[0])
+  /* "cartopy/_crs.pyx":124
  * 
- *     def transform_points(self, CRS src_crs not None,             # <<<<<<<<<<<<<<
- *                                 np.ndarray x not None,
- *                                 np.ndarray y not None,
+ *     """
+ *     def __init__(self, datum=None, ellipse='WGS84',             # <<<<<<<<<<<<<<
+ *                  semimajor_axis=None, semiminor_axis=None,
+ *                  flattening=None, inverse_flattening=None,
  */
-  __pyx_tuple__71 = PyTuple_Pack(11, __pyx_n_s_self, __pyx_n_s_src_crs, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_z, __pyx_n_s_result, __pyx_n_s_result_shape, __pyx_n_s_npts, __pyx_n_s_status, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(0, 381, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__71);
-  __Pyx_GIVEREF(__pyx_tuple__71);
-  __pyx_codeobj__26 = (PyObject*)__Pyx_PyCode_New(5, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__71, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_transform_points, 381, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__26)) __PYX_ERR(0, 381, __pyx_L1_error)
+  __pyx_tuple__41 = PyTuple_Pack(9, __pyx_n_s_self, __pyx_n_s_datum, __pyx_n_s_ellipse, __pyx_n_s_semimajor_axis, __pyx_n_s_semiminor_axis, __pyx_n_s_flattening, __pyx_n_s_inverse_flattening, __pyx_n_s_towgs84, __pyx_n_s_nadgrids); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 124, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__41);
+  __Pyx_GIVEREF(__pyx_tuple__41);
+  __pyx_codeobj__42 = (PyObject*)__Pyx_PyCode_New(9, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_crs_pyx, __pyx_n_s_init, 124, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__42)) __PYX_ERR(0, 124, __pyx_L1_error)
+  __pyx_tuple__43 = PyTuple_Pack(8, ((PyObject *)Py_None), ((PyObject*)__pyx_n_u_WGS84), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(0, 124, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__43);
+  __Pyx_GIVEREF(__pyx_tuple__43);
 
-  /* "cartopy/_crs.pyx":468
- *         return result
+  /* "cartopy/_crs.pyx":158
+ *         self.nadgrids = nadgrids
  * 
- *     def transform_vectors(self, src_proj, x, y, u, v):             # <<<<<<<<<<<<<<
+ *     def to_proj4_params(self):             # <<<<<<<<<<<<<<
  *         """
- *         transform_vectors(src_proj, x, y, u, v)
+ *         Create an OrderedDict of key value pairs which represents this globe
  */
-  __pyx_tuple__72 = PyTuple_Pack(27, __pyx_n_s_self, __pyx_n_s_src_proj, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_u, __pyx_n_s_v, __pyx_n_s_proj_xyz, __pyx_n_s_target_x, __pyx_n_s_target_y, __pyx_n_s_vector_magnitudes, __pyx_n_s_vector_angles, __pyx_n_s_factor, __pyx_n_s_delta, __pyx_n_s_x_perturbations, __pyx_n_s_y_perturbations, __pyx_n_s_source_x, __pyx_n_s_source_y, __pyx_n_s_eps, __pyx_n_s_invalid_x, __pyx_n_s_invalid_y, __pyx_n_s_reversed_vectors, __pyx_n_s_problem_points, __pyx_n_s_target_x_perturbed, __pyx_n_s_target_y_perturbed, __pyx_n_s_projected_angles, __pyx_n_s_projected_u, __pyx_n_s_projected_v); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(0, 468, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__72);
-  __Pyx_GIVEREF(__pyx_tuple__72);
-  __pyx_codeobj__38 = (PyObject*)__Pyx_PyCode_New(6, 0, 27, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_transform_vectors, 468, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__38)) __PYX_ERR(0, 468, __pyx_L1_error)
+  __pyx_tuple__44 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_proj4_params, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 158, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__44);
+  __Pyx_GIVEREF(__pyx_tuple__44);
+  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_crs_pyx, __pyx_n_s_to_proj4_params, 158, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(0, 158, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":596
  * 
@@ -15797,13 +13347,13 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         """
  *         Parameters
  */
-  __pyx_tuple__73 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_globe, __pyx_n_s_proj4_params); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(0, 596, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__73);
-  __Pyx_GIVEREF(__pyx_tuple__73);
-  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__73, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_init, 596, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(0, 596, __pyx_L1_error)
-  __pyx_tuple__74 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(0, 596, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__74);
-  __Pyx_GIVEREF(__pyx_tuple__74);
+  __pyx_tuple__46 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_globe, __pyx_n_s_proj4_params); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(0, 596, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__46);
+  __Pyx_GIVEREF(__pyx_tuple__46);
+  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__46, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_crs_pyx, __pyx_n_s_init, 596, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(0, 596, __pyx_L1_error)
+  __pyx_tuple__48 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(0, 596, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__48);
+  __Pyx_GIVEREF(__pyx_tuple__48);
 
   /* "cartopy/_crs.pyx":618
  * 
@@ -15812,13 +13362,13 @@ static CYTHON_SMALL_CODE int __Pyx_InitC
  *         """
  *         Parameters
  */
-  __pyx_tuple__75 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_globe, __pyx_n_s_proj4_params); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(0, 618, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__75);
-  __Pyx_GIVEREF(__pyx_tuple__75);
-  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__75, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_lib_cartopy__crs_pyx, __pyx_n_s_init, 618, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(0, 618, __pyx_L1_error)
-  __pyx_tuple__76 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(0, 618, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_tuple__76);
-  __Pyx_GIVEREF(__pyx_tuple__76);
+  __pyx_tuple__49 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_globe, __pyx_n_s_proj4_params); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(0, 618, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__49);
+  __Pyx_GIVEREF(__pyx_tuple__49);
+  __pyx_codeobj__50 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__49, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_crs_pyx, __pyx_n_s_init, 618, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__50)) __PYX_ERR(0, 618, __pyx_L1_error)
+  __pyx_tuple__51 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(0, 618, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_tuple__51);
+  __Pyx_GIVEREF(__pyx_tuple__51);
   __Pyx_RefNannyFinishContext();
   return 0;
   __pyx_L1_error:;
@@ -15876,6 +13426,9 @@ static int __Pyx_modinit_function_export
 
 static int __Pyx_modinit_type_init_code(void) {
   __Pyx_RefNannyDeclarations
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
   /*--- Type init code ---*/
   __pyx_vtabptr_7cartopy_4_crs_CRS = &__pyx_vtable_7cartopy_4_crs_CRS;
@@ -15960,9 +13513,12 @@ static int __Pyx_modinit_type_init_code(
 static int __Pyx_modinit_type_import_code(void) {
   __Pyx_RefNannyDeclarations
   PyObject *__pyx_t_1 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
   /*--- Type import code ---*/
-  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 9, __pyx_L1_error)
+  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 9, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
   #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
@@ -15971,20 +13527,40 @@ static int __Pyx_modinit_type_import_cod
   sizeof(PyHeapTypeObject),
   #endif
   __Pyx_ImportType_CheckSize_Warn);
-   if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(3, 9, __pyx_L1_error)
+   if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(2, 9, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 206, __pyx_L1_error)
+  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 200, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_ptype_5numpy_dtype = __Pyx_ImportType(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __Pyx_ImportType_CheckSize_Ignore);
-   if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(2, 206, __pyx_L1_error)
-  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __Pyx_ImportType_CheckSize_Warn);
-   if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(2, 229, __pyx_L1_error)
-  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __Pyx_ImportType_CheckSize_Warn);
-   if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(2, 233, __pyx_L1_error)
+   if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(1, 200, __pyx_L1_error)
+  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __Pyx_ImportType_CheckSize_Ignore);
+   if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(1, 223, __pyx_L1_error)
+  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __Pyx_ImportType_CheckSize_Ignore);
+   if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(1, 227, __pyx_L1_error)
   __pyx_ptype_5numpy_ndarray = __Pyx_ImportType(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __Pyx_ImportType_CheckSize_Ignore);
-   if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(2, 242, __pyx_L1_error)
-  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __Pyx_ImportType_CheckSize_Warn);
-   if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(2, 918, __pyx_L1_error)
+   if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(1, 239, __pyx_L1_error)
+  __pyx_ptype_5numpy_generic = __Pyx_ImportType(__pyx_t_1, "numpy", "generic", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_generic) __PYX_ERR(1, 771, __pyx_L1_error)
+  __pyx_ptype_5numpy_number = __Pyx_ImportType(__pyx_t_1, "numpy", "number", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_number) __PYX_ERR(1, 773, __pyx_L1_error)
+  __pyx_ptype_5numpy_integer = __Pyx_ImportType(__pyx_t_1, "numpy", "integer", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_integer) __PYX_ERR(1, 775, __pyx_L1_error)
+  __pyx_ptype_5numpy_signedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "signedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_signedinteger) __PYX_ERR(1, 777, __pyx_L1_error)
+  __pyx_ptype_5numpy_unsignedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "unsignedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_unsignedinteger) __PYX_ERR(1, 779, __pyx_L1_error)
+  __pyx_ptype_5numpy_inexact = __Pyx_ImportType(__pyx_t_1, "numpy", "inexact", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_inexact) __PYX_ERR(1, 781, __pyx_L1_error)
+  __pyx_ptype_5numpy_floating = __Pyx_ImportType(__pyx_t_1, "numpy", "floating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_floating) __PYX_ERR(1, 783, __pyx_L1_error)
+  __pyx_ptype_5numpy_complexfloating = __Pyx_ImportType(__pyx_t_1, "numpy", "complexfloating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_complexfloating) __PYX_ERR(1, 785, __pyx_L1_error)
+  __pyx_ptype_5numpy_flexible = __Pyx_ImportType(__pyx_t_1, "numpy", "flexible", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_flexible) __PYX_ERR(1, 787, __pyx_L1_error)
+  __pyx_ptype_5numpy_character = __Pyx_ImportType(__pyx_t_1, "numpy", "character", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
+   if (!__pyx_ptype_5numpy_character) __PYX_ERR(1, 789, __pyx_L1_error)
+  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __Pyx_ImportType_CheckSize_Ignore);
+   if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(1, 827, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __Pyx_RefNannyFinishContext();
   return 0;
@@ -16011,17 +13587,19 @@ static int __Pyx_modinit_function_import
 }
 
 
-#if PY_MAJOR_VERSION < 3
-#ifdef CYTHON_NO_PYINIT_EXPORT
-#define __Pyx_PyMODINIT_FUNC void
-#else
+#ifndef CYTHON_NO_PYINIT_EXPORT
 #define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
+#elif PY_MAJOR_VERSION < 3
+#ifdef __cplusplus
+#define __Pyx_PyMODINIT_FUNC extern "C" void
+#else
+#define __Pyx_PyMODINIT_FUNC void
 #endif
 #else
-#ifdef CYTHON_NO_PYINIT_EXPORT
-#define __Pyx_PyMODINIT_FUNC PyObject *
+#ifdef __cplusplus
+#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
 #else
-#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
+#define __Pyx_PyMODINIT_FUNC PyObject *
 #endif
 #endif
 
@@ -16102,7 +13680,6 @@ static CYTHON_SMALL_CODE int __pyx_pymod
 #endif
 #endif
 {
-  __Pyx_TraceDeclarations
   PyObject *__pyx_t_1 = NULL;
   PyObject *__pyx_t_2 = NULL;
   double __pyx_t_3;
@@ -16110,6 +13687,9 @@ static CYTHON_SMALL_CODE int __pyx_pymod
   PyObject *__pyx_t_5 = NULL;
   int __pyx_t_6;
   PyObject *__pyx_t_7 = NULL;
+  int __pyx_lineno = 0;
+  const char *__pyx_filename = NULL;
+  int __pyx_clineno = 0;
   __Pyx_RefNannyDeclarations
   #if CYTHON_PEP489_MULTI_PHASE_INIT
   if (__pyx_m) {
@@ -16157,11 +13737,9 @@ if (!__Pyx_RefNanny) {
   #endif
   /*--- Library function declarations ---*/
   /*--- Threads initialization code ---*/
-  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
-  #ifdef WITH_THREAD /* Python build with threading support? */
+  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
   PyEval_InitThreads();
   #endif
-  #endif
   /*--- Module creation code ---*/
   #if CYTHON_PEP489_MULTI_PHASE_INIT
   __pyx_m = __pyx_pyinit_module;
@@ -16198,22 +13776,21 @@ if (!__Pyx_RefNanny) {
   }
   #endif
   /*--- Builtin init code ---*/
-  if (__Pyx_InitCachedBuiltins() < 0) goto __pyx_L1_error;
+  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
   /*--- Constants init code ---*/
-  if (__Pyx_InitCachedConstants() < 0) goto __pyx_L1_error;
+  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
   /*--- Global type/function init code ---*/
   (void)__Pyx_modinit_global_init_code();
   (void)__Pyx_modinit_variable_export_code();
   (void)__Pyx_modinit_function_export_code();
-  if (unlikely(__Pyx_modinit_type_init_code() != 0)) goto __pyx_L1_error;
-  if (unlikely(__Pyx_modinit_type_import_code() != 0)) goto __pyx_L1_error;
+  if (unlikely(__Pyx_modinit_type_init_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
+  if (unlikely(__Pyx_modinit_type_import_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
   (void)__Pyx_modinit_variable_import_code();
   (void)__Pyx_modinit_function_import_code();
   /*--- Execution code ---*/
   #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
   if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
   #endif
-  __Pyx_TraceCall("__Pyx_PyMODINIT_FUNC PyInit__crs(void)", __pyx_f[0], 1, 0, __PYX_ERR(0, 1, __pyx_L1_error));
 
   /* "cartopy/_crs.pyx":15
  * """
@@ -16222,13 +13799,12 @@ if (!__Pyx_RefNanny) {
  * import re
  * import warnings
  */
-  __Pyx_TraceLine(15,0,__PYX_ERR(0, 15, __pyx_L1_error))
   __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_INCREF(__pyx_n_s_OrderedDict);
   __Pyx_GIVEREF(__pyx_n_s_OrderedDict);
   PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_OrderedDict);
-  __pyx_t_2 = __Pyx_Import(__pyx_n_s_collections, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_Import(__pyx_n_s_collections, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
   __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_OrderedDict); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
@@ -16244,8 +13820,7 @@ if (!__Pyx_RefNanny) {
  * import warnings
  * 
  */
-  __Pyx_TraceLine(16,0,__PYX_ERR(0, 16, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_Import(__pyx_n_s_re, 0, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_Import(__pyx_n_s_re, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_re, __pyx_t_2) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -16257,8 +13832,7 @@ if (!__Pyx_RefNanny) {
  * 
  * import numpy as np
  */
-  __Pyx_TraceLine(17,0,__PYX_ERR(0, 17, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_Import(__pyx_n_s_warnings, 0, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_Import(__pyx_n_s_warnings, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_warnings, __pyx_t_2) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -16270,8 +13844,7 @@ if (!__Pyx_RefNanny) {
  * import six
  * 
  */
-  __Pyx_TraceLine(19,0,__PYX_ERR(0, 19, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 19, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_Import(__pyx_n_s_numpy, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 19, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_2) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -16283,8 +13856,7 @@ if (!__Pyx_RefNanny) {
  * 
  * cimport numpy as np
  */
-  __Pyx_TraceLine(20,0,__PYX_ERR(0, 20, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_Import(__pyx_n_s_six, 0, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_Import(__pyx_n_s_six, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_six, __pyx_t_2) < 0) __PYX_ERR(0, 20, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -16296,8 +13868,7 @@ if (!__Pyx_RefNanny) {
  * 
  * 
  */
-  __Pyx_TraceLine(32,0,__PYX_ERR(0, 32, __pyx_L1_error))
-  __pyx_t_3 = __Pyx_PyObject_AsDouble(__pyx_n_s_nan); if (unlikely(__pyx_t_3 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 32, __pyx_L1_error)
+  __pyx_t_3 = __Pyx_PyObject_AsDouble(__pyx_n_u_nan); if (unlikely(__pyx_t_3 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 32, __pyx_L1_error)
   __pyx_v_7cartopy_4_crs_NAN = __pyx_t_3;
 
   /* "cartopy/_crs.pyx":35
@@ -16307,7 +13878,6 @@ if (!__Pyx_RefNanny) {
  * if six.PY3:
  *     PROJ4_RELEASE = PROJ4_RELEASE.decode()
  */
-  __Pyx_TraceLine(35,0,__PYX_ERR(0, 35, __pyx_L1_error))
   __pyx_t_2 = __Pyx_PyBytes_FromString(pj_get_release()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 35, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_PROJ4_RELEASE, __pyx_t_2) < 0) __PYX_ERR(0, 35, __pyx_L1_error)
@@ -16320,7 +13890,6 @@ if (!__Pyx_RefNanny) {
  *     PROJ4_RELEASE = PROJ4_RELEASE.decode()
  * _match = re.search(r"\d+\.\d+.\d+", PROJ4_RELEASE)
  */
-  __Pyx_TraceLine(36,0,__PYX_ERR(0, 36, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_six); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_PY3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 36, __pyx_L1_error)
@@ -16337,7 +13906,6 @@ if (!__Pyx_RefNanny) {
  * _match = re.search(r"\d+\.\d+.\d+", PROJ4_RELEASE)
  * if _match is not None:
  */
-    __Pyx_TraceLine(37,0,__PYX_ERR(0, 37, __pyx_L1_error))
     __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_PROJ4_RELEASE); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_decode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
@@ -16365,7 +13933,6 @@ if (!__Pyx_RefNanny) {
  * if _match is not None:
  *     PROJ4_VERSION = tuple(int(v) for v in _match.group().split('.'))
  */
-  __Pyx_TraceLine(38,0,__PYX_ERR(0, 38, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_re); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 38, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_search); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 38, __pyx_L1_error)
@@ -16375,9 +13942,9 @@ if (!__Pyx_RefNanny) {
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 38, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
-  __Pyx_INCREF(__pyx_kp_s_d_d_d);
-  __Pyx_GIVEREF(__pyx_kp_s_d_d_d);
-  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_s_d_d_d);
+  __Pyx_INCREF(__pyx_kp_u_d_d_d);
+  __Pyx_GIVEREF(__pyx_kp_u_d_d_d);
+  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_d_d_d);
   __Pyx_GIVEREF(__pyx_t_1);
   PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
   __pyx_t_1 = 0;
@@ -16395,7 +13962,6 @@ if (!__Pyx_RefNanny) {
  *     PROJ4_VERSION = tuple(int(v) for v in _match.group().split('.'))
  * else:
  */
-  __Pyx_TraceLine(39,0,__PYX_ERR(0, 39, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_match); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 39, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __pyx_t_4 = (__pyx_t_1 != Py_None);
@@ -16410,7 +13976,6 @@ if (!__Pyx_RefNanny) {
  * else:
  *     PROJ4_VERSION = ()
  */
-    __Pyx_TraceLine(40,0,__PYX_ERR(0, 40, __pyx_L1_error))
     __pyx_t_1 = __pyx_pf_7cartopy_4_crs_4genexpr(NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 40, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     __pyx_t_5 = __Pyx_PySequence_Tuple(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 40, __pyx_L1_error)
@@ -16436,7 +14001,6 @@ if (!__Pyx_RefNanny) {
  * 
  * WGS84_SEMIMAJOR_AXIS = 6378137.0
  */
-  __Pyx_TraceLine(42,0,__PYX_ERR(0, 42, __pyx_L1_error))
   /*else*/ {
     if (PyDict_SetItem(__pyx_d, __pyx_n_s_PROJ4_VERSION, __pyx_empty_tuple) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
   }
@@ -16449,7 +14013,6 @@ if (!__Pyx_RefNanny) {
  * WGS84_SEMIMINOR_AXIS = 6356752.3142
  * 
  */
-  __Pyx_TraceLine(44,0,__PYX_ERR(0, 44, __pyx_L1_error))
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_WGS84_SEMIMAJOR_AXIS, __pyx_float_6378137_0) < 0) __PYX_ERR(0, 44, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":45
@@ -16459,7 +14022,6 @@ if (!__Pyx_RefNanny) {
  * 
  * 
  */
-  __Pyx_TraceLine(45,0,__PYX_ERR(0, 45, __pyx_L1_error))
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_WGS84_SEMIMINOR_AXIS, __pyx_float_6356752_3142) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
 
   /* "cartopy/_crs.pyx":48
@@ -16469,7 +14031,6 @@ if (!__Pyx_RefNanny) {
  *     """
  *     Raised when there has been an exception calling proj.4.
  */
-  __Pyx_TraceLine(48,0,__PYX_ERR(0, 48, __pyx_L1_error))
   __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 48, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   __Pyx_INCREF(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
@@ -16487,8 +14048,7 @@ if (!__Pyx_RefNanny) {
  *         cdef int status
  *         status = deref(pj_get_errno_ref())
  */
-  __Pyx_TraceLine(56,0,__PYX_ERR(0, 56, __pyx_L1_error))
-  __pyx_t_7 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_10Proj4Error_1__init__, 0, __pyx_n_s_Proj4Error___init, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__2)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 56, __pyx_L1_error)
+  __pyx_t_7 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_10Proj4Error_1__init__, 0, __pyx_n_s_Proj4Error___init, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__33)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 56, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_7);
   if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_7) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
@@ -16500,8 +14060,7 @@ if (!__Pyx_RefNanny) {
  *     """
  *     Raised when there has been an exception calling proj.4.
  */
-  __Pyx_TraceLine(48,0,__PYX_ERR(0, 48, __pyx_L1_error))
-  __pyx_t_7 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_Proj4Error, __pyx_t_5, __pyx_t_2, NULL, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 48, __pyx_L1_error)
+  __pyx_t_7 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_Proj4Error, __pyx_t_5, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 48, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_7);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_Proj4Error, __pyx_t_7) < 0) __PYX_ERR(0, 48, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
@@ -16516,8 +14075,7 @@ if (!__Pyx_RefNanny) {
  *                            int npts, int offset,
  *                            np.ndarray[np.double_t] x not None,
  */
-  __Pyx_TraceLine(64,0,__PYX_ERR(0, 64, __pyx_L1_error))
-  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_1_safe_pj_transform_611, 0, __pyx_n_s_safe_pj_transform_611, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__3)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 64, __pyx_L1_error)
+  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_7cartopy_4_crs_1_safe_pj_transform_611, NULL, __pyx_n_s_cartopy__crs); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 64, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_safe_pj_transform_611, __pyx_t_5) < 0) __PYX_ERR(0, 64, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
@@ -16529,8 +14087,7 @@ if (!__Pyx_RefNanny) {
  *                                int npts, int offset,
  *                                np.ndarray[np.double_t] x not None,
  */
-  __Pyx_TraceLine(100,0,__PYX_ERR(0, 100, __pyx_L1_error))
-  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3_safe_pj_transform_pre_611, 0, __pyx_n_s_safe_pj_transform_pre_611, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__8)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 100, __pyx_L1_error)
+  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_7cartopy_4_crs_3_safe_pj_transform_pre_611, NULL, __pyx_n_s_cartopy__crs); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 100, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_safe_pj_transform_pre_611, __pyx_t_5) < 0) __PYX_ERR(0, 100, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
@@ -16542,13 +14099,12 @@ if (!__Pyx_RefNanny) {
  *     _safe_pj_transform = _safe_pj_transform_611
  * else:
  */
-  __Pyx_TraceLine(113,0,__PYX_ERR(0, 113, __pyx_L1_error))
   __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_PROJ4_VERSION); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 113, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
-  __pyx_t_1 = PyObject_RichCompare(__pyx_tuple__57, __pyx_t_5, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 113, __pyx_L1_error)
+  __pyx_t_1 = PyObject_RichCompare(__pyx_tuple__38, __pyx_t_5, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 113, __pyx_L1_error)
   if (__Pyx_PyObject_IsTrue(__pyx_t_1)) {
     __Pyx_DECREF(__pyx_t_1);
-    __pyx_t_1 = PyObject_RichCompare(__pyx_t_5, __pyx_tuple__58, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 113, __pyx_L1_error)
+    __pyx_t_1 = PyObject_RichCompare(__pyx_t_5, __pyx_tuple__39, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 113, __pyx_L1_error)
   }
   __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
   __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 113, __pyx_L1_error)
@@ -16562,7 +14118,6 @@ if (!__Pyx_RefNanny) {
  * else:
  *     _safe_pj_transform = _safe_pj_transform_pre_611
  */
-    __Pyx_TraceLine(114,0,__PYX_ERR(0, 114, __pyx_L1_error))
     __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_safe_pj_transform_611); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 114, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
     if (PyDict_SetItem(__pyx_d, __pyx_n_s_safe_pj_transform, __pyx_t_1) < 0) __PYX_ERR(0, 114, __pyx_L1_error)
@@ -16585,7 +14140,6 @@ if (!__Pyx_RefNanny) {
  * 
  * 
  */
-  __Pyx_TraceLine(116,0,__PYX_ERR(0, 116, __pyx_L1_error))
   /*else*/ {
     __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_safe_pj_transform_pre_611); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 116, __pyx_L1_error)
     __Pyx_GOTREF(__pyx_t_1);
@@ -16601,10 +14155,9 @@ if (!__Pyx_RefNanny) {
  *     """
  *     Define an ellipsoid and, optionally, how to relate it to the real world.
  */
-  __Pyx_TraceLine(119,0,__PYX_ERR(0, 119, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple__59); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 119, __pyx_L1_error)
+  __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple__40); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 119, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
-  __pyx_t_5 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_tuple__59, __pyx_n_s_Globe, __pyx_n_s_Globe, (PyObject *) NULL, __pyx_n_s_cartopy__crs, __pyx_kp_s_Define_an_ellipsoid_and_optiona); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 119, __pyx_L1_error)
+  __pyx_t_5 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_tuple__40, __pyx_n_s_Globe, __pyx_n_s_Globe, (PyObject *) NULL, __pyx_n_s_cartopy__crs, __pyx_kp_s_Define_an_ellipsoid_and_optiona); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 119, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_5);
 
   /* "cartopy/_crs.pyx":124
@@ -16614,10 +14167,9 @@ if (!__Pyx_RefNanny) {
  *                  semimajor_axis=None, semiminor_axis=None,
  *                  flattening=None, inverse_flattening=None,
  */
-  __Pyx_TraceLine(124,0,__PYX_ERR(0, 124, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_5Globe_1__init__, 0, __pyx_n_s_Globe___init, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 124, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_5Globe_1__init__, 0, __pyx_n_s_Globe___init, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__42)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 124, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
-  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__61);
+  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__43);
   if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_init, __pyx_t_2) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
 
@@ -16628,8 +14180,7 @@ if (!__Pyx_RefNanny) {
  *         """
  *         Create an OrderedDict of key value pairs which represents this globe
  */
-  __Pyx_TraceLine(158,0,__PYX_ERR(0, 158, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_5Globe_3to_proj4_params, 0, __pyx_n_s_Globe_to_proj4_params, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__10)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 158, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_5Globe_3to_proj4_params, 0, __pyx_n_s_Globe_to_proj4_params, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__45)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 158, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_to_proj4_params, __pyx_t_2) < 0) __PYX_ERR(0, 158, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -16641,8 +14192,7 @@ if (!__Pyx_RefNanny) {
  *     """
  *     Define an ellipsoid and, optionally, how to relate it to the real world.
  */
-  __Pyx_TraceLine(119,0,__PYX_ERR(0, 119, __pyx_L1_error))
-  __pyx_t_2 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_Globe, __pyx_tuple__59, __pyx_t_5, NULL, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 119, __pyx_L1_error)
+  __pyx_t_2 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_Globe, __pyx_tuple__40, __pyx_t_5, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 119, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_Globe, __pyx_t_2) < 0) __PYX_ERR(0, 119, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
@@ -16656,151 +14206,9 @@ if (!__Pyx_RefNanny) {
  * 
  *     def __cinit__(self):
  */
-  __Pyx_TraceLine(178,0,__PYX_ERR(0, 178, __pyx_L1_error))
   if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_handles_ellipses, Py_True) < 0) __PYX_ERR(0, 178, __pyx_L1_error)
   PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
 
-  /* "cartopy/_crs.pyx":255
- *         return hash(self.proj4_init)
- * 
- *     def __reduce__(self):             # <<<<<<<<<<<<<<
- *         """
- *         Implement the __reduce__ API so that unpickling produces a stateless
- */
-  __Pyx_TraceLine(255,0,__PYX_ERR(0, 255, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_11__reduce__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS___reduce, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__14)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 255, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_reduce, __pyx_t_1) < 0) __PYX_ERR(0, 255, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
-  /* "cartopy/_crs.pyx":267
- *         return self.__class__, (), self.__getstate__()
- * 
- *     def __getstate__(self):             # <<<<<<<<<<<<<<
- *         """Return the full state of this instance for reconstruction
- *         in ``__setstate__``.
- */
-  __Pyx_TraceLine(267,0,__PYX_ERR(0, 267, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_13__getstate__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS___getstate, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__15)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 267, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_getstate, __pyx_t_1) < 0) __PYX_ERR(0, 267, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
-  /* "cartopy/_crs.pyx":280
- *         return state
- * 
- *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
- *         """
- *         Take the dictionary created by ``__getstate__`` and passes it
- */
-  __Pyx_TraceLine(280,0,__PYX_ERR(0, 280, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_15__setstate__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS___setstate, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__18)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 280, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_setstate, __pyx_t_1) < 0) __PYX_ERR(0, 280, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
-  /* "cartopy/_crs.pyx":298
- *     #def _geod(self): # to return the pyproj.Geod
- * 
- *     def _as_mpl_transform(self, axes=None):             # <<<<<<<<<<<<<<
- *         """
- *         Cast this CRS instance into a :class:`matplotlib.axes.Axes` using
- */
-  __Pyx_TraceLine(298,0,__PYX_ERR(0, 298, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_17_as_mpl_transform, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS__as_mpl_transform, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__20)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 298, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_as_mpl_transform, __pyx_t_1) < 0) __PYX_ERR(0, 298, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
-  /* "cartopy/_crs.pyx":315
- *             return dict(self.proj4_params)
- * 
- *     def as_geocentric(self):             # <<<<<<<<<<<<<<
- *         """
- *         Return a new Geocentric CRS with the same ellipse/datum as this
- */
-  __Pyx_TraceLine(315,0,__PYX_ERR(0, 315, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_19as_geocentric, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS_as_geocentric, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__22)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 315, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_as_geocentric, __pyx_t_1) < 0) __PYX_ERR(0, 315, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
-  /* "cartopy/_crs.pyx":323
- *         return Geocentric(self.globe)
- * 
- *     def as_geodetic(self):             # <<<<<<<<<<<<<<
- *         """
- *         Return a new Geodetic CRS with the same ellipse/datum as this
- */
-  __Pyx_TraceLine(323,0,__PYX_ERR(0, 323, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_21as_geodetic, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS_as_geodetic, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__23)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 323, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_as_geodetic, __pyx_t_1) < 0) __PYX_ERR(0, 323, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
-  /* "cartopy/_crs.pyx":331
- *         return Geodetic(self.globe)
- * 
- *     cpdef is_geodetic(self):             # <<<<<<<<<<<<<<
- *         return bool(pj_is_latlong(self.proj4))
- * 
- */
-  __Pyx_TraceLine(331,0,__PYX_ERR(0, 331, __pyx_L1_error))
-
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_23is_geodetic, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS_is_geodetic, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__24)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 331, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_is_geodetic, __pyx_t_1) < 0) __PYX_ERR(0, 331, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
-  /* "cartopy/_crs.pyx":334
- *         return bool(pj_is_latlong(self.proj4))
- * 
- *     def transform_point(self, double x, double y, CRS src_crs not None, trap=True):             # <<<<<<<<<<<<<<
- *         """
- *         transform_point(x, y, src_crs)
- */
-  __Pyx_TraceLine(334,0,__PYX_ERR(0, 334, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_25transform_point, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS_transform_point, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__25)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 334, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_transform_point, __pyx_t_1) < 0) __PYX_ERR(0, 334, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
-  /* "cartopy/_crs.pyx":381
- *         return (cx[0], cy[0])
- * 
- *     def transform_points(self, CRS src_crs not None,             # <<<<<<<<<<<<<<
- *                                 np.ndarray x not None,
- *                                 np.ndarray y not None,
- */
-  __Pyx_TraceLine(381,0,__PYX_ERR(0, 381, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_27transform_points, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS_transform_points, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__26)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 381, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_transform_points, __pyx_t_1) < 0) __PYX_ERR(0, 381, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
-  /* "cartopy/_crs.pyx":468
- *         return result
- * 
- *     def transform_vectors(self, src_proj, x, y, u, v):             # <<<<<<<<<<<<<<
- *         """
- *         transform_vectors(src_proj, x, y, u, v)
- */
-  __Pyx_TraceLine(468,0,__PYX_ERR(0, 468, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_3CRS_29transform_vectors, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CRS_transform_vectors, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__38)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 468, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS->tp_dict, __pyx_n_s_transform_vectors, __pyx_t_1) < 0) __PYX_ERR(0, 468, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-  PyType_Modified(__pyx_ptype_7cartopy_4_crs_CRS);
-
   /* "cartopy/_crs.pyx":590
  * 
  * 
@@ -16808,7 +14216,6 @@ if (!__Pyx_RefNanny) {
  *     """
  *     Define a latitude/longitude coordinate system with spherical topology,
  */
-  __Pyx_TraceLine(590,0,__PYX_ERR(0, 590, __pyx_L1_error))
   __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 590, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_INCREF(((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS));
@@ -16826,10 +14233,9 @@ if (!__Pyx_RefNanny) {
  *         """
  *         Parameters
  */
-  __Pyx_TraceLine(596,0,__PYX_ERR(0, 596, __pyx_L1_error))
-  __pyx_t_7 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_8Geodetic_1__init__, 0, __pyx_n_s_Geodetic___init, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__43)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 596, __pyx_L1_error)
+  __pyx_t_7 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_8Geodetic_1__init__, 0, __pyx_n_s_Geodetic___init, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__47)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 596, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_7);
-  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_7, __pyx_tuple__74);
+  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_7, __pyx_tuple__48);
   if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_7) < 0) __PYX_ERR(0, 596, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
 
@@ -16840,8 +14246,7 @@ if (!__Pyx_RefNanny) {
  *     """
  *     Define a latitude/longitude coordinate system with spherical topology,
  */
-  __Pyx_TraceLine(590,0,__PYX_ERR(0, 590, __pyx_L1_error))
-  __pyx_t_7 = __Pyx_Py3ClassCreate(__pyx_t_5, __pyx_n_s_Geodetic, __pyx_t_1, __pyx_t_2, NULL, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 590, __pyx_L1_error)
+  __pyx_t_7 = __Pyx_Py3ClassCreate(__pyx_t_5, __pyx_n_s_Geodetic, __pyx_t_1, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 590, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_7);
   if (PyDict_SetItem(__pyx_d, __pyx_n_s_Geodetic, __pyx_t_7) < 0) __PYX_ERR(0, 590, __pyx_L1_error)
   __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
@@ -16856,7 +14261,6 @@ if (!__Pyx_RefNanny) {
  *     """
  *     Define a Geocentric coordinate system, where x, y, z are Cartesian
  */
-  __Pyx_TraceLine(612,0,__PYX_ERR(0, 612, __pyx_L1_error))
   __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 612, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_1);
   __Pyx_INCREF(((PyObject *)__pyx_ptype_7cartopy_4_crs_CRS));
@@ -16867,167 +14271,51 @@ if (!__Pyx_RefNanny) {
   __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_5, __pyx_t_1, __pyx_n_s_Geocentric, __pyx_n_s_Geocentric, (PyObject *) NULL, __pyx_n_s_cartopy__crs, __pyx_kp_s_Define_a_Geocentric_coordinate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 612, __pyx_L1_error)
   __Pyx_GOTREF(__pyx_t_2);
 
-  /* "cartopy/_crs.pyx":618
- * 
- *     """
- *     def __init__(self, globe=None):             # <<<<<<<<<<<<<<
- *         """
- *         Parameters
- */
-  __Pyx_TraceLine(618,0,__PYX_ERR(0, 618, __pyx_L1_error))
-  __pyx_t_7 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_10Geocentric_1__init__, 0, __pyx_n_s_Geocentric___init, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__45)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 618, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_7);
-  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_7, __pyx_tuple__76);
-  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_7) < 0) __PYX_ERR(0, 618, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
-
-  /* "cartopy/_crs.pyx":612
- * 
- * 
- * class Geocentric(CRS):             # <<<<<<<<<<<<<<
- *     """
- *     Define a Geocentric coordinate system, where x, y, z are Cartesian
- */
-  __Pyx_TraceLine(612,0,__PYX_ERR(0, 612, __pyx_L1_error))
-  __pyx_t_7 = __Pyx_Py3ClassCreate(__pyx_t_5, __pyx_n_s_Geocentric, __pyx_t_1, __pyx_t_2, NULL, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 612, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_7);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Geocentric, __pyx_t_7) < 0) __PYX_ERR(0, 612, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
-  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
-  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-
-  /* "cartopy/_crs.pyx":1
- * # Copyright Cartopy Contributors             # <<<<<<<<<<<<<<
- * #
- * # This file is part of Cartopy and is released under the LGPL license.
- */
-  __Pyx_TraceLine(1,0,__PYX_ERR(0, 1, __pyx_L1_error))
-  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
-  __Pyx_GOTREF(__pyx_t_1);
-  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
-  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":821
- * ctypedef npy_cdouble     complex_t
- * 
- * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(1, <void*>a)
- * 
- */
-  __Pyx_TraceLine(821,0,__PYX_ERR(2, 821, __pyx_L1_error))
-
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":824
- *     return PyArray_MultiIterNew(1, <void*>a)
- * 
- * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
- * 
- */
-  __Pyx_TraceLine(824,0,__PYX_ERR(2, 824, __pyx_L1_error))
-
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":827
- *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
- * 
- * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
- * 
- */
-  __Pyx_TraceLine(827,0,__PYX_ERR(2, 827, __pyx_L1_error))
-
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":830
- *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
- * 
- * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
- * 
- */
-  __Pyx_TraceLine(830,0,__PYX_ERR(2, 830, __pyx_L1_error))
-
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":833
- *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
- * 
- * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
- *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
- * 
- */
-  __Pyx_TraceLine(833,0,__PYX_ERR(2, 833, __pyx_L1_error))
-
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":836
- *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
- * 
- * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
- *     if PyDataType_HASSUBARRAY(d):
- *         return <tuple>d.subarray.shape
- */
-  __Pyx_TraceLine(836,0,__PYX_ERR(2, 836, __pyx_L1_error))
-
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":842
- *         return ()
- * 
- * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
- *     # Recursive utility function used in __getbuffer__ to get format
- *     # string. The new location in the format string is returned.
- */
-  __Pyx_TraceLine(842,0,__PYX_ERR(2, 842, __pyx_L1_error))
-
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1022
- *     int _import_umath() except -1
- * 
- * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
- *     Py_INCREF(base) # important to do this before stealing the reference below!
- *     PyArray_SetBaseObject(arr, base)
- */
-  __Pyx_TraceLine(1022,0,__PYX_ERR(2, 1022, __pyx_L1_error))
-
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1026
- *     PyArray_SetBaseObject(arr, base)
+  /* "cartopy/_crs.pyx":618
  * 
- * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
- *     base = PyArray_BASE(arr)
- *     if base is NULL:
- */
-  __Pyx_TraceLine(1026,0,__PYX_ERR(2, 1026, __pyx_L1_error))
-
-
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1034
- * # Versions of the import_* functions which are more suitable for
- * # Cython code.
- * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
- *     try:
- *         _import_array()
+ *     """
+ *     def __init__(self, globe=None):             # <<<<<<<<<<<<<<
+ *         """
+ *         Parameters
  */
-  __Pyx_TraceLine(1034,0,__PYX_ERR(2, 1034, __pyx_L1_error))
-
+  __pyx_t_7 = __Pyx_CyFunction_New(&__pyx_mdef_7cartopy_4_crs_10Geocentric_1__init__, 0, __pyx_n_s_Geocentric___init, NULL, __pyx_n_s_cartopy__crs, __pyx_d, ((PyObject *)__pyx_codeobj__50)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 618, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_7);
+  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_7, __pyx_tuple__51);
+  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_7) < 0) __PYX_ERR(0, 618, __pyx_L1_error)
+  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1040
- *         raise ImportError("numpy.core.multiarray failed to import")
+  /* "cartopy/_crs.pyx":612
  * 
- * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
- *     try:
- *         _import_umath()
+ * 
+ * class Geocentric(CRS):             # <<<<<<<<<<<<<<
+ *     """
+ *     Define a Geocentric coordinate system, where x, y, z are Cartesian
  */
-  __Pyx_TraceLine(1040,0,__PYX_ERR(2, 1040, __pyx_L1_error))
+  __pyx_t_7 = __Pyx_Py3ClassCreate(__pyx_t_5, __pyx_n_s_Geocentric, __pyx_t_1, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 612, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_7);
+  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Geocentric, __pyx_t_7) < 0) __PYX_ERR(0, 612, __pyx_L1_error)
+  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
+  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
+  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
+  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
+  /* "cartopy/_crs.pyx":1
+ * # Copyright Cartopy Contributors             # <<<<<<<<<<<<<<
+ * #
+ * # This file is part of Cartopy and is released under the LGPL license.
+ */
+  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
+  __Pyx_GOTREF(__pyx_t_1);
+  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
+  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
 
-  /* "../../../miniconda/envs/test-environment/lib/python3.6/site-packages/Cython/Includes/numpy/__init__.pxd":1046
- *         raise ImportError("numpy.core.umath failed to import")
+  /* "../../../../../../../../../../Volumes/apfs_sens/conda/lib/python3.7/site-packages/numpy/__init__.pxd":1014
  * 
- * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
- *     try:
- *         _import_umath()
+ * 
+ * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
+ *     """
+ *     returns the unit part of the dtype for a numpy datetime64 object.
  */
-  __Pyx_TraceLine(1046,0,__PYX_ERR(2, 1046, __pyx_L1_error))
-
-  __Pyx_TraceReturn(Py_None, 0);
 
   /*--- Wrapped vars code ---*/
 
@@ -17102,123 +14390,6 @@ static PyObject *__Pyx_GetBuiltinName(Py
     return result;
 }
 
-/* PyErrFetchRestore */
-#if CYTHON_FAST_THREAD_STATE
-static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
-    PyObject *tmp_type, *tmp_value, *tmp_tb;
-    tmp_type = tstate->curexc_type;
-    tmp_value = tstate->curexc_value;
-    tmp_tb = tstate->curexc_traceback;
-    tstate->curexc_type = type;
-    tstate->curexc_value = value;
-    tstate->curexc_traceback = tb;
-    Py_XDECREF(tmp_type);
-    Py_XDECREF(tmp_value);
-    Py_XDECREF(tmp_tb);
-}
-static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
-    *type = tstate->curexc_type;
-    *value = tstate->curexc_value;
-    *tb = tstate->curexc_traceback;
-    tstate->curexc_type = 0;
-    tstate->curexc_value = 0;
-    tstate->curexc_traceback = 0;
-}
-#endif
-
-/* Profile */
-#if CYTHON_PROFILE
-static int __Pyx_TraceSetupAndCall(PyCodeObject** code,
-                                   PyFrameObject** frame,
-                                   PyThreadState* tstate,
-                                   const char *funcname,
-                                   const char *srcfile,
-                                   int firstlineno) {
-    PyObject *type, *value, *traceback;
-    int retval;
-    if (*frame == NULL || !CYTHON_PROFILE_REUSE_FRAME) {
-        if (*code == NULL) {
-            *code = __Pyx_createFrameCodeObject(funcname, srcfile, firstlineno);
-            if (*code == NULL) return 0;
-        }
-        *frame = PyFrame_New(
-            tstate,                          /*PyThreadState *tstate*/
-            *code,                           /*PyCodeObject *code*/
-            __pyx_d,                  /*PyObject *globals*/
-            0                                /*PyObject *locals*/
-        );
-        if (*frame == NULL) return 0;
-        if (CYTHON_TRACE && (*frame)->f_trace == NULL) {
-            Py_INCREF(Py_None);
-            (*frame)->f_trace = Py_None;
-        }
-#if PY_VERSION_HEX < 0x030400B1
-    } else {
-        (*frame)->f_tstate = tstate;
-#endif
-    }
-      __Pyx_PyFrame_SetLineNumber(*frame, firstlineno);
-    retval = 1;
-    tstate->tracing++;
-    tstate->use_tracing = 0;
-    __Pyx_ErrFetchInState(tstate, &type, &value, &traceback);
-    #if CYTHON_TRACE
-    if (tstate->c_tracefunc)
-        retval = tstate->c_tracefunc(tstate->c_traceobj, *frame, PyTrace_CALL, NULL) == 0;
-    if (retval && tstate->c_profilefunc)
-    #endif
-        retval = tstate->c_profilefunc(tstate->c_profileobj, *frame, PyTrace_CALL, NULL) == 0;
-    tstate->use_tracing = (tstate->c_profilefunc ||
-                           (CYTHON_TRACE && tstate->c_tracefunc));
-    tstate->tracing--;
-    if (retval) {
-        __Pyx_ErrRestoreInState(tstate, type, value, traceback);
-        return tstate->use_tracing && retval;
-    } else {
-        Py_XDECREF(type);
-        Py_XDECREF(value);
-        Py_XDECREF(traceback);
-        return -1;
-    }
-}
-static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno) {
-    PyCodeObject *py_code = 0;
-#if PY_MAJOR_VERSION >= 3
-    py_code = PyCode_NewEmpty(srcfile, funcname, firstlineno);
-    if (likely(py_code)) {
-        py_code->co_flags |= CO_OPTIMIZED | CO_NEWLOCALS;
-    }
-#else
-    PyObject *py_srcfile = 0;
-    PyObject *py_funcname = 0;
-    py_funcname = PyString_FromString(funcname);
-    if (unlikely(!py_funcname)) goto bad;
-    py_srcfile = PyString_FromString(srcfile);
-    if (unlikely(!py_srcfile)) goto bad;
-    py_code = PyCode_New(
-        0,
-        0,
-        0,
-        CO_OPTIMIZED | CO_NEWLOCALS,
-        __pyx_empty_bytes,     /*PyObject *code,*/
-        __pyx_empty_tuple,     /*PyObject *consts,*/
-        __pyx_empty_tuple,     /*PyObject *names,*/
-        __pyx_empty_tuple,     /*PyObject *varnames,*/
-        __pyx_empty_tuple,     /*PyObject *freevars,*/
-        __pyx_empty_tuple,     /*PyObject *cellvars,*/
-        py_srcfile,       /*PyObject *filename,*/
-        py_funcname,      /*PyObject *name,*/
-        firstlineno,
-        __pyx_empty_bytes      /*PyObject *lnotab*/
-    );
-bad:
-    Py_XDECREF(py_srcfile);
-    Py_XDECREF(py_funcname);
-#endif
-    return py_code;
-}
-#endif
-
 /* PyDictVersioning */
 #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
 static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
@@ -17403,7 +14574,7 @@ done:
 #if CYTHON_COMPILING_IN_CPYTHON
 static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
     PyObject *result;
-    ternaryfunc call = func->ob_type->tp_call;
+    ternaryfunc call = Py_TYPE(func)->tp_call;
     if (unlikely(!call))
         return PyObject_Call(func, arg, kw);
     if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
@@ -17506,7 +14677,7 @@ static CYTHON_INLINE PyObject* __Pyx_PyO
         if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
             return __Pyx_PyObject_CallMethO(func, arg);
 #if CYTHON_FAST_PYCCALL
-        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
+        } else if (__Pyx_PyFastCFunction_Check(func)) {
             return __Pyx_PyCFunction_FastCall(func, &arg, 1);
 #endif
         }
@@ -18068,9 +15239,7 @@ static PyObject *
 __pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
 {
     const char *ts = *tsp;
-    int i = 0, number;
-    int ndim = ctx->head->field->type->ndim;
-;
+    int i = 0, number, ndim;
     ++ts;
     if (ctx->new_count != 1) {
         PyErr_SetString(PyExc_ValueError,
@@ -18078,6 +15247,7 @@ __pyx_buffmt_parse_array(__Pyx_BufFmt_Co
         return NULL;
     }
     if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
+    ndim = ctx->head->field->type->ndim;
     while (*ts && *ts != ')') {
         switch (*ts) {
             case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
@@ -18207,8 +15377,8 @@ static const char* __Pyx_BufFmt_CheckStr
       case 'l': case 'L': case 'q': case 'Q':
       case 'f': case 'd': case 'g':
       case 'O': case 'p':
-        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
-            ctx->enc_packmode == ctx->new_packmode) {
+        if ((ctx->enc_type == *ts) && (got_Z == ctx->is_complex) &&
+            (ctx->enc_packmode == ctx->new_packmode) && (!ctx->is_valid_array)) {
           ctx->enc_count += ctx->new_count;
           ctx->new_count = 1;
           got_Z = 0;
@@ -18489,6 +15659,30 @@ static PyObject *__Pyx_PyDict_GetItem(Py
      "Out of bounds on buffer access (axis %d)", axis);
 }
 
+/* PyErrFetchRestore */
+  #if CYTHON_FAST_THREAD_STATE
+static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
+    PyObject *tmp_type, *tmp_value, *tmp_tb;
+    tmp_type = tstate->curexc_type;
+    tmp_value = tstate->curexc_value;
+    tmp_tb = tstate->curexc_traceback;
+    tstate->curexc_type = type;
+    tstate->curexc_value = value;
+    tstate->curexc_traceback = tb;
+    Py_XDECREF(tmp_type);
+    Py_XDECREF(tmp_value);
+    Py_XDECREF(tmp_tb);
+}
+static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
+    *type = tstate->curexc_type;
+    *value = tstate->curexc_value;
+    *tb = tstate->curexc_traceback;
+    tstate->curexc_type = 0;
+    tstate->curexc_value = 0;
+    tstate->curexc_traceback = 0;
+}
+#endif
+
 /* None */
   static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
     PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
@@ -18530,118 +15724,362 @@ static PyObject *__Pyx_PyDict_GetItem(Py
     }
     return 0;
 #else
-    if (unlikely(PyErr_Occurred())) {
-        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
-            PyErr_Clear();
-            return 0;
-        } else {
-            return -1;
-        }
+    if (unlikely(PyErr_Occurred())) {
+        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
+            PyErr_Clear();
+            return 0;
+        } else {
+            return -1;
+        }
+    }
+    return 0;
+#endif
+}
+
+/* UnpackItemEndCheck */
+  static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
+    if (unlikely(retval)) {
+        Py_DECREF(retval);
+        __Pyx_RaiseTooManyValuesError(expected);
+        return -1;
+    } else {
+        return __Pyx_IterFinish();
+    }
+    return 0;
+}
+
+/* KeywordStringCheck */
+  static int __Pyx_CheckKeywordStrings(
+    PyObject *kwdict,
+    const char* function_name,
+    int kw_allowed)
+{
+    PyObject* key = 0;
+    Py_ssize_t pos = 0;
+#if CYTHON_COMPILING_IN_PYPY
+    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
+        goto invalid_keyword;
+    return 1;
+#else
+    while (PyDict_Next(kwdict, &pos, &key, 0)) {
+        #if PY_MAJOR_VERSION < 3
+        if (unlikely(!PyString_Check(key)))
+        #endif
+            if (unlikely(!PyUnicode_Check(key)))
+                goto invalid_keyword_type;
+    }
+    if ((!kw_allowed) && unlikely(key))
+        goto invalid_keyword;
+    return 1;
+invalid_keyword_type:
+    PyErr_Format(PyExc_TypeError,
+        "%.200s() keywords must be strings", function_name);
+    return 0;
+#endif
+invalid_keyword:
+    PyErr_Format(PyExc_TypeError,
+    #if PY_MAJOR_VERSION < 3
+        "%.200s() got an unexpected keyword argument '%.200s'",
+        function_name, PyString_AsString(key));
+    #else
+        "%s() got an unexpected keyword argument '%U'",
+        function_name, key);
+    #endif
+    return 0;
+}
+
+/* PyObjectGetMethod */
+  static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
+    PyObject *attr;
+#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
+    PyTypeObject *tp = Py_TYPE(obj);
+    PyObject *descr;
+    descrgetfunc f = NULL;
+    PyObject **dictptr, *dict;
+    int meth_found = 0;
+    assert (*method == NULL);
+    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
+        attr = __Pyx_PyObject_GetAttrStr(obj, name);
+        goto try_unpack;
+    }
+    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
+        return 0;
+    }
+    descr = _PyType_Lookup(tp, name);
+    if (likely(descr != NULL)) {
+        Py_INCREF(descr);
+#if PY_MAJOR_VERSION >= 3
+        #ifdef __Pyx_CyFunction_USED
+        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
+        #else
+        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
+        #endif
+#else
+        #ifdef __Pyx_CyFunction_USED
+        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
+        #else
+        if (likely(PyFunction_Check(descr)))
+        #endif
+#endif
+        {
+            meth_found = 1;
+        } else {
+            f = Py_TYPE(descr)->tp_descr_get;
+            if (f != NULL && PyDescr_IsData(descr)) {
+                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
+                Py_DECREF(descr);
+                goto try_unpack;
+            }
+        }
+    }
+    dictptr = _PyObject_GetDictPtr(obj);
+    if (dictptr != NULL && (dict = *dictptr) != NULL) {
+        Py_INCREF(dict);
+        attr = __Pyx_PyDict_GetItemStr(dict, name);
+        if (attr != NULL) {
+            Py_INCREF(attr);
+            Py_DECREF(dict);
+            Py_XDECREF(descr);
+            goto try_unpack;
+        }
+        Py_DECREF(dict);
+    }
+    if (meth_found) {
+        *method = descr;
+        return 1;
+    }
+    if (f != NULL) {
+        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
+        Py_DECREF(descr);
+        goto try_unpack;
+    }
+    if (descr != NULL) {
+        *method = descr;
+        return 0;
+    }
+    PyErr_Format(PyExc_AttributeError,
+#if PY_MAJOR_VERSION >= 3
+                 "'%.50s' object has no attribute '%U'",
+                 tp->tp_name, name);
+#else
+                 "'%.50s' object has no attribute '%.400s'",
+                 tp->tp_name, PyString_AS_STRING(name));
+#endif
+    return 0;
+#else
+    attr = __Pyx_PyObject_GetAttrStr(obj, name);
+    goto try_unpack;
+#endif
+try_unpack:
+#if CYTHON_UNPACK_METHODS
+    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
+        PyObject *function = PyMethod_GET_FUNCTION(attr);
+        Py_INCREF(function);
+        Py_DECREF(attr);
+        *method = function;
+        return 1;
     }
-    return 0;
 #endif
+    *method = attr;
+    return 0;
 }
 
-/* UnpackItemEndCheck */
-  static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
-    if (unlikely(retval)) {
-        Py_DECREF(retval);
-        __Pyx_RaiseTooManyValuesError(expected);
-        return -1;
+/* PyObjectCallMethod0 */
+  static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
+    PyObject *method = NULL, *result = NULL;
+    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
+    if (likely(is_method)) {
+        result = __Pyx_PyObject_CallOneArg(method, obj);
+        Py_DECREF(method);
+        return result;
+    }
+    if (unlikely(!method)) goto bad;
+    result = __Pyx_PyObject_CallNoArg(method);
+    Py_DECREF(method);
+bad:
+    return result;
+}
+
+/* RaiseNoneIterError */
+  static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
+    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
+}
+
+/* UnpackTupleError */
+  static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
+    if (t == Py_None) {
+      __Pyx_RaiseNoneNotIterableError();
+    } else if (PyTuple_GET_SIZE(t) < index) {
+      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
     } else {
-        return __Pyx_IterFinish();
+      __Pyx_RaiseTooManyValuesError(index);
     }
-    return 0;
 }
 
-/* KeywordStringCheck */
-  static int __Pyx_CheckKeywordStrings(
-    PyObject *kwdict,
-    const char* function_name,
-    int kw_allowed)
-{
-    PyObject* key = 0;
-    Py_ssize_t pos = 0;
+/* UnpackTuple2 */
+  static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
+        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
+    PyObject *value1 = NULL, *value2 = NULL;
 #if CYTHON_COMPILING_IN_PYPY
-    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
-        goto invalid_keyword;
-    return 1;
+    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
+    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
 #else
-    while (PyDict_Next(kwdict, &pos, &key, 0)) {
-        #if PY_MAJOR_VERSION < 3
-        if (unlikely(!PyString_Check(key)))
-        #endif
-            if (unlikely(!PyUnicode_Check(key)))
-                goto invalid_keyword_type;
+    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
+    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
+#endif
+    if (decref_tuple) {
+        Py_DECREF(tuple);
     }
-    if ((!kw_allowed) && unlikely(key))
-        goto invalid_keyword;
-    return 1;
-invalid_keyword_type:
-    PyErr_Format(PyExc_TypeError,
-        "%.200s() keywords must be strings", function_name);
+    *pvalue1 = value1;
+    *pvalue2 = value2;
     return 0;
+#if CYTHON_COMPILING_IN_PYPY
+bad:
+    Py_XDECREF(value1);
+    Py_XDECREF(value2);
+    if (decref_tuple) { Py_XDECREF(tuple); }
+    return -1;
 #endif
-invalid_keyword:
-    PyErr_Format(PyExc_TypeError,
-    #if PY_MAJOR_VERSION < 3
-        "%.200s() got an unexpected keyword argument '%.200s'",
-        function_name, PyString_AsString(key));
-    #else
-        "%s() got an unexpected keyword argument '%U'",
-        function_name, key);
-    #endif
+}
+static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
+                                       int has_known_size, int decref_tuple) {
+    Py_ssize_t index;
+    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
+    iternextfunc iternext;
+    iter = PyObject_GetIter(tuple);
+    if (unlikely(!iter)) goto bad;
+    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
+    iternext = Py_TYPE(iter)->tp_iternext;
+    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
+    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
+    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
+    Py_DECREF(iter);
+    *pvalue1 = value1;
+    *pvalue2 = value2;
     return 0;
+unpacking_failed:
+    if (!has_known_size && __Pyx_IterFinish() == 0)
+        __Pyx_RaiseNeedMoreValuesError(index);
+bad:
+    Py_XDECREF(iter);
+    Py_XDECREF(value1);
+    Py_XDECREF(value2);
+    if (decref_tuple) { Py_XDECREF(tuple); }
+    return -1;
 }
 
-/* WriteUnraisableException */
-  static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
-                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
-                                  int full_traceback, CYTHON_UNUSED int nogil) {
-    PyObject *old_exc, *old_val, *old_tb;
-    PyObject *ctx;
-    __Pyx_PyThreadState_declare
-#ifdef WITH_THREAD
-    PyGILState_STATE state;
-    if (nogil)
-        state = PyGILState_Ensure();
-#ifdef _MSC_VER
-    else state = (PyGILState_STATE)-1;
+/* dict_iter */
+  static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
+                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
+    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
+    *p_source_is_dict = is_dict;
+    if (is_dict) {
+#if !CYTHON_COMPILING_IN_PYPY
+        *p_orig_length = PyDict_Size(iterable);
+        Py_INCREF(iterable);
+        return iterable;
+#elif PY_MAJOR_VERSION >= 3
+        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
+        PyObject **pp = NULL;
+        if (method_name) {
+            const char *name = PyUnicode_AsUTF8(method_name);
+            if (strcmp(name, "iteritems") == 0) pp = &py_items;
+            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
+            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
+            if (pp) {
+                if (!*pp) {
+                    *pp = PyUnicode_FromString(name + 4);
+                    if (!*pp)
+                        return NULL;
+                }
+                method_name = *pp;
+            }
+        }
 #endif
+    }
+    *p_orig_length = 0;
+    if (method_name) {
+        PyObject* iter;
+        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
+        if (!iterable)
+            return NULL;
+#if !CYTHON_COMPILING_IN_PYPY
+        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
+            return iterable;
+#endif
+        iter = PyObject_GetIter(iterable);
+        Py_DECREF(iterable);
+        return iter;
+    }
+    return PyObject_GetIter(iterable);
+}
+static CYTHON_INLINE int __Pyx_dict_iter_next(
+        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
+        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
+    PyObject* next_item;
+#if !CYTHON_COMPILING_IN_PYPY
+    if (source_is_dict) {
+        PyObject *key, *value;
+        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
+            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
+            return -1;
+        }
+        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
+            return 0;
+        }
+        if (pitem) {
+            PyObject* tuple = PyTuple_New(2);
+            if (unlikely(!tuple)) {
+                return -1;
+            }
+            Py_INCREF(key);
+            Py_INCREF(value);
+            PyTuple_SET_ITEM(tuple, 0, key);
+            PyTuple_SET_ITEM(tuple, 1, value);
+            *pitem = tuple;
+        } else {
+            if (pkey) {
+                Py_INCREF(key);
+                *pkey = key;
+            }
+            if (pvalue) {
+                Py_INCREF(value);
+                *pvalue = value;
+            }
+        }
+        return 1;
+    } else if (PyTuple_CheckExact(iter_obj)) {
+        Py_ssize_t pos = *ppos;
+        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
+        *ppos = pos + 1;
+        next_item = PyTuple_GET_ITEM(iter_obj, pos);
+        Py_INCREF(next_item);
+    } else if (PyList_CheckExact(iter_obj)) {
+        Py_ssize_t pos = *ppos;
+        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
+        *ppos = pos + 1;
+        next_item = PyList_GET_ITEM(iter_obj, pos);
+        Py_INCREF(next_item);
+    } else
 #endif
-    __Pyx_PyThreadState_assign
-    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
-    if (full_traceback) {
-        Py_XINCREF(old_exc);
-        Py_XINCREF(old_val);
-        Py_XINCREF(old_tb);
-        __Pyx_ErrRestore(old_exc, old_val, old_tb);
-        PyErr_PrintEx(1);
+    {
+        next_item = PyIter_Next(iter_obj);
+        if (unlikely(!next_item)) {
+            return __Pyx_IterFinish();
+        }
     }
-    #if PY_MAJOR_VERSION < 3
-    ctx = PyString_FromString(name);
-    #else
-    ctx = PyUnicode_FromString(name);
-    #endif
-    __Pyx_ErrRestore(old_exc, old_val, old_tb);
-    if (!ctx) {
-        PyErr_WriteUnraisable(Py_None);
+    if (pitem) {
+        *pitem = next_item;
+    } else if (pkey && pvalue) {
+        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
+            return -1;
+    } else if (pkey) {
+        *pkey = next_item;
     } else {
-        PyErr_WriteUnraisable(ctx);
-        Py_DECREF(ctx);
+        *pvalue = next_item;
     }
-#ifdef WITH_THREAD
-    if (nogil)
-        PyGILState_Release(state);
-#endif
-}
-
-/* StringJoin */
-  #if !CYTHON_COMPILING_IN_CPYTHON
-static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values) {
-    return PyObject_CallMethodObjArgs(sep, __pyx_n_s_join, values, NULL);
+    return 1;
 }
-#endif
 
 /* RaiseException */
   #if PY_MAJOR_VERSION < 3
@@ -19117,11 +16555,6 @@ static PyObject *__Pyx_PyObject_GetItem(
         PyObject_RichCompare(op1, op2, Py_NE));
 }
 
-/* RaiseNoneIterError */
-  static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
-    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
-}
-
 /* GetTopmostException */
   #if CYTHON_USE_EXC_INFO_STACK
 static _PyErr_StackItem *
@@ -19831,7 +17264,8 @@ static PyObject *
 __Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
 {
 #if PY_MAJOR_VERSION >= 3
-    return PyUnicode_FromString(m->func.m_ml->ml_name);
+    Py_INCREF(m->func_qualname);
+    return m->func_qualname;
 #else
     return PyString_FromString(m->func.m_ml->ml_name);
 #endif
@@ -19936,6 +17370,7 @@ static int __Pyx_CyFunction_traverse(__p
 }
 static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
 {
+#if PY_MAJOR_VERSION < 3
     __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
     if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
         Py_INCREF(func);
@@ -19948,6 +17383,7 @@ static PyObject *__Pyx_CyFunction_descr_
     }
     if (obj == Py_None)
         obj = NULL;
+#endif
     return __Pyx_PyMethod_New(func, obj, type);
 }
 static PyObject*
@@ -20430,7 +17866,6 @@ bad:
 #if PY_MAJOR_VERSION < 3
 static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
     if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
-        if (__Pyx_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pw_5numpy_7ndarray_1__getbuffer__(obj, view, flags);
     PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
     return -1;
 }
@@ -20442,127 +17877,33 @@ static void __Pyx_ReleaseBuffer(Py_buffe
         return;
     }
     if ((0)) {}
-        else if (__Pyx_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) __pyx_pw_5numpy_7ndarray_3__releasebuffer__(obj, view);
     view->obj = NULL;
     Py_DECREF(obj);
 }
-#endif
-
-
-  /* CIntFromPyVerify */
-  #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
-    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
-#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
-    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
-#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
-    {\
-        func_type value = func_value;\
-        if (sizeof(target_type) < sizeof(func_type)) {\
-            if (unlikely(value != (func_type) (target_type) value)) {\
-                func_type zero = 0;\
-                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
-                    return (target_type) -1;\
-                if (is_unsigned && unlikely(value < zero))\
-                    goto raise_neg_overflow;\
-                else\
-                    goto raise_overflow;\
-            }\
-        }\
-        return (target_type) value;\
-    }
-
-/* CIntToPy */
-  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
-    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
-    const int is_unsigned = neg_one > const_zero;
-    if (is_unsigned) {
-        if (sizeof(int) < sizeof(long)) {
-            return PyInt_FromLong((long) value);
-        } else if (sizeof(int) <= sizeof(unsigned long)) {
-            return PyLong_FromUnsignedLong((unsigned long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
-            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
-#endif
-        }
-    } else {
-        if (sizeof(int) <= sizeof(long)) {
-            return PyInt_FromLong((long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
-            return PyLong_FromLongLong((PY_LONG_LONG) value);
-#endif
-        }
-    }
-    {
-        int one = 1; int little = (int)*(unsigned char *)&one;
-        unsigned char *bytes = (unsigned char *)&value;
-        return _PyLong_FromByteArray(bytes, sizeof(int),
-                                     little, !is_unsigned);
-    }
-}
-
-/* CIntToPy */
-  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value) {
-    const Py_intptr_t neg_one = (Py_intptr_t) ((Py_intptr_t) 0 - (Py_intptr_t) 1), const_zero = (Py_intptr_t) 0;
-    const int is_unsigned = neg_one > const_zero;
-    if (is_unsigned) {
-        if (sizeof(Py_intptr_t) < sizeof(long)) {
-            return PyInt_FromLong((long) value);
-        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
-            return PyLong_FromUnsignedLong((unsigned long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned PY_LONG_LONG)) {
-            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
-#endif
-        }
-    } else {
-        if (sizeof(Py_intptr_t) <= sizeof(long)) {
-            return PyInt_FromLong((long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(Py_intptr_t) <= sizeof(PY_LONG_LONG)) {
-            return PyLong_FromLongLong((PY_LONG_LONG) value);
-#endif
-        }
-    }
-    {
-        int one = 1; int little = (int)*(unsigned char *)&one;
-        unsigned char *bytes = (unsigned char *)&value;
-        return _PyLong_FromByteArray(bytes, sizeof(Py_intptr_t),
-                                     little, !is_unsigned);
-    }
-}
-
-/* CIntToPy */
-  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
-    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
-    const int is_unsigned = neg_one > const_zero;
-    if (is_unsigned) {
-        if (sizeof(long) < sizeof(long)) {
-            return PyInt_FromLong((long) value);
-        } else if (sizeof(long) <= sizeof(unsigned long)) {
-            return PyLong_FromUnsignedLong((unsigned long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
-            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
-#endif
-        }
-    } else {
-        if (sizeof(long) <= sizeof(long)) {
-            return PyInt_FromLong((long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
-            return PyLong_FromLongLong((PY_LONG_LONG) value);
-#endif
-        }
-    }
-    {
-        int one = 1; int little = (int)*(unsigned char *)&one;
-        unsigned char *bytes = (unsigned char *)&value;
-        return _PyLong_FromByteArray(bytes, sizeof(long),
-                                     little, !is_unsigned);
-    }
-}
+#endif
+
+
+  /* CIntFromPyVerify */
+  #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
+    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
+#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
+    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
+#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
+    {\
+        func_type value = func_value;\
+        if (sizeof(target_type) < sizeof(func_type)) {\
+            if (unlikely(value != (func_type) (target_type) value)) {\
+                func_type zero = 0;\
+                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
+                    return (target_type) -1;\
+                if (is_unsigned && unlikely(value < zero))\
+                    goto raise_neg_overflow;\
+                else\
+                    goto raise_overflow;\
+            }\
+        }\
+        return (target_type) value;\
+    }
 
 /* Declarations */
   #if CYTHON_CCOMPLEX
@@ -20872,40 +18213,16 @@ static void __Pyx_ReleaseBuffer(Py_buffe
     #endif
 #endif
 
-/* CIntToPy */
-  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
-    const enum NPY_TYPES neg_one = (enum NPY_TYPES) ((enum NPY_TYPES) 0 - (enum NPY_TYPES) 1), const_zero = (enum NPY_TYPES) 0;
-    const int is_unsigned = neg_one > const_zero;
-    if (is_unsigned) {
-        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
-            return PyInt_FromLong((long) value);
-        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
-            return PyLong_FromUnsignedLong((unsigned long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
-            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
-#endif
-        }
-    } else {
-        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
-            return PyInt_FromLong((long) value);
-#ifdef HAVE_LONG_LONG
-        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
-            return PyLong_FromLongLong((PY_LONG_LONG) value);
-#endif
-        }
-    }
-    {
-        int one = 1; int little = (int)*(unsigned char *)&one;
-        unsigned char *bytes = (unsigned char *)&value;
-        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
-                                     little, !is_unsigned);
-    }
-}
-
 /* CIntFromPy */
   static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
-    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const int neg_one = (int) -1, const_zero = (int) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
     const int is_unsigned = neg_one > const_zero;
 #if PY_MAJOR_VERSION < 3
     if (likely(PyInt_Check(x))) {
@@ -21092,9 +18409,130 @@ raise_neg_overflow:
     return (int) -1;
 }
 
+/* CIntToPy */
+  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const int neg_one = (int) -1, const_zero = (int) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
+    const int is_unsigned = neg_one > const_zero;
+    if (is_unsigned) {
+        if (sizeof(int) < sizeof(long)) {
+            return PyInt_FromLong((long) value);
+        } else if (sizeof(int) <= sizeof(unsigned long)) {
+            return PyLong_FromUnsignedLong((unsigned long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
+            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
+#endif
+        }
+    } else {
+        if (sizeof(int) <= sizeof(long)) {
+            return PyInt_FromLong((long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
+            return PyLong_FromLongLong((PY_LONG_LONG) value);
+#endif
+        }
+    }
+    {
+        int one = 1; int little = (int)*(unsigned char *)&one;
+        unsigned char *bytes = (unsigned char *)&value;
+        return _PyLong_FromByteArray(bytes, sizeof(int),
+                                     little, !is_unsigned);
+    }
+}
+
+/* CIntToPy */
+  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value) {
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const Py_intptr_t neg_one = (Py_intptr_t) -1, const_zero = (Py_intptr_t) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
+    const int is_unsigned = neg_one > const_zero;
+    if (is_unsigned) {
+        if (sizeof(Py_intptr_t) < sizeof(long)) {
+            return PyInt_FromLong((long) value);
+        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
+            return PyLong_FromUnsignedLong((unsigned long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned PY_LONG_LONG)) {
+            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
+#endif
+        }
+    } else {
+        if (sizeof(Py_intptr_t) <= sizeof(long)) {
+            return PyInt_FromLong((long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(Py_intptr_t) <= sizeof(PY_LONG_LONG)) {
+            return PyLong_FromLongLong((PY_LONG_LONG) value);
+#endif
+        }
+    }
+    {
+        int one = 1; int little = (int)*(unsigned char *)&one;
+        unsigned char *bytes = (unsigned char *)&value;
+        return _PyLong_FromByteArray(bytes, sizeof(Py_intptr_t),
+                                     little, !is_unsigned);
+    }
+}
+
+/* CIntToPy */
+  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const long neg_one = (long) -1, const_zero = (long) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
+    const int is_unsigned = neg_one > const_zero;
+    if (is_unsigned) {
+        if (sizeof(long) < sizeof(long)) {
+            return PyInt_FromLong((long) value);
+        } else if (sizeof(long) <= sizeof(unsigned long)) {
+            return PyLong_FromUnsignedLong((unsigned long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
+            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
+#endif
+        }
+    } else {
+        if (sizeof(long) <= sizeof(long)) {
+            return PyInt_FromLong((long) value);
+#ifdef HAVE_LONG_LONG
+        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
+            return PyLong_FromLongLong((PY_LONG_LONG) value);
+#endif
+        }
+    }
+    {
+        int one = 1; int little = (int)*(unsigned char *)&one;
+        unsigned char *bytes = (unsigned char *)&value;
+        return _PyLong_FromByteArray(bytes, sizeof(long),
+                                     little, !is_unsigned);
+    }
+}
+
 /* CIntFromPy */
   static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
-    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wconversion"
+#endif
+    const long neg_one = (long) -1, const_zero = (long) 0;
+#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
+#pragma GCC diagnostic pop
+#endif
     const int is_unsigned = neg_one > const_zero;
 #if PY_MAJOR_VERSION < 3
     if (likely(PyInt_Check(x))) {
@@ -21416,102 +18854,6 @@ static CYTHON_INLINE void __Pyx_Exceptio
 }
 #endif
 
-/* PyObjectGetMethod */
-  static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
-    PyObject *attr;
-#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
-    PyTypeObject *tp = Py_TYPE(obj);
-    PyObject *descr;
-    descrgetfunc f = NULL;
-    PyObject **dictptr, *dict;
-    int meth_found = 0;
-    assert (*method == NULL);
-    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
-        attr = __Pyx_PyObject_GetAttrStr(obj, name);
-        goto try_unpack;
-    }
-    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
-        return 0;
-    }
-    descr = _PyType_Lookup(tp, name);
-    if (likely(descr != NULL)) {
-        Py_INCREF(descr);
-#if PY_MAJOR_VERSION >= 3
-        #ifdef __Pyx_CyFunction_USED
-        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
-        #else
-        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
-        #endif
-#else
-        #ifdef __Pyx_CyFunction_USED
-        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
-        #else
-        if (likely(PyFunction_Check(descr)))
-        #endif
-#endif
-        {
-            meth_found = 1;
-        } else {
-            f = Py_TYPE(descr)->tp_descr_get;
-            if (f != NULL && PyDescr_IsData(descr)) {
-                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
-                Py_DECREF(descr);
-                goto try_unpack;
-            }
-        }
-    }
-    dictptr = _PyObject_GetDictPtr(obj);
-    if (dictptr != NULL && (dict = *dictptr) != NULL) {
-        Py_INCREF(dict);
-        attr = __Pyx_PyDict_GetItemStr(dict, name);
-        if (attr != NULL) {
-            Py_INCREF(attr);
-            Py_DECREF(dict);
-            Py_XDECREF(descr);
-            goto try_unpack;
-        }
-        Py_DECREF(dict);
-    }
-    if (meth_found) {
-        *method = descr;
-        return 1;
-    }
-    if (f != NULL) {
-        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
-        Py_DECREF(descr);
-        goto try_unpack;
-    }
-    if (descr != NULL) {
-        *method = descr;
-        return 0;
-    }
-    PyErr_Format(PyExc_AttributeError,
-#if PY_MAJOR_VERSION >= 3
-                 "'%.50s' object has no attribute '%U'",
-                 tp->tp_name, name);
-#else
-                 "'%.50s' object has no attribute '%.400s'",
-                 tp->tp_name, PyString_AS_STRING(name));
-#endif
-    return 0;
-#else
-    attr = __Pyx_PyObject_GetAttrStr(obj, name);
-    goto try_unpack;
-#endif
-try_unpack:
-#if CYTHON_UNPACK_METHODS
-    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
-        PyObject *function = PyMethod_GET_FUNCTION(attr);
-        Py_INCREF(function);
-        Py_DECREF(attr);
-        *method = function;
-        return 1;
-    }
-#endif
-    *method = attr;
-    return 0;
-}
-
 /* PyObjectCallMethod1 */
   static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
     PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
@@ -21759,6 +19101,30 @@ PyObject *__Pyx_Coroutine_MethodReturn(C
     }
     return retval;
 }
+#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
+static CYTHON_INLINE
+PyObject *__Pyx_PyGen_Send(PyGenObject *gen, PyObject *arg) {
+#if PY_VERSION_HEX <= 0x030A00A1
+    return _PyGen_Send(gen, arg);
+#else
+    PyObject *result;
+    if (PyIter_Send((PyObject*)gen, arg ? arg : Py_None, &result) == PYGEN_RETURN) {
+        if (PyAsyncGen_CheckExact(gen)) {
+            assert(result == Py_None);
+            PyErr_SetNone(PyExc_StopAsyncIteration);
+        }
+        else if (result == Py_None) {
+            PyErr_SetNone(PyExc_StopIteration);
+        }
+        else {
+            _PyGen_SetStopIterationValue(result);
+        }
+        Py_CLEAR(result);
+    }
+    return result;
+#endif
+}
+#endif
 static CYTHON_INLINE
 PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
     PyObject *ret;
@@ -21795,12 +19161,12 @@ static PyObject *__Pyx_Coroutine_Send(Py
         #endif
         #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
         if (PyGen_CheckExact(yf)) {
-            ret = _PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
+            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
         } else
         #endif
         #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
         if (PyCoro_CheckExact(yf)) {
-            ret = _PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
+            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
         } else
         #endif
         {
@@ -21884,7 +19250,7 @@ static PyObject *__Pyx_Generator_Next(Py
         #endif
         #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
         if (PyGen_CheckExact(yf)) {
-            ret = _PyGen_Send((PyGenObject*)yf, NULL);
+            ret = __Pyx_PyGen_Send((PyGenObject*)yf, NULL);
         } else
         #endif
         #ifdef __Pyx_Coroutine_USED
@@ -22044,6 +19410,7 @@ static int __Pyx_Coroutine_clear(PyObjec
     }
 #endif
     Py_CLEAR(gen->gi_code);
+    Py_CLEAR(gen->gi_frame);
     Py_CLEAR(gen->gi_name);
     Py_CLEAR(gen->gi_qualname);
     Py_CLEAR(gen->gi_modulename);
@@ -22060,7 +19427,7 @@ static void __Pyx_Coroutine_dealloc(PyOb
         if (PyObject_CallFinalizerFromDealloc(self))
 #else
         Py_TYPE(gen)->tp_del(self);
-        if (self->ob_refcnt > 0)
+        if (Py_REFCNT(self) > 0)
 #endif
         {
             return;
@@ -22087,7 +19454,7 @@ static void __Pyx_Coroutine_del(PyObject
     }
 #if !CYTHON_USE_TP_FINALIZE
     assert(self->ob_refcnt == 0);
-    self->ob_refcnt = 1;
+    __Pyx_SET_REFCNT(self, 1);
 #endif
     __Pyx_PyThreadState_assign
     __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
@@ -22154,17 +19521,17 @@ static void __Pyx_Coroutine_del(PyObject
     }
     __Pyx_ErrRestore(error_type, error_value, error_traceback);
 #if !CYTHON_USE_TP_FINALIZE
-    assert(self->ob_refcnt > 0);
+    assert(Py_REFCNT(self) > 0);
     if (--self->ob_refcnt == 0) {
         return;
     }
     {
-        Py_ssize_t refcnt = self->ob_refcnt;
+        Py_ssize_t refcnt = Py_REFCNT(self);
         _Py_NewReference(self);
-        self->ob_refcnt = refcnt;
+        __Pyx_SET_REFCNT(self, refcnt);
     }
 #if CYTHON_COMPILING_IN_CPYTHON
-    assert(PyType_IS_GC(self->ob_type) &&
+    assert(PyType_IS_GC(Py_TYPE(self)) &&
            _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
     _Py_DEC_REFTOTAL;
 #endif
@@ -22230,6 +19597,27 @@ __Pyx_Coroutine_set_qualname(__pyx_Corou
     Py_XDECREF(tmp);
     return 0;
 }
+static PyObject *
+__Pyx_Coroutine_get_frame(__pyx_CoroutineObject *self, CYTHON_UNUSED void *context)
+{
+    PyObject *frame = self->gi_frame;
+    if (!frame) {
+        if (unlikely(!self->gi_code)) {
+            Py_RETURN_NONE;
+        }
+        frame = (PyObject *) PyFrame_New(
+            PyThreadState_Get(),            /*PyThreadState *tstate,*/
+            (PyCodeObject*) self->gi_code,  /*PyCodeObject *code,*/
+            __pyx_d,                 /*PyObject *globals,*/
+            0                               /*PyObject *locals*/
+        );
+        if (unlikely(!frame))
+            return NULL;
+        self->gi_frame = frame;
+    }
+    Py_INCREF(frame);
+    return frame;
+}
 static __pyx_CoroutineObject *__Pyx__Coroutine_New(
             PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
             PyObject *name, PyObject *qualname, PyObject *module_name) {
@@ -22263,6 +19651,7 @@ static __pyx_CoroutineObject *__Pyx__Cor
     gen->gi_modulename = module_name;
     Py_XINCREF(code);
     gen->gi_code = code;
+    gen->gi_frame = NULL;
     PyObject_GC_Track(gen);
     return gen;
 }
@@ -22386,6 +19775,8 @@ static PyGetSetDef __pyx_Generator_getse
      (char*) PyDoc_STR("name of the generator"), 0},
     {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
      (char*) PyDoc_STR("qualified name of the generator"), 0},
+    {(char *) "gi_frame", (getter)__Pyx_Coroutine_get_frame, NULL,
+     (char*) PyDoc_STR("Frame of the generator"), 0},
     {0, 0, 0, 0, 0}
 };
 static PyTypeObject __pyx_GeneratorType_type = {
